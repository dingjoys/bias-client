{
	"id": "40e2d6ca077e3c2a2ee63ab6feeee555",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		},
		"sources": {
			"contracts/Bias.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./CredentialVerifier.sol\";\r\n\r\ncontract BiasProtocol is ERC20, Ownable{\r\n    event Vote(\r\n        address indexed voter,\r\n        uint indexed topicId,\r\n        uint choice,\r\n        uint weight\r\n    );\r\n    struct Topic {\r\n        address creator;\r\n        uint createdAt;\r\n        string title;\r\n        string content;\r\n        uint funds;\r\n        /**\r\n         * Of participants\r\n         */\r\n        uint max;\r\n    }\r\n\r\n    /**\r\n     * @dev Earnings each vote\r\n     */\r\n    uint public _rewards = 10 * 1e18;\r\n\r\n    Topic[] public _topics;\r\n    /**\r\n     * @dev Votes result storage\r\n     */\r\n    mapping(uint => mapping(uint => uint)) public _votes;\r\n\r\n    /**\r\n     * @dev Voter counts storage\r\n     */\r\n    mapping(uint => uint) public _voterCounts;\r\n\r\n    /**\r\n     * @dev Each user is allowed to create one live topic at the time. Once the topic is fulfilled the user could create the next topic. The purpose is to decrease verbose topics.\r\n     */\r\n    mapping(address => uint) private _living;\r\n    CredentialVerifier private _credentialVerifier;\r\n\r\n    mapping(address => uint256) public _lastJoinTime;\r\n    uint256 constant DAY_IN_SECONDS = 86400;\r\n\r\n    constructor() ERC20(\"BIAS\", \"BIAS\") Ownable(msg.sender){\r\n        // OP\r\n        _credentialVerifier = new CredentialVerifier(0xc94aBf0292Ac04AAC18C251d9C8169a8dd2BBbDC);\r\n    }\r\n\r\n    /**\r\n     * @dev The fund must be more than 10% voter rewards; The creators could get refunds when the topic is fulfilled. It is designed to decrease outdated topics and the creators should choose the participants numebr wisely.\r\n     */\r\n    function create(\r\n        string memory title,\r\n        string memory content,\r\n        uint funds,\r\n        uint max,\r\n        bytes32 gitcoinPassUid\r\n    ) public {\r\n        require(\r\n            _credentialVerifier.verifyGitcionPass(msg.sender, gitcoinPassUid),\r\n            \"not authorized\"\r\n        );\r\n        require(\r\n            topicTotal()==0 || ( balanceOf(msg.sender) >= funds && funds >= (max * _rewards) / 10),\r\n            \"insufficient funds\"\r\n        );\r\n        require(max > 0, \"invalid params\");\r\n        require(_living[msg.sender] == 0, \"only allow one live topic\");\r\n        if(topicTotal()>0){\r\n            // Not Genesis\r\n            _burn(msg.sender, funds);\r\n        }\r\n        _topics.push(\r\n            Topic(msg.sender, block.timestamp, title, content, funds, max)\r\n        );\r\n        _living[msg.sender] = _topics.length - 1;\r\n    }\r\n\r\n    function topicAt(uint index) public returns (Topic memory ) {\r\n        return _topics[index];\r\n    }\r\n\r\n    /**\r\n     * @dev Each single user could vote once per day.\r\n     */\r\n    function vote(uint topicId, uint voteFor, bytes32 gitcoinPassUid) public {\r\n        uint weight = _credentialVerifier.calcWeight(\r\n            msg.sender,\r\n            gitcoinPassUid\r\n        );\r\n        require(weight > 0, \"not authorized\");\r\n        require(_voterCounts[topicId] < _topics[topicId].max, \"finished\");\r\n        require(\r\n            block.timestamp >= _lastJoinTime[msg.sender] + DAY_IN_SECONDS,\r\n            \"once per day\"\r\n        );\r\n        _lastJoinTime[msg.sender] = block.timestamp;\r\n\r\n        _mint(\r\n            msg.sender,\r\n            _rewards * weight + _topics[topicId].funds / _topics[topicId].max\r\n        );\r\n        _voterCounts[topicId] += 1;\r\n        _votes[topicId][voteFor] += weight;\r\n        emit Vote(msg.sender, topicId, voteFor, weight);\r\n\r\n        if (_voterCounts[topicId] == _topics[topicId].max) {\r\n            _living[_topics[topicId].creator] = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev A successful votings could redeem the funds and receive a 10% bonus\r\n     */\r\n    function claimRewards(uint topicId) public {\r\n        require(_voterCounts[topicId] >= _topics[topicId].max, \"not finished\");\r\n        require(_topics[topicId].creator == msg.sender, \"only creator\");\r\n        _mint(msg.sender, _topics[topicId].funds / 5);\r\n    }\r\n\r\n    /**\r\n     * @dev the owner could be migrated to the relayer of inflation control\r\n     */\r\n    function updateRewards(uint rewards_) public onlyOwner {\r\n        _rewards = rewards_;\r\n    }\r\n\r\n    function topics(uint start, uint number) public view returns (Topic[] memory result) {\r\n        result = new Topic[](number);\r\n        for(uint i=0;i<number;i++){\r\n            result[i] = _topics[i+start];\r\n        }\r\n    }\r\n\r\n    function topicTotal() public view returns (uint){\r\n        return _topics.length;\r\n    }\r\n}\r\n"
			},
			"contracts/CredentialVerifier.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./IGitcoinResolver.sol\";\r\n\r\ncontract CredentialVerifier is Ownable {\r\n    \r\n    IGitcoinResolver private _gitcoinResolver;\r\n\r\n    constructor(address gitcoinResolverAddress_) Ownable(_msgSender()) {\r\n        _gitcoinResolver = IGitcoinResolver(gitcoinResolverAddress_);\r\n    }\r\n\r\n    function verifyGitcionPass(address owner, bytes32 uid) public returns (bool) {\r\n        // Testnet\r\n        return true;\r\n        // return uint(_gitcoinResolver.userAttestations(owner, uid)) > 0;\r\n    }\r\n\r\n    function calcWeight(address owner, bytes32 uid) public returns (uint) {\r\n        // Testnet\r\n        if (true) {\r\n            // if (uint(_gitcoinResolver.userAttestations(owner, uid)) > 0) {\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    // TODO\r\n    // 1. integration of other resolvers & credentials\r\n    // 2. framework design\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"contracts/IGitcoinResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract IGitcoinResolver {\r\n    mapping(address => mapping(bytes32 => bytes32)) public userAttestations;\r\n}"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Bias.sol": {
				"BiasProtocol": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topicId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "choice",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								}
							],
							"name": "Vote",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_lastJoinTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "_topics",
							"outputs": [
								{
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "createdAt",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "content",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "funds",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "max",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "_voterCounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "_votes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "topicId",
									"type": "uint256"
								}
							],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "content",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "funds",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "max",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "gitcoinPassUid",
									"type": "bytes32"
								}
							],
							"name": "create",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "topicAt",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "createdAt",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "title",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "content",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "funds",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "max",
											"type": "uint256"
										}
									],
									"internalType": "struct BiasProtocol.Topic",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topicTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "number",
									"type": "uint256"
								}
							],
							"name": "topics",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "createdAt",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "title",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "content",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "funds",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "max",
											"type": "uint256"
										}
									],
									"internalType": "struct BiasProtocol.Topic[]",
									"name": "result",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rewards_",
									"type": "uint256"
								}
							],
							"name": "updateRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "topicId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "voteFor",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "gitcoinPassUid",
									"type": "bytes32"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"claimRewards(uint256)": {
								"details": "A successful votings could redeem the funds and receive a 10% bonus"
							},
							"create(string,string,uint256,uint256,bytes32)": {
								"details": "The fund must be more than 10% voter rewards; The creators could get refunds when the topic is fulfilled. It is designed to decrease outdated topics and the creators should choose the participants numebr wisely."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateRewards(uint256)": {
								"details": "the owner could be migrated to the relayer of inflation control"
							},
							"vote(uint256,uint256,bytes32)": {
								"details": "Each single user could vote once per day."
							}
						},
						"stateVariables": {
							"_living": {
								"details": "Each user is allowed to create one live topic at the time. Once the topic is fulfilled the user could create the next topic. The purpose is to decrease verbose topics."
							},
							"_rewards": {
								"details": "Earnings each vote"
							},
							"_voterCounts": {
								"details": "Voter counts storage"
							},
							"_votes": {
								"details": "Votes result storage"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Bias.sol\":209:4638  contract BiasProtocol is ERC20, Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Bias.sol\":681:690  10 * 1e18 */\n  0x8ac7230489e80000\n    /* \"contracts/Bias.sol\":658:690  uint public _rewards = 10 * 1e18 */\n  0x06\n  sstore\n    /* \"contracts/Bias.sol\":1347:1524  constructor() ERC20(\"BIAS\", \"BIAS\") Ownable(msg.sender){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x04\n  dup1\n  dup3\n  mstore\n  shl(0xe0, 0x42494153)\n  0x20\n  dup1\n  dup5\n  add\n  dup3\n  swap1\n  mstore\n  dup5\n  mload\n  dup1\n  dup7\n  add\n  swap1\n  swap6\n  mstore\n  swap2\n  dup5\n  mstore\n  swap1\n  dup4\n  add\n  mstore\n    /* \"contracts/Bias.sol\":1391:1401  msg.sender */\n  caller\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2881:2932   */\n  mstore\n    /* \"#utility.yul\":2854:2872   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/Bias.sol\":1473:1515  0xc94aBf0292Ac04AAC18C251d9C8169a8dd2BBbDC */\n  0xc94abf0292ac04aac18c251d9c8169a8dd2bbbdc\n    /* \"contracts/Bias.sol\":1450:1516  new CredentialVerifier(0xc94aBf0292Ac04AAC18C251d9C8169a8dd2BBbDC) */\n  mload(0x40)\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":2899:2931   */\n  swap1\n  swap2\n  and\n    /* \"#utility.yul\":2881:2932   */\n  dup2\n  mstore\n    /* \"#utility.yul\":2869:2871   */\n  0x20\n    /* \"#utility.yul\":2854:2872   */\n  add\n    /* \"contracts/Bias.sol\":1450:1516  new CredentialVerifier(0xc94aBf0292Ac04AAC18C251d9C8169a8dd2BBbDC) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  0x00\n  create\n  dup1\n  iszero\n  dup1\n  iszero\n  tag_19\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_19:\n  pop\n    /* \"contracts/Bias.sol\":1428:1447  _credentialVerifier */\n  0x0b\n    /* \"contracts/Bias.sol\":1428:1516  _credentialVerifier = new CredentialVerifier(0xc94aBf0292Ac04AAC18C251d9C8169a8dd2BBbDC) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/Bias.sol\":209:4638  contract BiasProtocol is ERC20, Ownable{... */\n  jump(tag_27)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Bias.sol\":209:4638  contract BiasProtocol is ERC20, Ownable{... */\ntag_17:\n  dataSize(sub_1)\n  dup1\n  dataOffset(sub_1)\n  dup4\n  codecopy\n  add\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_22:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_23:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_30:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_31:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_25:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_35\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_35:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_36:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_36)\ntag_38:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_34:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_7:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_42\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1582:1679   */\n  tag_43\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_44\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_23\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_25\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_46\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_47\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_47:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_38)\n    /* \"#utility.yul\":1810:2473   */\ntag_46:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_50:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_50)\ntag_52:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_53:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":2735:2938   */\ntag_27:\n    /* \"contracts/Bias.sol\":209:4638  contract BiasProtocol is ERC20, Ownable{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Bias.sol\":209:4638  contract BiasProtocol is ERC20, Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xb1e95e94\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xb1e95e94\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xcda411be\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xed2e39a7\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf7cb2657\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x93ad4aca\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x9a383dfd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa6c2da4c\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x313ce567\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x63b6ad97\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x68229099\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8c881eeb\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0962ef79\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0a05b17f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":1269:1283   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1262:1284   */\n      iszero\n        /* \"#utility.yul\":1244:1285   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1232:1234   */\n      0x20\n        /* \"#utility.yul\":1217:1235   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_32\n        /* \"#utility.yul\":1104:1291   */\n      jump\n        /* \"contracts/Bias.sol\":3850:4112  function claimRewards(uint topicId) public {... */\n    tag_5:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/Bias.sol\":1775:2640  function create(... */\n    tag_6:\n      tag_40\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":3237:3262   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3225:3227   */\n      0x20\n        /* \"#utility.yul\":3210:3228   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      tag_32\n        /* \"#utility.yul\":3091:3268   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_34\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":3748:3784   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3736:3738   */\n      0x20\n        /* \"#utility.yul\":3721:3739   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_32\n        /* \"#utility.yul\":3606:3790   */\n      jump\n        /* \"contracts/Bias.sol\":780:832  mapping(uint => mapping(uint => uint)) public _votes */\n    tag_10:\n      tag_48\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      0x08\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Bias.sol\":1244:1292  mapping(address => uint256) public _lastJoinTime */\n    tag_11:\n      tag_48\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      mstore(0x20, 0x0c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_48\n      tag_72\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_40\n      tag_76\n      jump\t// in\n        /* \"contracts/Bias.sol\":2829:3743  function vote(uint topicId, uint voteFor, bytes32 gitcoinPassUid) public {... */\n    tag_14:\n      tag_40\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4706:4757   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4694:4696   */\n      0x20\n        /* \"#utility.yul\":4679:4697   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_32\n        /* \"#utility.yul\":4560:4763   */\n      jump\n        /* \"contracts/Bias.sol\":893:934  mapping(uint => uint) public _voterCounts */\n    tag_16:\n      tag_48\n      tag_86\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_86:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_30\n      tag_90\n      jump\t// in\n        /* \"contracts/Bias.sol\":699:721  Topic[] public _topics */\n    tag_18:\n      tag_92\n      tag_93\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_32\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n        /* \"contracts/Bias.sol\":658:690  uint public _rewards = 10 * 1e18 */\n    tag_19:\n      tag_48\n      sload(0x06)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n      tag_34\n      tag_101\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"contracts/Bias.sol\":4215:4308  function updateRewards(uint rewards_) public onlyOwner {... */\n    tag_21:\n      tag_40\n      tag_105\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"contracts/Bias.sol\":2648:2748  function topicAt(uint index) public returns (Topic memory ) {... */\n    tag_22:\n      tag_107\n      tag_108\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_23:\n      tag_48\n      tag_113\n      calldatasize\n      0x04\n      tag_114\n      jump\t// in\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/Bias.sol\":4316:4539  function topics(uint start, uint number) public view returns (Topic[] memory result) {... */\n    tag_24:\n      tag_117\n      tag_118\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_40\n      tag_123\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n        /* \"contracts/Bias.sol\":4547:4635  function topicTotal() public view returns (uint){... */\n    tag_26:\n        /* \"contracts/Bias.sol\":4613:4620  _topics */\n      0x07\n        /* \"contracts/Bias.sol\":4613:4627  _topics.length */\n      sload\n        /* \"contracts/Bias.sol\":4547:4635  function topicTotal() public view returns (uint){... */\n      jump(tag_48)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_131\n      swap1\n      tag_130\n      jump\t// in\n    tag_131:\n      dup1\n      iszero\n      tag_132\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_133\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_132)\n    tag_133:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_134:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_134\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_135:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Bias.sol\":3850:4112  function claimRewards(uint topicId) public {... */\n    tag_43:\n        /* \"contracts/Bias.sol\":3937:3944  _topics */\n      0x07\n        /* \"contracts/Bias.sol\":3945:3952  topicId */\n      dup2\n        /* \"contracts/Bias.sol\":3937:3953  _topics[topicId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_142\n      jumpi\n      tag_142\n      tag_143\n      jump\t// in\n    tag_142:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/Bias.sol\":3937:3957  _topics[topicId].max */\n      0x05\n      add\n      sload\n        /* \"contracts/Bias.sol\":3912:3924  _voterCounts */\n      0x09\n        /* \"contracts/Bias.sol\":3912:3933  _voterCounts[topicId] */\n      0x00\n        /* \"contracts/Bias.sol\":3925:3932  topicId */\n      dup4\n        /* \"contracts/Bias.sol\":3912:3933  _voterCounts[topicId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Bias.sol\":3912:3957  _voterCounts[topicId] >= _topics[topicId].max */\n      lt\n      iszero\n        /* \"contracts/Bias.sol\":3904:3974  require(_voterCounts[topicId] >= _topics[topicId].max, \"not finished\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8185:8187   */\n      0x20\n        /* \"contracts/Bias.sol\":3904:3974  require(_voterCounts[topicId] >= _topics[topicId].max, \"not finished\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8167:8188   */\n      mstore\n        /* \"#utility.yul\":8224:8226   */\n      0x0c\n        /* \"#utility.yul\":8204:8222   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8197:8227   */\n      mstore\n      shl(0xa2, 0x1b9bdd08199a5b9a5cda1959)\n        /* \"#utility.yul\":8243:8261   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8236:8278   */\n      mstore\n        /* \"#utility.yul\":8295:8313   */\n      0x64\n      add\n        /* \"contracts/Bias.sol\":3904:3974  require(_voterCounts[topicId] >= _topics[topicId].max, \"not finished\") */\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"contracts/Bias.sol\":4021:4031  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Bias.sol\":3993:4031  _topics[topicId].creator == msg.sender */\n      and\n        /* \"contracts/Bias.sol\":3993:4000  _topics */\n      0x07\n        /* \"contracts/Bias.sol\":4001:4008  topicId */\n      dup3\n        /* \"contracts/Bias.sol\":3993:4009  _topics[topicId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_149\n      jumpi\n      tag_149\n      tag_143\n      jump\t// in\n    tag_149:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x06\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/Bias.sol\":3993:4017  _topics[topicId].creator */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Bias.sol\":3993:4031  _topics[topicId].creator == msg.sender */\n      eq\n        /* \"contracts/Bias.sol\":3985:4048  require(_topics[topicId].creator == msg.sender, \"only creator\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8526:8528   */\n      0x20\n        /* \"contracts/Bias.sol\":3985:4048  require(_topics[topicId].creator == msg.sender, \"only creator\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8508:8529   */\n      mstore\n        /* \"#utility.yul\":8565:8567   */\n      0x0c\n        /* \"#utility.yul\":8545:8563   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8538:8568   */\n      mstore\n      shl(0xa1, 0x37b7363c9031b932b0ba37b9)\n        /* \"#utility.yul\":8584:8602   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8577:8619   */\n      mstore\n        /* \"#utility.yul\":8636:8654   */\n      0x64\n      add\n        /* \"contracts/Bias.sol\":3985:4048  require(_topics[topicId].creator == msg.sender, \"only creator\") */\n      tag_146\n        /* \"#utility.yul\":8324:8660   */\n      jump\n        /* \"contracts/Bias.sol\":3985:4048  require(_topics[topicId].creator == msg.sender, \"only creator\") */\n    tag_151:\n        /* \"contracts/Bias.sol\":4059:4104  _mint(msg.sender, _topics[topicId].funds / 5) */\n      tag_154\n        /* \"contracts/Bias.sol\":4065:4075  msg.sender */\n      caller\n        /* \"contracts/Bias.sol\":4102:4103  5 */\n      0x05\n        /* \"contracts/Bias.sol\":4077:4084  _topics */\n      0x07\n        /* \"contracts/Bias.sol\":4085:4092  topicId */\n      dup5\n        /* \"contracts/Bias.sol\":4077:4093  _topics[topicId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_156\n      jumpi\n      tag_156\n      tag_143\n      jump\t// in\n    tag_156:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/Bias.sol\":4077:4099  _topics[topicId].funds */\n      0x04\n      add\n      sload\n        /* \"contracts/Bias.sol\":4077:4103  _topics[topicId].funds / 5 */\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"contracts/Bias.sol\":4059:4064  _mint */\n      tag_160\n        /* \"contracts/Bias.sol\":4059:4104  _mint(msg.sender, _topics[topicId].funds / 5) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/Bias.sol\":3850:4112  function claimRewards(uint topicId) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Bias.sol\":1775:2640  function create(... */\n    tag_47:\n        /* \"contracts/Bias.sol\":1973:1992  _credentialVerifier */\n      sload(0x0b)\n        /* \"contracts/Bias.sol\":1973:2038  _credentialVerifier.verifyGitcionPass(msg.sender, gitcoinPassUid) */\n      mload(0x40)\n      shl(0xe3, 0x059506b5)\n      dup2\n      mstore\n        /* \"contracts/Bias.sol\":2011:2021  msg.sender */\n      caller\n        /* \"contracts/Bias.sol\":1973:2038  _credentialVerifier.verifyGitcionPass(msg.sender, gitcoinPassUid) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9193:9244   */\n      mstore\n        /* \"#utility.yul\":9260:9278   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9253:9287   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Bias.sol\":1973:1992  _credentialVerifier */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Bias.sol\":1973:2010  _credentialVerifier.verifyGitcionPass */\n      0x2ca835a8\n      swap1\n        /* \"#utility.yul\":9166:9184   */\n      0x44\n      add\n        /* \"contracts/Bias.sol\":1973:2038  _credentialVerifier.verifyGitcionPass(msg.sender, gitcoinPassUid) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n        /* \"contracts/Bias.sol\":1951:2080  require(... */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9782:9784   */\n      0x20\n        /* \"contracts/Bias.sol\":1951:2080  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9764:9785   */\n      mstore\n        /* \"#utility.yul\":9821:9823   */\n      0x0e\n        /* \"#utility.yul\":9801:9819   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9794:9824   */\n      mstore\n      shl(0x92, 0x1b9bdd08185d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":9840:9858   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9833:9877   */\n      mstore\n        /* \"#utility.yul\":9894:9912   */\n      0x64\n      add\n        /* \"contracts/Bias.sol\":1951:2080  require(... */\n      tag_146\n        /* \"#utility.yul\":9580:9918   */\n      jump\n        /* \"contracts/Bias.sol\":1951:2080  require(... */\n    tag_168:\n        /* \"contracts/Bias.sol\":4613:4620  _topics */\n      0x07\n        /* \"contracts/Bias.sol\":4613:4627  _topics.length */\n      sload\n        /* \"contracts/Bias.sol\":2113:2128  topicTotal()==0 */\n      iszero\n      dup1\n        /* \"contracts/Bias.sol\":2113:2199  topicTotal()==0 || ( balanceOf(msg.sender) >= funds && funds >= (max * _rewards) / 10) */\n      tag_174\n      jumpi\n      pop\n        /* \"contracts/Bias.sol\":2144:2154  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Bias.sol\":2159:2164  funds */\n      dup4\n      gt\n        /* \"contracts/Bias.sol\":2134:2164  balanceOf(msg.sender) >= funds */\n      iszero\n        /* \"contracts/Bias.sol\":2134:2198  balanceOf(msg.sender) >= funds && funds >= (max * _rewards) / 10 */\n      dup1\n      iszero\n      tag_174\n      jumpi\n      pop\n        /* \"contracts/Bias.sol\":2196:2198  10 */\n      0x0a\n        /* \"contracts/Bias.sol\":2184:2192  _rewards */\n      sload(0x06)\n        /* \"contracts/Bias.sol\":2178:2181  max */\n      dup4\n        /* \"contracts/Bias.sol\":2178:2192  max * _rewards */\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"contracts/Bias.sol\":2177:2198  (max * _rewards) / 10 */\n      tag_177\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_177:\n        /* \"contracts/Bias.sol\":2168:2173  funds */\n      dup4\n        /* \"contracts/Bias.sol\":2168:2198  funds >= (max * _rewards) / 10 */\n      lt\n      iszero\n        /* \"contracts/Bias.sol\":2134:2198  balanceOf(msg.sender) >= funds && funds >= (max * _rewards) / 10 */\n    tag_174:\n        /* \"contracts/Bias.sol\":2091:2245  require(... */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10298:10300   */\n      0x20\n        /* \"contracts/Bias.sol\":2091:2245  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10280:10301   */\n      mstore\n        /* \"#utility.yul\":10337:10339   */\n      0x12\n        /* \"#utility.yul\":10317:10335   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10310:10340   */\n      mstore\n      shl(0x70, 0x696e73756666696369656e742066756e6473)\n        /* \"#utility.yul\":10356:10374   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10349:10397   */\n      mstore\n        /* \"#utility.yul\":10414:10432   */\n      0x64\n      add\n        /* \"contracts/Bias.sol\":2091:2245  require(... */\n      tag_146\n        /* \"#utility.yul\":10096:10438   */\n      jump\n        /* \"contracts/Bias.sol\":2091:2245  require(... */\n    tag_178:\n        /* \"contracts/Bias.sol\":2270:2271  0 */\n      0x00\n        /* \"contracts/Bias.sol\":2264:2267  max */\n      dup3\n        /* \"contracts/Bias.sol\":2264:2271  max > 0 */\n      gt\n        /* \"contracts/Bias.sol\":2256:2290  require(max > 0, \"invalid params\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10645:10647   */\n      0x20\n        /* \"contracts/Bias.sol\":2256:2290  require(max > 0, \"invalid params\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10627:10648   */\n      mstore\n        /* \"#utility.yul\":10684:10686   */\n      0x0e\n        /* \"#utility.yul\":10664:10682   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10657:10687   */\n      mstore\n      shl(0x90, 0x696e76616c696420706172616d73)\n        /* \"#utility.yul\":10703:10721   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10696:10740   */\n      mstore\n        /* \"#utility.yul\":10757:10775   */\n      0x64\n      add\n        /* \"contracts/Bias.sol\":2256:2290  require(max > 0, \"invalid params\") */\n      tag_146\n        /* \"#utility.yul\":10443:10781   */\n      jump\n        /* \"contracts/Bias.sol\":2256:2290  require(max > 0, \"invalid params\") */\n    tag_181:\n        /* \"contracts/Bias.sol\":2317:2327  msg.sender */\n      caller\n        /* \"contracts/Bias.sol\":2309:2328  _living[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Bias.sol\":2309:2316  _living */\n      0x0a\n        /* \"contracts/Bias.sol\":2309:2328  _living[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Bias.sol\":2309:2333  _living[msg.sender] == 0 */\n      iszero\n        /* \"contracts/Bias.sol\":2301:2363  require(_living[msg.sender] == 0, \"only allow one live topic\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10988:10990   */\n      0x20\n        /* \"contracts/Bias.sol\":2301:2363  require(_living[msg.sender] == 0, \"only allow one live topic\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10970:10991   */\n      mstore\n        /* \"#utility.yul\":11027:11029   */\n      0x19\n        /* \"#utility.yul\":11007:11025   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11000:11030   */\n      mstore\n        /* \"#utility.yul\":11066:11093   */\n      0x6f6e6c7920616c6c6f77206f6e65206c69766520746f70696300000000000000\n        /* \"#utility.yul\":11046:11064   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11039:11094   */\n      mstore\n        /* \"#utility.yul\":11111:11129   */\n      0x64\n      add\n        /* \"contracts/Bias.sol\":2301:2363  require(_living[msg.sender] == 0, \"only allow one live topic\") */\n      tag_146\n        /* \"#utility.yul\":10786:11135   */\n      jump\n        /* \"contracts/Bias.sol\":2301:2363  require(_living[msg.sender] == 0, \"only allow one live topic\") */\n    tag_184:\n        /* \"contracts/Bias.sol\":2390:2391  0 */\n      0x00\n        /* \"contracts/Bias.sol\":2377:2389  topicTotal() */\n      tag_187\n        /* \"contracts/Bias.sol\":4613:4620  _topics */\n      0x07\n        /* \"contracts/Bias.sol\":4613:4627  _topics.length */\n      sload\n      swap1\n        /* \"contracts/Bias.sol\":4547:4635  function topicTotal() public view returns (uint){... */\n      jump\n        /* \"contracts/Bias.sol\":2377:2389  topicTotal() */\n    tag_187:\n        /* \"contracts/Bias.sol\":2377:2391  topicTotal()>0 */\n      gt\n        /* \"contracts/Bias.sol\":2374:2471  if(topicTotal()>0){... */\n      iszero\n      tag_189\n      jumpi\n        /* \"contracts/Bias.sol\":2435:2459  _burn(msg.sender, funds) */\n      tag_189\n        /* \"contracts/Bias.sol\":2441:2451  msg.sender */\n      caller\n        /* \"contracts/Bias.sol\":2453:2458  funds */\n      dup5\n        /* \"contracts/Bias.sol\":2435:2440  _burn */\n      tag_190\n        /* \"contracts/Bias.sol\":2435:2459  _burn(msg.sender, funds) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/Bias.sol\":2508:2570  Topic(msg.sender, block.timestamp, title, content, funds, max) */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/Bias.sol\":2514:2524  msg.sender */\n      caller\n        /* \"contracts/Bias.sol\":2508:2570  Topic(msg.sender, block.timestamp, title, content, funds, max) */\n      dup2\n      mstore\n        /* \"contracts/Bias.sol\":2526:2541  block.timestamp */\n      timestamp\n        /* \"contracts/Bias.sol\":2508:2570  Topic(msg.sender, block.timestamp, title, content, funds, max) */\n      0x20\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      swap2\n      dup2\n      add\n      dup8\n      dup2\n      mstore\n      0x60\n      dup3\n      add\n      dup8\n      swap1\n      mstore\n      0x80\n      dup3\n      add\n      dup7\n      swap1\n      mstore\n      0xa0\n      dup3\n      add\n      dup6\n      swap1\n      mstore\n        /* \"contracts/Bias.sol\":2481:2488  _topics */\n      0x07\n        /* \"contracts/Bias.sol\":2481:2581  _topics.push(... */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      dup3\n      mload\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      0x06\n      swap1\n      swap3\n      mul\n      swap2\n      dup3\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      dup2\n      sstore\n      swap4\n      mload\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689\n      dup3\n      add\n      sstore\n      swap1\n      mload\n        /* \"contracts/Bias.sol\":2508:2570  Topic(msg.sender, block.timestamp, title, content, funds, max) */\n      swap2\n      swap3\n        /* \"contracts/Bias.sol\":2481:2581  _topics.push(... */\n      swap2\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a\n      swap1\n      swap2\n      add\n      swap1\n      tag_192\n      swap1\n      dup3\n      tag_193\n      jump\t// in\n    tag_192:\n      pop\n      0x60\n      dup3\n      add\n      mload\n      0x03\n      dup3\n      add\n      swap1\n      tag_194\n      swap1\n      dup3\n      tag_193\n      jump\t// in\n    tag_194:\n      pop\n      0x80\n      dup3\n      add\n      mload\n      0x04\n      dup3\n      add\n      sstore\n      0xa0\n      swap1\n      swap2\n      add\n      mload\n      0x05\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/Bias.sol\":2614:2621  _topics */\n      0x07\n        /* \"contracts/Bias.sol\":2614:2628  _topics.length */\n      sload\n        /* \"contracts/Bias.sol\":2614:2632  _topics.length - 1 */\n      tag_195\n      swap1\n        /* \"contracts/Bias.sol\":2631:2632  1 */\n      0x01\n      swap1\n        /* \"contracts/Bias.sol\":2614:2632  _topics.length - 1 */\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"contracts/Bias.sol\":2600:2610  msg.sender */\n      caller\n        /* \"contracts/Bias.sol\":2592:2611  _living[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Bias.sol\":2592:2599  _living */\n      0x0a\n        /* \"contracts/Bias.sol\":2592:2611  _living[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Bias.sol\":2592:2632  _living[msg.sender] = _topics.length - 1 */\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Bias.sol\":1775:2640  function create(... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_202:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Bias.sol\":2829:3743  function vote(uint topicId, uint voteFor, bytes32 gitcoinPassUid) public {... */\n    tag_80:\n        /* \"contracts/Bias.sol\":2927:2946  _credentialVerifier */\n      sload(0x0b)\n        /* \"contracts/Bias.sol\":2927:3022  _credentialVerifier.calcWeight(... */\n      mload(0x40)\n      shl(0xe3, 0x17aeb55d)\n      dup2\n      mstore\n        /* \"contracts/Bias.sol\":2972:2982  msg.sender */\n      caller\n        /* \"contracts/Bias.sol\":2927:3022  _credentialVerifier.calcWeight(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9193:9244   */\n      mstore\n        /* \"#utility.yul\":9260:9278   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9253:9287   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Bias.sol\":2913:2924  uint weight */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Bias.sol\":2927:2946  _credentialVerifier */\n      and\n      swap1\n        /* \"contracts/Bias.sol\":2927:2957  _credentialVerifier.calcWeight */\n      0xbd75aae8\n      swap1\n        /* \"#utility.yul\":9166:9184   */\n      0x44\n      add\n        /* \"contracts/Bias.sol\":2927:3022  _credentialVerifier.calcWeight(... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_215:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_216\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"contracts/Bias.sol\":2913:3022  uint weight = _credentialVerifier.calcWeight(... */\n      swap1\n      pop\n        /* \"contracts/Bias.sol\":3050:3051  0 */\n      0x00\n        /* \"contracts/Bias.sol\":3041:3047  weight */\n      dup2\n        /* \"contracts/Bias.sol\":3041:3051  weight > 0 */\n      gt\n        /* \"contracts/Bias.sol\":3033:3070  require(weight > 0, \"not authorized\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9782:9784   */\n      0x20\n        /* \"contracts/Bias.sol\":3033:3070  require(weight > 0, \"not authorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9764:9785   */\n      mstore\n        /* \"#utility.yul\":9821:9823   */\n      0x0e\n        /* \"#utility.yul\":9801:9819   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9794:9824   */\n      mstore\n      shl(0x92, 0x1b9bdd08185d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":9840:9858   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9833:9877   */\n      mstore\n        /* \"#utility.yul\":9894:9912   */\n      0x64\n      add\n        /* \"contracts/Bias.sol\":3033:3070  require(weight > 0, \"not authorized\") */\n      tag_146\n        /* \"#utility.yul\":9580:9918   */\n      jump\n        /* \"contracts/Bias.sol\":3033:3070  require(weight > 0, \"not authorized\") */\n    tag_218:\n        /* \"contracts/Bias.sol\":3113:3120  _topics */\n      0x07\n        /* \"contracts/Bias.sol\":3121:3128  topicId */\n      dup5\n        /* \"contracts/Bias.sol\":3113:3129  _topics[topicId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_221\n      jumpi\n      tag_221\n      tag_143\n      jump\t// in\n    tag_221:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/Bias.sol\":3113:3133  _topics[topicId].max */\n      0x05\n      add\n      sload\n        /* \"contracts/Bias.sol\":3089:3101  _voterCounts */\n      0x09\n        /* \"contracts/Bias.sol\":3089:3110  _voterCounts[topicId] */\n      0x00\n        /* \"contracts/Bias.sol\":3102:3109  topicId */\n      dup7\n        /* \"contracts/Bias.sol\":3089:3110  _voterCounts[topicId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Bias.sol\":3089:3133  _voterCounts[topicId] < _topics[topicId].max */\n      lt\n        /* \"contracts/Bias.sol\":3081:3146  require(_voterCounts[topicId] < _topics[topicId].max, \"finished\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13868:13870   */\n      0x20\n        /* \"contracts/Bias.sol\":3081:3146  require(_voterCounts[topicId] < _topics[topicId].max, \"finished\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13850:13871   */\n      mstore\n        /* \"#utility.yul\":13907:13908   */\n      0x08\n        /* \"#utility.yul\":13887:13905   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13880:13909   */\n      mstore\n      shl(0xc2, 0x199a5b9a5cda1959)\n        /* \"#utility.yul\":13925:13943   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13918:13956   */\n      mstore\n        /* \"#utility.yul\":13973:13991   */\n      0x64\n      add\n        /* \"contracts/Bias.sol\":3081:3146  require(_voterCounts[topicId] < _topics[topicId].max, \"finished\") */\n      tag_146\n        /* \"#utility.yul\":13666:13997   */\n      jump\n        /* \"contracts/Bias.sol\":3081:3146  require(_voterCounts[topicId] < _topics[topicId].max, \"finished\") */\n    tag_223:\n        /* \"contracts/Bias.sol\":3212:3222  msg.sender */\n      caller\n        /* \"contracts/Bias.sol\":3198:3223  _lastJoinTime[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Bias.sol\":3198:3211  _lastJoinTime */\n      0x0c\n        /* \"contracts/Bias.sol\":3198:3223  _lastJoinTime[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Bias.sol\":3198:3240  _lastJoinTime[msg.sender] + DAY_IN_SECONDS */\n      tag_226\n      swap1\n        /* \"contracts/Bias.sol\":1333:1338  86400 */\n      0x015180\n      swap1\n        /* \"contracts/Bias.sol\":3198:3240  _lastJoinTime[msg.sender] + DAY_IN_SECONDS */\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"contracts/Bias.sol\":3179:3194  block.timestamp */\n      timestamp\n        /* \"contracts/Bias.sol\":3179:3240  block.timestamp >= _lastJoinTime[msg.sender] + DAY_IN_SECONDS */\n      lt\n      iszero\n        /* \"contracts/Bias.sol\":3157:3280  require(... */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14334:14336   */\n      0x20\n        /* \"contracts/Bias.sol\":3157:3280  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14316:14337   */\n      mstore\n        /* \"#utility.yul\":14373:14375   */\n      0x0c\n        /* \"#utility.yul\":14353:14371   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14346:14376   */\n      mstore\n      shl(0xa0, 0x6f6e63652070657220646179)\n        /* \"#utility.yul\":14392:14410   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14385:14427   */\n      mstore\n        /* \"#utility.yul\":14444:14462   */\n      0x64\n      add\n        /* \"contracts/Bias.sol\":3157:3280  require(... */\n      tag_146\n        /* \"#utility.yul\":14132:14468   */\n      jump\n        /* \"contracts/Bias.sol\":3157:3280  require(... */\n    tag_228:\n        /* \"contracts/Bias.sol\":3305:3315  msg.sender */\n      caller\n        /* \"contracts/Bias.sol\":3291:3316  _lastJoinTime[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Bias.sol\":3291:3304  _lastJoinTime */\n      0x0c\n        /* \"contracts/Bias.sol\":3291:3316  _lastJoinTime[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Bias.sol\":3319:3334  block.timestamp */\n      timestamp\n        /* \"contracts/Bias.sol\":3291:3334  _lastJoinTime[msg.sender] = block.timestamp */\n      swap1\n      sstore\n        /* \"contracts/Bias.sol\":3437:3444  _topics */\n      0x07\n        /* \"contracts/Bias.sol\":3437:3453  _topics[topicId] */\n      dup1\n      sload\n        /* \"contracts/Bias.sol\":3347:3468  _mint(... */\n      tag_231\n      swap3\n        /* \"contracts/Bias.sol\":3305:3315  msg.sender */\n      swap2\n        /* \"contracts/Bias.sol\":3437:3444  _topics */\n      swap1\n        /* \"contracts/Bias.sol\":3445:3452  topicId */\n      dup8\n      swap1\n        /* \"contracts/Bias.sol\":3437:3453  _topics[topicId] */\n      dup2\n      lt\n      tag_233\n      jumpi\n      tag_233\n      tag_143\n      jump\t// in\n    tag_233:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/Bias.sol\":3437:3457  _topics[topicId].max */\n      0x05\n      add\n      sload\n        /* \"contracts/Bias.sol\":3412:3419  _topics */\n      0x07\n        /* \"contracts/Bias.sol\":3420:3427  topicId */\n      dup8\n        /* \"contracts/Bias.sol\":3412:3428  _topics[topicId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_236\n      jumpi\n      tag_236\n      tag_143\n      jump\t// in\n    tag_236:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/Bias.sol\":3412:3434  _topics[topicId].funds */\n      0x04\n      add\n      sload\n        /* \"contracts/Bias.sol\":3412:3457  _topics[topicId].funds / _topics[topicId].max */\n      tag_238\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_238:\n        /* \"contracts/Bias.sol\":3403:3409  weight */\n      dup4\n        /* \"contracts/Bias.sol\":3392:3400  _rewards */\n      sload(0x06)\n        /* \"contracts/Bias.sol\":3392:3409  _rewards * weight */\n      tag_239\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_239:\n        /* \"contracts/Bias.sol\":3392:3457  _rewards * weight + _topics[topicId].funds / _topics[topicId].max */\n      tag_158\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n        /* \"contracts/Bias.sol\":3347:3468  _mint(... */\n    tag_231:\n        /* \"contracts/Bias.sol\":3479:3500  _voterCounts[topicId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/Bias.sol\":3479:3491  _voterCounts */\n      0x09\n        /* \"contracts/Bias.sol\":3479:3500  _voterCounts[topicId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Bias.sol\":3479:3505  _voterCounts[topicId] += 1 */\n      dup1\n      sload\n        /* \"contracts/Bias.sol\":3504:3505  1 */\n      0x01\n      swap3\n        /* \"contracts/Bias.sol\":3479:3500  _voterCounts[topicId] */\n      swap1\n        /* \"contracts/Bias.sol\":3479:3505  _voterCounts[topicId] += 1 */\n      tag_241\n      swap1\n        /* \"contracts/Bias.sol\":3504:3505  1 */\n      dup5\n      swap1\n        /* \"contracts/Bias.sol\":3479:3505  _voterCounts[topicId] += 1 */\n      tag_227\n      jump\t// in\n    tag_241:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Bias.sol\":3516:3531  _votes[topicId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/Bias.sol\":3516:3522  _votes */\n      0x08\n        /* \"contracts/Bias.sol\":3516:3531  _votes[topicId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Bias.sol\":3516:3540  _votes[topicId][voteFor] */\n      dup7\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/Bias.sol\":3516:3550  _votes[topicId][voteFor] += weight */\n      dup1\n      sload\n        /* \"contracts/Bias.sol\":3544:3550  weight */\n      dup4\n      swap3\n        /* \"contracts/Bias.sol\":3516:3531  _votes[topicId] */\n      swap1\n        /* \"contracts/Bias.sol\":3516:3550  _votes[topicId][voteFor] += weight */\n      tag_242\n      swap1\n        /* \"contracts/Bias.sol\":3544:3550  weight */\n      dup5\n      swap1\n        /* \"contracts/Bias.sol\":3516:3550  _votes[topicId][voteFor] += weight */\n      tag_227\n      jump\t// in\n    tag_242:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Bias.sol\":3566:3608  Vote(msg.sender, topicId, voteFor, weight) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":14647:14672   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":14703:14705   */\n      0x20\n        /* \"#utility.yul\":14688:14706   */\n      dup2\n      add\n        /* \"#utility.yul\":14681:14715   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Bias.sol\":3583:3590  topicId */\n      dup6\n      swap2\n        /* \"contracts/Bias.sol\":3571:3581  msg.sender */\n      caller\n      swap2\n        /* \"contracts/Bias.sol\":3566:3608  Vote(msg.sender, topicId, voteFor, weight) */\n      0x6c7eb2743ec28489909706ea440d909129004996be657d36c6e9add778546abf\n      swap2\n        /* \"#utility.yul\":14620:14638   */\n      add\n        /* \"contracts/Bias.sol\":3566:3608  Vote(msg.sender, topicId, voteFor, weight) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Bias.sol\":3650:3657  _topics */\n      0x07\n        /* \"contracts/Bias.sol\":3658:3665  topicId */\n      dup5\n        /* \"contracts/Bias.sol\":3650:3666  _topics[topicId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_246\n      jumpi\n      tag_246\n      tag_143\n      jump\t// in\n    tag_246:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/Bias.sol\":3650:3670  _topics[topicId].max */\n      0x05\n      add\n      sload\n        /* \"contracts/Bias.sol\":3625:3637  _voterCounts */\n      0x09\n        /* \"contracts/Bias.sol\":3625:3646  _voterCounts[topicId] */\n      0x00\n        /* \"contracts/Bias.sol\":3638:3645  topicId */\n      dup7\n        /* \"contracts/Bias.sol\":3625:3646  _voterCounts[topicId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Bias.sol\":3625:3670  _voterCounts[topicId] == _topics[topicId].max */\n      sub\n        /* \"contracts/Bias.sol\":3621:3736  if (_voterCounts[topicId] == _topics[topicId].max) {... */\n      tag_248\n      jumpi\n        /* \"contracts/Bias.sol\":3723:3724  0 */\n      0x00\n        /* \"contracts/Bias.sol\":3687:3694  _living */\n      0x0a\n        /* \"contracts/Bias.sol\":3687:3720  _living[_topics[topicId].creator] */\n      0x00\n        /* \"contracts/Bias.sol\":3695:3702  _topics */\n      0x07\n        /* \"contracts/Bias.sol\":3703:3710  topicId */\n      dup8\n        /* \"contracts/Bias.sol\":3695:3711  _topics[topicId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_250\n      jumpi\n      tag_250\n      tag_143\n      jump\t// in\n    tag_250:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      0x06\n      swap1\n      swap3\n      mul\n      swap1\n      swap2\n      add\n        /* \"contracts/Bias.sol\":3695:3719  _topics[topicId].creator */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Bias.sol\":3687:3720  _living[_topics[topicId].creator] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"contracts/Bias.sol\":3687:3724  _living[_topics[topicId].creator] = 0 */\n      sstore\n        /* \"contracts/Bias.sol\":3621:3736  if (_voterCounts[topicId] == _topics[topicId].max) {... */\n    tag_248:\n        /* \"contracts/Bias.sol\":2902:3743  {... */\n      pop\n        /* \"contracts/Bias.sol\":2829:3743  function vote(uint topicId, uint voteFor, bytes32 gitcoinPassUid) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n        /* \"contracts/Bias.sol\":699:721  Topic[] public _topics */\n    tag_94:\n      0x07\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_259\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_259:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x06\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      swap5\n      pop\n      swap1\n      swap3\n      swap2\n      tag_261\n      swap1\n      tag_130\n      jump\t// in\n    tag_261:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_262\n      swap1\n      tag_130\n      jump\t// in\n    tag_262:\n      dup1\n      iszero\n      tag_263\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_264\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_263)\n    tag_264:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_265:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_265\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_263:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x03\n      add\n      dup1\n      sload\n      tag_266\n      swap1\n      tag_130\n      jump\t// in\n    tag_266:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_267\n      swap1\n      tag_130\n      jump\t// in\n    tag_267:\n      dup1\n      iszero\n      tag_268\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_269\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_268)\n    tag_269:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_270:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_270\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_268:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/Bias.sol\":4215:4308  function updateRewards(uint rewards_) public onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_275\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_275:\n        /* \"contracts/Bias.sol\":4281:4289  _rewards */\n      0x06\n        /* \"contracts/Bias.sol\":4281:4300  _rewards = rewards_ */\n      sstore\n        /* \"contracts/Bias.sol\":4215:4308  function updateRewards(uint rewards_) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Bias.sol\":2648:2748  function topicAt(uint index) public returns (Topic memory ) {... */\n    tag_109:\n        /* \"contracts/Bias.sol\":2693:2705  Topic memory */\n      tag_277\n      tag_278\n      jump\t// in\n    tag_277:\n        /* \"contracts/Bias.sol\":2726:2733  _topics */\n      0x07\n        /* \"contracts/Bias.sol\":2734:2739  index */\n      dup3\n        /* \"contracts/Bias.sol\":2726:2740  _topics[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_281\n      jumpi\n      tag_281\n      tag_143\n      jump\t// in\n    tag_281:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/Bias.sol\":2719:2740  return _topics[index] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      tag_283\n      swap1\n      tag_130\n      jump\t// in\n    tag_283:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_284\n      swap1\n      tag_130\n      jump\t// in\n    tag_284:\n      dup1\n      iszero\n      tag_285\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_286\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_285)\n    tag_286:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_287:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_287\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_285:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      dup1\n      sload\n      tag_288\n      swap1\n      tag_130\n      jump\t// in\n    tag_288:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_289\n      swap1\n      tag_130\n      jump\t// in\n    tag_289:\n      dup1\n      iszero\n      tag_290\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_291\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_290)\n    tag_291:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_292:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_292\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_290:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Bias.sol\":2648:2748  function topicAt(uint index) public returns (Topic memory ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Bias.sol\":4316:4539  function topics(uint start, uint number) public view returns (Topic[] memory result) {... */\n    tag_119:\n        /* \"contracts/Bias.sol\":4378:4399  Topic[] memory result */\n      0x60\n        /* \"contracts/Bias.sol\":4433:4439  number */\n      dup2\n        /* \"contracts/Bias.sol\":4421:4440  new Topic[](number) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_296\n      jumpi\n      tag_296\n      tag_297\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_298\n      jumpi\n      dup2\n      0x20\n      add\n    tag_299:\n      tag_300\n      tag_278\n      jump\t// in\n    tag_300:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_299\n      jumpi\n      swap1\n      pop\n    tag_298:\n      pop\n        /* \"contracts/Bias.sol\":4412:4440  result = new Topic[](number) */\n      swap1\n      pop\n        /* \"contracts/Bias.sol\":4455:4461  uint i */\n      0x00\n        /* \"contracts/Bias.sol\":4451:4532  for(uint i=0;i<number;i++){... */\n    tag_301:\n        /* \"contracts/Bias.sol\":4466:4472  number */\n      dup3\n        /* \"contracts/Bias.sol\":4464:4465  i */\n      dup2\n        /* \"contracts/Bias.sol\":4464:4472  i<number */\n      lt\n        /* \"contracts/Bias.sol\":4451:4532  for(uint i=0;i<number;i++){... */\n      iszero\n      tag_302\n      jumpi\n        /* \"contracts/Bias.sol\":4504:4511  _topics */\n      0x07\n        /* \"contracts/Bias.sol\":4512:4519  i+start */\n      tag_304\n        /* \"contracts/Bias.sol\":4514:4519  start */\n      dup6\n        /* \"contracts/Bias.sol\":4512:4513  i */\n      dup4\n        /* \"contracts/Bias.sol\":4512:4519  i+start */\n      tag_227\n      jump\t// in\n    tag_304:\n        /* \"contracts/Bias.sol\":4504:4520  _topics[i+start] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_306\n      jumpi\n      tag_306\n      tag_143\n      jump\t// in\n    tag_306:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/Bias.sol\":4492:4520  result[i] = _topics[i+start] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      tag_308\n      swap1\n      tag_130\n      jump\t// in\n    tag_308:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_309\n      swap1\n      tag_130\n      jump\t// in\n    tag_309:\n      dup1\n      iszero\n      tag_310\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_311\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_310)\n    tag_311:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_312:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_312\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_310:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      dup1\n      sload\n      tag_313\n      swap1\n      tag_130\n      jump\t// in\n    tag_313:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_314\n      swap1\n      tag_130\n      jump\t// in\n    tag_314:\n      dup1\n      iszero\n      tag_315\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_316\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_315)\n    tag_316:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_317:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_317\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_315:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Bias.sol\":4492:4498  result */\n      dup3\n        /* \"contracts/Bias.sol\":4499:4500  i */\n      dup3\n        /* \"contracts/Bias.sol\":4492:4501  result[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_319\n      jumpi\n      tag_319\n      tag_143\n      jump\t// in\n    tag_319:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Bias.sol\":4492:4520  result[i] = _topics[i+start] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/Bias.sol\":4473:4476  i++ */\n      dup1\n      dup1\n      tag_320\n      swap1\n      tag_321\n      jump\t// in\n    tag_320:\n      swap2\n      pop\n      pop\n        /* \"contracts/Bias.sol\":4451:4532  for(uint i=0;i<number;i++){... */\n      jump(tag_301)\n    tag_302:\n      pop\n        /* \"contracts/Bias.sol\":4316:4539  function topics(uint start, uint number) public view returns (Topic[] memory result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_323\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_323:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4706:4757   */\n      mstore\n        /* \"#utility.yul\":4679:4697   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_146\n        /* \"#utility.yul\":4560:4763   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_331\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_332\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_334\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4706:4757   */\n      mstore\n        /* \"#utility.yul\":4679:4697   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      tag_146\n        /* \"#utility.yul\":4560:4763   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_336\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_337\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_339\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4706:4757   */\n      mstore\n        /* \"#utility.yul\":4679:4697   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      tag_146\n        /* \"#utility.yul\":4560:4763   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_336\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_337\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15086:15118   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15068:15119   */\n      mstore\n        /* \"#utility.yul\":15135:15153   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":15128:15162   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":15178:15196   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":15171:15205   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":15041:15059   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_146\n        /* \"#utility.yul\":14866:15211   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_332\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4706:4757   */\n      mstore\n        /* \"#utility.yul\":4679:4697   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_146\n        /* \"#utility.yul\":4560:4763   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_350:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_352\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4706:4757   */\n      mstore\n        /* \"#utility.yul\":4679:4697   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_146\n        /* \"#utility.yul\":4560:4763   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_331\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_337\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4706:4757   */\n      mstore\n        /* \"#utility.yul\":4679:4697   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_146\n        /* \"#utility.yul\":4560:4763   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_332:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_363\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4706:4757   */\n      mstore\n        /* \"#utility.yul\":4679:4697   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_146\n        /* \"#utility.yul\":4560:4763   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_363:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4706:4757   */\n      mstore\n        /* \"#utility.yul\":4679:4697   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_146\n        /* \"#utility.yul\":4560:4763   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_365:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_368\n      swap2\n        /* \"#utility.yul\":3237:3262   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3225:3227   */\n      0x20\n        /* \"#utility.yul\":3210:3228   */\n      add\n      swap1\n        /* \"#utility.yul\":3091:3268   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_368:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_337:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_371\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_371:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_372\n      swap1\n      pop\n      jump\n    tag_370:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_373\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15086:15118   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15068:15119   */\n      mstore\n        /* \"#utility.yul\":15135:15153   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":15128:15162   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":15178:15196   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":15171:15205   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":15041:15059   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_146\n        /* \"#utility.yul\":14866:15211   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_373:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_372:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_375\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_376)\n    tag_375:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_376:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_377\n      swap2\n        /* \"#utility.yul\":3237:3262   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3225:3227   */\n      0x20\n        /* \"#utility.yul\":3210:3228   */\n      add\n      swap1\n        /* \"#utility.yul\":3091:3268   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_377:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_278:\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:437   */\n    tag_378:\n        /* \"#utility.yul\":56:59   */\n      0x00\n        /* \"#utility.yul\":94:99   */\n      dup2\n        /* \"#utility.yul\":88:100   */\n      mload\n        /* \"#utility.yul\":121:127   */\n      dup1\n        /* \"#utility.yul\":116:119   */\n      dup5\n        /* \"#utility.yul\":109:128   */\n      mstore\n        /* \"#utility.yul\":146:147   */\n      0x00\n        /* \"#utility.yul\":156:318   */\n    tag_388:\n        /* \"#utility.yul\":170:176   */\n      dup2\n        /* \"#utility.yul\":167:168   */\n      dup2\n        /* \"#utility.yul\":164:177   */\n      lt\n        /* \"#utility.yul\":156:318   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":232:236   */\n      0x20\n        /* \"#utility.yul\":288:301   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":284:306   */\n      dup2\n      add\n        /* \"#utility.yul\":278:307   */\n      mload\n        /* \"#utility.yul\":260:271   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":256:276   */\n      dup3\n      add\n        /* \"#utility.yul\":249:308   */\n      mstore\n        /* \"#utility.yul\":185:197   */\n      add\n        /* \"#utility.yul\":156:318   */\n      jump(tag_388)\n    tag_390:\n        /* \"#utility.yul\":160:163   */\n      pop\n        /* \"#utility.yul\":363:364   */\n      0x00\n        /* \"#utility.yul\":356:360   */\n      0x20\n        /* \"#utility.yul\":347:353   */\n      dup3\n        /* \"#utility.yul\":342:345   */\n      dup7\n        /* \"#utility.yul\":338:354   */\n      add\n        /* \"#utility.yul\":334:361   */\n      add\n        /* \"#utility.yul\":327:365   */\n      mstore\n        /* \"#utility.yul\":426:430   */\n      0x20\n        /* \"#utility.yul\":419:421   */\n      0x1f\n        /* \"#utility.yul\":415:422   */\n      not\n        /* \"#utility.yul\":410:412   */\n      0x1f\n        /* \"#utility.yul\":402:408   */\n      dup4\n        /* \"#utility.yul\":398:413   */\n      add\n        /* \"#utility.yul\":394:423   */\n      and\n        /* \"#utility.yul\":389:392   */\n      dup6\n        /* \"#utility.yul\":385:424   */\n      add\n        /* \"#utility.yul\":381:431   */\n      add\n        /* \"#utility.yul\":374:431   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:437   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:662   */\n    tag_33:\n        /* \"#utility.yul\":591:593   */\n      0x20\n        /* \"#utility.yul\":580:589   */\n      dup2\n        /* \"#utility.yul\":573:594   */\n      mstore\n        /* \"#utility.yul\":554:558   */\n      0x00\n        /* \"#utility.yul\":611:656   */\n      tag_392\n        /* \"#utility.yul\":652:654   */\n      0x20\n        /* \"#utility.yul\":641:650   */\n      dup4\n        /* \"#utility.yul\":637:655   */\n      add\n        /* \"#utility.yul\":629:635   */\n      dup5\n        /* \"#utility.yul\":611:656   */\n      tag_378\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":603:656   */\n      swap4\n        /* \"#utility.yul\":442:662   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":667:840   */\n    tag_379:\n        /* \"#utility.yul\":735:755   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":784:815   */\n      dup2\n      and\n        /* \"#utility.yul\":774:816   */\n      dup2\n      eq\n        /* \"#utility.yul\":764:834   */\n      tag_394\n      jumpi\n        /* \"#utility.yul\":830:831   */\n      0x00\n        /* \"#utility.yul\":827:828   */\n      dup1\n        /* \"#utility.yul\":820:832   */\n      revert\n        /* \"#utility.yul\":764:834   */\n    tag_394:\n        /* \"#utility.yul\":667:840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":845:1099   */\n    tag_36:\n        /* \"#utility.yul\":913:919   */\n      0x00\n        /* \"#utility.yul\":921:927   */\n      dup1\n        /* \"#utility.yul\":974:976   */\n      0x40\n        /* \"#utility.yul\":962:971   */\n      dup4\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":949:972   */\n      sub\n        /* \"#utility.yul\":945:977   */\n      slt\n        /* \"#utility.yul\":942:994   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":990:991   */\n      0x00\n        /* \"#utility.yul\":987:988   */\n      dup1\n        /* \"#utility.yul\":980:992   */\n      revert\n        /* \"#utility.yul\":942:994   */\n    tag_396:\n        /* \"#utility.yul\":1013:1042   */\n      tag_397\n        /* \"#utility.yul\":1032:1041   */\n      dup4\n        /* \"#utility.yul\":1013:1042   */\n      tag_379\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":1003:1042   */\n      swap5\n        /* \"#utility.yul\":1089:1091   */\n      0x20\n        /* \"#utility.yul\":1074:1092   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1061:1093   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":845:1099   */\n      jump\t// out\n        /* \"#utility.yul\":1296:1476   */\n    tag_42:\n        /* \"#utility.yul\":1355:1361   */\n      0x00\n        /* \"#utility.yul\":1408:1410   */\n      0x20\n        /* \"#utility.yul\":1396:1405   */\n      dup3\n        /* \"#utility.yul\":1387:1394   */\n      dup5\n        /* \"#utility.yul\":1383:1406   */\n      sub\n        /* \"#utility.yul\":1379:1411   */\n      slt\n        /* \"#utility.yul\":1376:1428   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":1424:1425   */\n      0x00\n        /* \"#utility.yul\":1421:1422   */\n      dup1\n        /* \"#utility.yul\":1414:1426   */\n      revert\n        /* \"#utility.yul\":1376:1428   */\n    tag_400:\n      pop\n        /* \"#utility.yul\":1447:1470   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1296:1476   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1481:1608   */\n    tag_297:\n        /* \"#utility.yul\":1542:1552   */\n      0x4e487b71\n        /* \"#utility.yul\":1537:1540   */\n      0xe0\n        /* \"#utility.yul\":1533:1553   */\n      shl\n        /* \"#utility.yul\":1530:1531   */\n      0x00\n        /* \"#utility.yul\":1523:1554   */\n      mstore\n        /* \"#utility.yul\":1573:1577   */\n      0x41\n        /* \"#utility.yul\":1570:1571   */\n      0x04\n        /* \"#utility.yul\":1563:1578   */\n      mstore\n        /* \"#utility.yul\":1597:1601   */\n      0x24\n        /* \"#utility.yul\":1594:1595   */\n      0x00\n        /* \"#utility.yul\":1587:1602   */\n      revert\n        /* \"#utility.yul\":1613:2332   */\n    tag_380:\n        /* \"#utility.yul\":1656:1661   */\n      0x00\n        /* \"#utility.yul\":1709:1712   */\n      dup3\n        /* \"#utility.yul\":1702:1706   */\n      0x1f\n        /* \"#utility.yul\":1694:1700   */\n      dup4\n        /* \"#utility.yul\":1690:1707   */\n      add\n        /* \"#utility.yul\":1686:1713   */\n      slt\n        /* \"#utility.yul\":1676:1731   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":1727:1728   */\n      0x00\n        /* \"#utility.yul\":1724:1725   */\n      dup1\n        /* \"#utility.yul\":1717:1729   */\n      revert\n        /* \"#utility.yul\":1676:1731   */\n    tag_403:\n        /* \"#utility.yul\":1763:1769   */\n      dup2\n        /* \"#utility.yul\":1750:1770   */\n      calldataload\n        /* \"#utility.yul\":1789:1807   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1826:1828   */\n      dup1\n        /* \"#utility.yul\":1822:1824   */\n      dup3\n        /* \"#utility.yul\":1819:1829   */\n      gt\n        /* \"#utility.yul\":1816:1852   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":1832:1850   */\n      tag_405\n      tag_297\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":1907:1909   */\n      0x40\n        /* \"#utility.yul\":1901:1910   */\n      mload\n        /* \"#utility.yul\":1875:1877   */\n      0x1f\n        /* \"#utility.yul\":1961:1974   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1957:1979   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1981:1983   */\n      0x3f\n        /* \"#utility.yul\":1953:1984   */\n      add\n        /* \"#utility.yul\":1949:1989   */\n      and\n        /* \"#utility.yul\":1937:1990   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2005:2023   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":2025:2047   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2002:2048   */\n      or\n        /* \"#utility.yul\":1999:2071   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":2051:2069   */\n      tag_407\n      tag_297\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":2091:2101   */\n      dup2\n        /* \"#utility.yul\":2087:2089   */\n      0x40\n        /* \"#utility.yul\":2080:2102   */\n      mstore\n        /* \"#utility.yul\":2126:2128   */\n      dup4\n        /* \"#utility.yul\":2118:2124   */\n      dup2\n        /* \"#utility.yul\":2111:2129   */\n      mstore\n        /* \"#utility.yul\":2172:2175   */\n      dup7\n        /* \"#utility.yul\":2165:2169   */\n      0x20\n        /* \"#utility.yul\":2160:2162   */\n      dup6\n        /* \"#utility.yul\":2152:2158   */\n      dup9\n        /* \"#utility.yul\":2148:2163   */\n      add\n        /* \"#utility.yul\":2144:2170   */\n      add\n        /* \"#utility.yul\":2141:2176   */\n      gt\n        /* \"#utility.yul\":2138:2193   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":2189:2190   */\n      0x00\n        /* \"#utility.yul\":2186:2187   */\n      dup1\n        /* \"#utility.yul\":2179:2191   */\n      revert\n        /* \"#utility.yul\":2138:2193   */\n    tag_408:\n        /* \"#utility.yul\":2253:2255   */\n      dup4\n        /* \"#utility.yul\":2246:2250   */\n      0x20\n        /* \"#utility.yul\":2238:2244   */\n      dup8\n        /* \"#utility.yul\":2234:2251   */\n      add\n        /* \"#utility.yul\":2227:2231   */\n      0x20\n        /* \"#utility.yul\":2219:2225   */\n      dup4\n        /* \"#utility.yul\":2215:2232   */\n      add\n        /* \"#utility.yul\":2202:2256   */\n      calldatacopy\n        /* \"#utility.yul\":2300:2301   */\n      0x00\n        /* \"#utility.yul\":2293:2297   */\n      0x20\n        /* \"#utility.yul\":2288:2290   */\n      dup6\n        /* \"#utility.yul\":2280:2286   */\n      dup4\n        /* \"#utility.yul\":2276:2291   */\n      add\n        /* \"#utility.yul\":2272:2298   */\n      add\n        /* \"#utility.yul\":2265:2302   */\n      mstore\n        /* \"#utility.yul\":2320:2326   */\n      dup1\n        /* \"#utility.yul\":2311:2326   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1613:2332   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2337:3086   */\n    tag_46:\n        /* \"#utility.yul\":2452:2458   */\n      0x00\n        /* \"#utility.yul\":2460:2466   */\n      dup1\n        /* \"#utility.yul\":2468:2474   */\n      0x00\n        /* \"#utility.yul\":2476:2482   */\n      dup1\n        /* \"#utility.yul\":2484:2490   */\n      0x00\n        /* \"#utility.yul\":2537:2540   */\n      0xa0\n        /* \"#utility.yul\":2525:2534   */\n      dup7\n        /* \"#utility.yul\":2516:2523   */\n      dup9\n        /* \"#utility.yul\":2512:2535   */\n      sub\n        /* \"#utility.yul\":2508:2541   */\n      slt\n        /* \"#utility.yul\":2505:2558   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":2554:2555   */\n      0x00\n        /* \"#utility.yul\":2551:2552   */\n      dup1\n        /* \"#utility.yul\":2544:2556   */\n      revert\n        /* \"#utility.yul\":2505:2558   */\n    tag_410:\n        /* \"#utility.yul\":2594:2603   */\n      dup6\n        /* \"#utility.yul\":2581:2604   */\n      calldataload\n        /* \"#utility.yul\":2623:2641   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2664:2666   */\n      dup1\n        /* \"#utility.yul\":2656:2662   */\n      dup3\n        /* \"#utility.yul\":2653:2667   */\n      gt\n        /* \"#utility.yul\":2650:2684   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":2680:2681   */\n      0x00\n        /* \"#utility.yul\":2677:2678   */\n      dup1\n        /* \"#utility.yul\":2670:2682   */\n      revert\n        /* \"#utility.yul\":2650:2684   */\n    tag_411:\n        /* \"#utility.yul\":2703:2753   */\n      tag_412\n        /* \"#utility.yul\":2745:2752   */\n      dup10\n        /* \"#utility.yul\":2736:2742   */\n      dup4\n        /* \"#utility.yul\":2725:2734   */\n      dup11\n        /* \"#utility.yul\":2721:2743   */\n      add\n        /* \"#utility.yul\":2703:2753   */\n      tag_380\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":2693:2753   */\n      swap7\n      pop\n        /* \"#utility.yul\":2806:2808   */\n      0x20\n        /* \"#utility.yul\":2795:2804   */\n      dup9\n        /* \"#utility.yul\":2791:2809   */\n      add\n        /* \"#utility.yul\":2778:2810   */\n      calldataload\n        /* \"#utility.yul\":2762:2810   */\n      swap2\n      pop\n        /* \"#utility.yul\":2835:2837   */\n      dup1\n        /* \"#utility.yul\":2825:2833   */\n      dup3\n        /* \"#utility.yul\":2822:2838   */\n      gt\n        /* \"#utility.yul\":2819:2855   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":2851:2852   */\n      0x00\n        /* \"#utility.yul\":2848:2849   */\n      dup1\n        /* \"#utility.yul\":2841:2853   */\n      revert\n        /* \"#utility.yul\":2819:2855   */\n    tag_413:\n      pop\n        /* \"#utility.yul\":2874:2926   */\n      tag_414\n        /* \"#utility.yul\":2918:2925   */\n      dup9\n        /* \"#utility.yul\":2907:2915   */\n      dup3\n        /* \"#utility.yul\":2896:2905   */\n      dup10\n        /* \"#utility.yul\":2892:2916   */\n      add\n        /* \"#utility.yul\":2874:2926   */\n      tag_380\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":2337:3086   */\n      swap6\n      swap9\n        /* \"#utility.yul\":2864:2926   */\n      swap6\n      swap8\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2973:2975   */\n      0x40\n        /* \"#utility.yul\":2958:2976   */\n      dup5\n      add\n        /* \"#utility.yul\":2945:2977   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":3024:3026   */\n      0x60\n        /* \"#utility.yul\":3009:3027   */\n      dup2\n      add\n        /* \"#utility.yul\":2996:3028   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":3075:3078   */\n      0x80\n        /* \"#utility.yul\":3060:3079   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3047:3080   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":2337:3086   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3273:3601   */\n    tag_54:\n        /* \"#utility.yul\":3350:3356   */\n      0x00\n        /* \"#utility.yul\":3358:3364   */\n      dup1\n        /* \"#utility.yul\":3366:3372   */\n      0x00\n        /* \"#utility.yul\":3419:3421   */\n      0x60\n        /* \"#utility.yul\":3407:3416   */\n      dup5\n        /* \"#utility.yul\":3398:3405   */\n      dup7\n        /* \"#utility.yul\":3394:3417   */\n      sub\n        /* \"#utility.yul\":3390:3422   */\n      slt\n        /* \"#utility.yul\":3387:3439   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":3435:3436   */\n      0x00\n        /* \"#utility.yul\":3432:3433   */\n      dup1\n        /* \"#utility.yul\":3425:3437   */\n      revert\n        /* \"#utility.yul\":3387:3439   */\n    tag_417:\n        /* \"#utility.yul\":3458:3487   */\n      tag_418\n        /* \"#utility.yul\":3477:3486   */\n      dup5\n        /* \"#utility.yul\":3458:3487   */\n      tag_379\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":3448:3487   */\n      swap3\n      pop\n        /* \"#utility.yul\":3506:3544   */\n      tag_419\n        /* \"#utility.yul\":3540:3542   */\n      0x20\n        /* \"#utility.yul\":3529:3538   */\n      dup6\n        /* \"#utility.yul\":3525:3543   */\n      add\n        /* \"#utility.yul\":3506:3544   */\n      tag_379\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":3496:3544   */\n      swap2\n      pop\n        /* \"#utility.yul\":3591:3593   */\n      0x40\n        /* \"#utility.yul\":3580:3589   */\n      dup5\n        /* \"#utility.yul\":3576:3594   */\n      add\n        /* \"#utility.yul\":3563:3595   */\n      calldataload\n        /* \"#utility.yul\":3553:3595   */\n      swap1\n      pop\n        /* \"#utility.yul\":3273:3601   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3795:4043   */\n    tag_63:\n        /* \"#utility.yul\":3863:3869   */\n      0x00\n        /* \"#utility.yul\":3871:3877   */\n      dup1\n        /* \"#utility.yul\":3924:3926   */\n      0x40\n        /* \"#utility.yul\":3912:3921   */\n      dup4\n        /* \"#utility.yul\":3903:3910   */\n      dup6\n        /* \"#utility.yul\":3899:3922   */\n      sub\n        /* \"#utility.yul\":3895:3927   */\n      slt\n        /* \"#utility.yul\":3892:3944   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":3940:3941   */\n      0x00\n        /* \"#utility.yul\":3937:3938   */\n      dup1\n        /* \"#utility.yul\":3930:3942   */\n      revert\n        /* \"#utility.yul\":3892:3944   */\n    tag_422:\n      pop\n      pop\n        /* \"#utility.yul\":3963:3986   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"#utility.yul\":4018:4036   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4005:4037   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3795:4043   */\n      jump\t// out\n        /* \"#utility.yul\":4048:4234   */\n    tag_68:\n        /* \"#utility.yul\":4107:4113   */\n      0x00\n        /* \"#utility.yul\":4160:4162   */\n      0x20\n        /* \"#utility.yul\":4148:4157   */\n      dup3\n        /* \"#utility.yul\":4139:4146   */\n      dup5\n        /* \"#utility.yul\":4135:4158   */\n      sub\n        /* \"#utility.yul\":4131:4163   */\n      slt\n        /* \"#utility.yul\":4128:4180   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":4176:4177   */\n      0x00\n        /* \"#utility.yul\":4173:4174   */\n      dup1\n        /* \"#utility.yul\":4166:4178   */\n      revert\n        /* \"#utility.yul\":4128:4180   */\n    tag_424:\n        /* \"#utility.yul\":4199:4228   */\n      tag_392\n        /* \"#utility.yul\":4218:4227   */\n      dup3\n        /* \"#utility.yul\":4199:4228   */\n      tag_379\n      jump\t// in\n        /* \"#utility.yul\":4239:4555   */\n    tag_79:\n        /* \"#utility.yul\":4316:4322   */\n      0x00\n        /* \"#utility.yul\":4324:4330   */\n      dup1\n        /* \"#utility.yul\":4332:4338   */\n      0x00\n        /* \"#utility.yul\":4385:4387   */\n      0x60\n        /* \"#utility.yul\":4373:4382   */\n      dup5\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4360:4383   */\n      sub\n        /* \"#utility.yul\":4356:4388   */\n      slt\n        /* \"#utility.yul\":4353:4405   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":4401:4402   */\n      0x00\n        /* \"#utility.yul\":4398:4399   */\n      dup1\n        /* \"#utility.yul\":4391:4403   */\n      revert\n        /* \"#utility.yul\":4353:4405   */\n    tag_427:\n      pop\n      pop\n        /* \"#utility.yul\":4424:4447   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":4494:4496   */\n      0x20\n        /* \"#utility.yul\":4479:4497   */\n      dup4\n      add\n        /* \"#utility.yul\":4466:4498   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":4545:4547   */\n      0x40\n        /* \"#utility.yul\":4530:4548   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":4517:4549   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":4239:4555   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4768:5465   */\n    tag_96:\n        /* \"#utility.yul\":5106:5107   */\n      0x01\n        /* \"#utility.yul\":5102:5103   */\n      dup1\n        /* \"#utility.yul\":5097:5100   */\n      0xa0\n        /* \"#utility.yul\":5093:5104   */\n      shl\n        /* \"#utility.yul\":5089:5108   */\n      sub\n        /* \"#utility.yul\":5081:5087   */\n      dup8\n        /* \"#utility.yul\":5077:5109   */\n      and\n        /* \"#utility.yul\":5066:5075   */\n      dup2\n        /* \"#utility.yul\":5059:5110   */\n      mstore\n        /* \"#utility.yul\":5146:5152   */\n      dup6\n        /* \"#utility.yul\":5141:5143   */\n      0x20\n        /* \"#utility.yul\":5130:5139   */\n      dup3\n        /* \"#utility.yul\":5126:5144   */\n      add\n        /* \"#utility.yul\":5119:5153   */\n      mstore\n        /* \"#utility.yul\":5189:5192   */\n      0xc0\n        /* \"#utility.yul\":5184:5186   */\n      0x40\n        /* \"#utility.yul\":5173:5182   */\n      dup3\n        /* \"#utility.yul\":5169:5187   */\n      add\n        /* \"#utility.yul\":5162:5193   */\n      mstore\n        /* \"#utility.yul\":5040:5044   */\n      0x00\n        /* \"#utility.yul\":5216:5262   */\n      tag_430\n        /* \"#utility.yul\":5257:5260   */\n      0xc0\n        /* \"#utility.yul\":5246:5255   */\n      dup4\n        /* \"#utility.yul\":5242:5261   */\n      add\n        /* \"#utility.yul\":5234:5240   */\n      dup8\n        /* \"#utility.yul\":5216:5262   */\n      tag_378\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":5310:5319   */\n      dup3\n        /* \"#utility.yul\":5302:5308   */\n      dup2\n        /* \"#utility.yul\":5298:5320   */\n      sub\n        /* \"#utility.yul\":5293:5295   */\n      0x60\n        /* \"#utility.yul\":5282:5291   */\n      dup5\n        /* \"#utility.yul\":5278:5296   */\n      add\n        /* \"#utility.yul\":5271:5321   */\n      mstore\n        /* \"#utility.yul\":5338:5371   */\n      tag_431\n        /* \"#utility.yul\":5364:5370   */\n      dup2\n        /* \"#utility.yul\":5356:5362   */\n      dup8\n        /* \"#utility.yul\":5338:5371   */\n      tag_378\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":5402:5405   */\n      0x80\n        /* \"#utility.yul\":5387:5406   */\n      dup5\n      add\n        /* \"#utility.yul\":5380:5415   */\n      swap6\n      swap1\n      swap6\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":5446:5449   */\n      0xa0\n        /* \"#utility.yul\":5431:5450   */\n      add\n        /* \"#utility.yul\":5424:5459   */\n      mstore\n        /* \"#utility.yul\":5330:5371   */\n      swap5\n        /* \"#utility.yul\":4768:5465   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5470:6103   */\n    tag_381:\n        /* \"#utility.yul\":5583:5584   */\n      0x01\n        /* \"#utility.yul\":5579:5580   */\n      dup1\n        /* \"#utility.yul\":5574:5577   */\n      0xa0\n        /* \"#utility.yul\":5570:5581   */\n      shl\n        /* \"#utility.yul\":5566:5585   */\n      sub\n        /* \"#utility.yul\":5558:5563   */\n      dup2\n        /* \"#utility.yul\":5552:5564   */\n      mload\n        /* \"#utility.yul\":5548:5586   */\n      and\n        /* \"#utility.yul\":5543:5546   */\n      dup3\n        /* \"#utility.yul\":5536:5587   */\n      mstore\n        /* \"#utility.yul\":5636:5640   */\n      0x20\n        /* \"#utility.yul\":5629:5634   */\n      dup2\n        /* \"#utility.yul\":5625:5641   */\n      add\n        /* \"#utility.yul\":5619:5642   */\n      mload\n        /* \"#utility.yul\":5612:5616   */\n      0x20\n        /* \"#utility.yul\":5607:5610   */\n      dup4\n        /* \"#utility.yul\":5603:5617   */\n      add\n        /* \"#utility.yul\":5596:5643   */\n      mstore\n        /* \"#utility.yul\":5518:5521   */\n      0x00\n        /* \"#utility.yul\":5689:5693   */\n      0x40\n        /* \"#utility.yul\":5682:5687   */\n      dup3\n        /* \"#utility.yul\":5678:5694   */\n      add\n        /* \"#utility.yul\":5672:5695   */\n      mload\n        /* \"#utility.yul\":5727:5731   */\n      0xc0\n        /* \"#utility.yul\":5720:5724   */\n      0x40\n        /* \"#utility.yul\":5715:5718   */\n      dup6\n        /* \"#utility.yul\":5711:5725   */\n      add\n        /* \"#utility.yul\":5704:5732   */\n      mstore\n        /* \"#utility.yul\":5753:5800   */\n      tag_433\n        /* \"#utility.yul\":5794:5798   */\n      0xc0\n        /* \"#utility.yul\":5789:5792   */\n      dup6\n        /* \"#utility.yul\":5785:5799   */\n      add\n        /* \"#utility.yul\":5771:5783   */\n      dup3\n        /* \"#utility.yul\":5753:5800   */\n      tag_378\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":5741:5800   */\n      swap1\n      pop\n        /* \"#utility.yul\":5848:5852   */\n      0x60\n        /* \"#utility.yul\":5841:5846   */\n      dup4\n        /* \"#utility.yul\":5837:5853   */\n      add\n        /* \"#utility.yul\":5831:5854   */\n      mload\n        /* \"#utility.yul\":5896:5899   */\n      dup5\n        /* \"#utility.yul\":5890:5894   */\n      dup3\n        /* \"#utility.yul\":5886:5900   */\n      sub\n        /* \"#utility.yul\":5879:5883   */\n      0x60\n        /* \"#utility.yul\":5874:5877   */\n      dup7\n        /* \"#utility.yul\":5870:5884   */\n      add\n        /* \"#utility.yul\":5863:5901   */\n      mstore\n        /* \"#utility.yul\":5924:5963   */\n      tag_434\n        /* \"#utility.yul\":5958:5962   */\n      dup3\n        /* \"#utility.yul\":5942:5956   */\n      dup3\n        /* \"#utility.yul\":5924:5963   */\n      tag_378\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":5910:5963   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6012:6016   */\n      0x80\n        /* \"#utility.yul\":6005:6010   */\n      dup4\n        /* \"#utility.yul\":6001:6017   */\n      add\n        /* \"#utility.yul\":5995:6018   */\n      mload\n        /* \"#utility.yul\":5988:5992   */\n      0x80\n        /* \"#utility.yul\":5983:5986   */\n      dup6\n        /* \"#utility.yul\":5979:5993   */\n      add\n        /* \"#utility.yul\":5972:6019   */\n      mstore\n        /* \"#utility.yul\":6068:6072   */\n      0xa0\n        /* \"#utility.yul\":6061:6066   */\n      dup4\n        /* \"#utility.yul\":6057:6073   */\n      add\n        /* \"#utility.yul\":6051:6074   */\n      mload\n        /* \"#utility.yul\":6044:6048   */\n      0xa0\n        /* \"#utility.yul\":6039:6042   */\n      dup6\n        /* \"#utility.yul\":6035:6049   */\n      add\n        /* \"#utility.yul\":6028:6075   */\n      mstore\n        /* \"#utility.yul\":6091:6097   */\n      dup1\n        /* \"#utility.yul\":6084:6097   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5470:6103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6108:6358   */\n    tag_111:\n        /* \"#utility.yul\":6281:6283   */\n      0x20\n        /* \"#utility.yul\":6270:6279   */\n      dup2\n        /* \"#utility.yul\":6263:6284   */\n      mstore\n        /* \"#utility.yul\":6244:6248   */\n      0x00\n        /* \"#utility.yul\":6301:6352   */\n      tag_392\n        /* \"#utility.yul\":6348:6350   */\n      0x20\n        /* \"#utility.yul\":6337:6346   */\n      dup4\n        /* \"#utility.yul\":6333:6351   */\n      add\n        /* \"#utility.yul\":6325:6331   */\n      dup5\n        /* \"#utility.yul\":6301:6352   */\n      tag_381\n      jump\t// in\n        /* \"#utility.yul\":6363:6623   */\n    tag_114:\n        /* \"#utility.yul\":6431:6437   */\n      0x00\n        /* \"#utility.yul\":6439:6445   */\n      dup1\n        /* \"#utility.yul\":6492:6494   */\n      0x40\n        /* \"#utility.yul\":6480:6489   */\n      dup4\n        /* \"#utility.yul\":6471:6478   */\n      dup6\n        /* \"#utility.yul\":6467:6490   */\n      sub\n        /* \"#utility.yul\":6463:6495   */\n      slt\n        /* \"#utility.yul\":6460:6512   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":6508:6509   */\n      0x00\n        /* \"#utility.yul\":6505:6506   */\n      dup1\n        /* \"#utility.yul\":6498:6510   */\n      revert\n        /* \"#utility.yul\":6460:6512   */\n    tag_438:\n        /* \"#utility.yul\":6531:6560   */\n      tag_439\n        /* \"#utility.yul\":6550:6559   */\n      dup4\n        /* \"#utility.yul\":6531:6560   */\n      tag_379\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6521:6560   */\n      swap2\n      pop\n        /* \"#utility.yul\":6579:6617   */\n      tag_440\n        /* \"#utility.yul\":6613:6615   */\n      0x20\n        /* \"#utility.yul\":6602:6611   */\n      dup5\n        /* \"#utility.yul\":6598:6616   */\n      add\n        /* \"#utility.yul\":6579:6617   */\n      tag_379\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":6569:6617   */\n      swap1\n      pop\n        /* \"#utility.yul\":6363:6623   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6628:7461   */\n    tag_121:\n        /* \"#utility.yul\":6814:6818   */\n      0x00\n        /* \"#utility.yul\":6843:6845   */\n      0x20\n        /* \"#utility.yul\":6883:6885   */\n      dup1\n        /* \"#utility.yul\":6872:6881   */\n      dup4\n        /* \"#utility.yul\":6868:6886   */\n      add\n        /* \"#utility.yul\":6913:6915   */\n      dup2\n        /* \"#utility.yul\":6902:6911   */\n      dup5\n        /* \"#utility.yul\":6895:6916   */\n      mstore\n        /* \"#utility.yul\":6936:6942   */\n      dup1\n        /* \"#utility.yul\":6971:6977   */\n      dup6\n        /* \"#utility.yul\":6965:6978   */\n      mload\n        /* \"#utility.yul\":7002:7008   */\n      dup1\n        /* \"#utility.yul\":6994:7000   */\n      dup4\n        /* \"#utility.yul\":6987:7009   */\n      mstore\n        /* \"#utility.yul\":7040:7042   */\n      0x40\n        /* \"#utility.yul\":7029:7038   */\n      dup7\n        /* \"#utility.yul\":7025:7043   */\n      add\n        /* \"#utility.yul\":7018:7043   */\n      swap2\n      pop\n        /* \"#utility.yul\":7102:7104   */\n      0x40\n        /* \"#utility.yul\":7092:7098   */\n      dup2\n        /* \"#utility.yul\":7089:7090   */\n      0x05\n        /* \"#utility.yul\":7085:7099   */\n      shl\n        /* \"#utility.yul\":7074:7083   */\n      dup8\n        /* \"#utility.yul\":7070:7100   */\n      add\n        /* \"#utility.yul\":7066:7105   */\n      add\n        /* \"#utility.yul\":7052:7105   */\n      swap3\n      pop\n        /* \"#utility.yul\":7140:7142   */\n      dup4\n        /* \"#utility.yul\":7132:7138   */\n      dup8\n        /* \"#utility.yul\":7128:7143   */\n      add\n        /* \"#utility.yul\":7161:7162   */\n      0x00\n        /* \"#utility.yul\":7171:7432   */\n    tag_442:\n        /* \"#utility.yul\":7185:7191   */\n      dup3\n        /* \"#utility.yul\":7182:7183   */\n      dup2\n        /* \"#utility.yul\":7179:7192   */\n      lt\n        /* \"#utility.yul\":7171:7432   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":7278:7280   */\n      0x3f\n        /* \"#utility.yul\":7274:7281   */\n      not\n        /* \"#utility.yul\":7262:7271   */\n      dup9\n        /* \"#utility.yul\":7254:7260   */\n      dup7\n        /* \"#utility.yul\":7250:7272   */\n      sub\n        /* \"#utility.yul\":7246:7282   */\n      add\n        /* \"#utility.yul\":7241:7244   */\n      dup5\n        /* \"#utility.yul\":7234:7283   */\n      mstore\n        /* \"#utility.yul\":7306:7352   */\n      tag_445\n        /* \"#utility.yul\":7345:7351   */\n      dup6\n        /* \"#utility.yul\":7336:7342   */\n      dup4\n        /* \"#utility.yul\":7330:7343   */\n      mload\n        /* \"#utility.yul\":7306:7352   */\n      tag_381\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":7296:7352   */\n      swap5\n      pop\n        /* \"#utility.yul\":7410:7422   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":7375:7390   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":7207:7208   */\n      0x01\n        /* \"#utility.yul\":7200:7209   */\n      add\n        /* \"#utility.yul\":7171:7432   */\n      jump(tag_442)\n    tag_444:\n      pop\n        /* \"#utility.yul\":7449:7455   */\n      swap3\n      swap8\n        /* \"#utility.yul\":6628:7461   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7466:7846   */\n    tag_130:\n        /* \"#utility.yul\":7545:7546   */\n      0x01\n        /* \"#utility.yul\":7541:7553   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7588:7600   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7609:7670   */\n      tag_447\n      jumpi\n        /* \"#utility.yul\":7663:7667   */\n      0x7f\n        /* \"#utility.yul\":7655:7661   */\n      dup3\n        /* \"#utility.yul\":7651:7668   */\n      and\n        /* \"#utility.yul\":7641:7668   */\n      swap2\n      pop\n        /* \"#utility.yul\":7609:7670   */\n    tag_447:\n        /* \"#utility.yul\":7716:7718   */\n      0x20\n        /* \"#utility.yul\":7708:7714   */\n      dup3\n        /* \"#utility.yul\":7705:7719   */\n      lt\n        /* \"#utility.yul\":7685:7703   */\n      dup2\n        /* \"#utility.yul\":7682:7720   */\n      sub\n        /* \"#utility.yul\":7679:7840   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":7762:7772   */\n      0x4e487b71\n        /* \"#utility.yul\":7757:7760   */\n      0xe0\n        /* \"#utility.yul\":7753:7773   */\n      shl\n        /* \"#utility.yul\":7750:7751   */\n      0x00\n        /* \"#utility.yul\":7743:7774   */\n      mstore\n        /* \"#utility.yul\":7797:7801   */\n      0x22\n        /* \"#utility.yul\":7794:7795   */\n      0x04\n        /* \"#utility.yul\":7787:7802   */\n      mstore\n        /* \"#utility.yul\":7825:7829   */\n      0x24\n        /* \"#utility.yul\":7822:7823   */\n      0x00\n        /* \"#utility.yul\":7815:7830   */\n      revert\n        /* \"#utility.yul\":7679:7840   */\n    tag_448:\n      pop\n        /* \"#utility.yul\":7466:7846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7851:7978   */\n    tag_143:\n        /* \"#utility.yul\":7912:7922   */\n      0x4e487b71\n        /* \"#utility.yul\":7907:7910   */\n      0xe0\n        /* \"#utility.yul\":7903:7923   */\n      shl\n        /* \"#utility.yul\":7900:7901   */\n      0x00\n        /* \"#utility.yul\":7893:7924   */\n      mstore\n        /* \"#utility.yul\":7943:7947   */\n      0x32\n        /* \"#utility.yul\":7940:7941   */\n      0x04\n        /* \"#utility.yul\":7933:7948   */\n      mstore\n        /* \"#utility.yul\":7967:7971   */\n      0x24\n        /* \"#utility.yul\":7964:7965   */\n      0x00\n        /* \"#utility.yul\":7957:7972   */\n      revert\n        /* \"#utility.yul\":8665:8792   */\n    tag_382:\n        /* \"#utility.yul\":8726:8736   */\n      0x4e487b71\n        /* \"#utility.yul\":8721:8724   */\n      0xe0\n        /* \"#utility.yul\":8717:8737   */\n      shl\n        /* \"#utility.yul\":8714:8715   */\n      0x00\n        /* \"#utility.yul\":8707:8738   */\n      mstore\n        /* \"#utility.yul\":8757:8761   */\n      0x11\n        /* \"#utility.yul\":8754:8755   */\n      0x04\n        /* \"#utility.yul\":8747:8762   */\n      mstore\n        /* \"#utility.yul\":8781:8785   */\n      0x24\n        /* \"#utility.yul\":8778:8779   */\n      0x00\n        /* \"#utility.yul\":8771:8786   */\n      revert\n        /* \"#utility.yul\":8797:9014   */\n    tag_159:\n        /* \"#utility.yul\":8837:8838   */\n      0x00\n        /* \"#utility.yul\":8863:8864   */\n      dup3\n        /* \"#utility.yul\":8853:8985   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":8907:8917   */\n      0x4e487b71\n        /* \"#utility.yul\":8902:8905   */\n      0xe0\n        /* \"#utility.yul\":8898:8918   */\n      shl\n        /* \"#utility.yul\":8895:8896   */\n      0x00\n        /* \"#utility.yul\":8888:8919   */\n      mstore\n        /* \"#utility.yul\":8942:8946   */\n      0x12\n        /* \"#utility.yul\":8939:8940   */\n      0x04\n        /* \"#utility.yul\":8932:8947   */\n      mstore\n        /* \"#utility.yul\":8970:8974   */\n      0x24\n        /* \"#utility.yul\":8967:8968   */\n      0x00\n        /* \"#utility.yul\":8960:8975   */\n      revert\n        /* \"#utility.yul\":8853:8985   */\n    tag_454:\n      pop\n        /* \"#utility.yul\":8999:9008   */\n      div\n      swap1\n        /* \"#utility.yul\":8797:9014   */\n      jump\t// out\n        /* \"#utility.yul\":9298:9575   */\n    tag_167:\n        /* \"#utility.yul\":9365:9371   */\n      0x00\n        /* \"#utility.yul\":9418:9420   */\n      0x20\n        /* \"#utility.yul\":9406:9415   */\n      dup3\n        /* \"#utility.yul\":9397:9404   */\n      dup5\n        /* \"#utility.yul\":9393:9416   */\n      sub\n        /* \"#utility.yul\":9389:9421   */\n      slt\n        /* \"#utility.yul\":9386:9438   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":9434:9435   */\n      0x00\n        /* \"#utility.yul\":9431:9432   */\n      dup1\n        /* \"#utility.yul\":9424:9436   */\n      revert\n        /* \"#utility.yul\":9386:9438   */\n    tag_457:\n        /* \"#utility.yul\":9466:9475   */\n      dup2\n        /* \"#utility.yul\":9460:9476   */\n      mload\n        /* \"#utility.yul\":9519:9524   */\n      dup1\n        /* \"#utility.yul\":9512:9525   */\n      iszero\n        /* \"#utility.yul\":9505:9526   */\n      iszero\n        /* \"#utility.yul\":9498:9503   */\n      dup2\n        /* \"#utility.yul\":9495:9527   */\n      eq\n        /* \"#utility.yul\":9485:9545   */\n      tag_392\n      jumpi\n        /* \"#utility.yul\":9541:9542   */\n      0x00\n        /* \"#utility.yul\":9538:9539   */\n      dup1\n        /* \"#utility.yul\":9531:9543   */\n      revert\n        /* \"#utility.yul\":9923:10091   */\n    tag_176:\n        /* \"#utility.yul\":9996:10005   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":10027:10036   */\n      dup2\n      iszero\n        /* \"#utility.yul\":10044:10059   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":10038:10060   */\n      dup5\n      eq\n        /* \"#utility.yul\":10024:10061   */\n      or\n        /* \"#utility.yul\":10014:10085   */\n      tag_135\n      jumpi\n        /* \"#utility.yul\":10065:10083   */\n      tag_135\n      tag_382\n      jump\t// in\n        /* \"#utility.yul\":11266:11811   */\n    tag_384:\n        /* \"#utility.yul\":11368:11370   */\n      0x1f\n        /* \"#utility.yul\":11363:11366   */\n      dup3\n        /* \"#utility.yul\":11360:11371   */\n      gt\n        /* \"#utility.yul\":11357:11805   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":11404:11405   */\n      0x00\n        /* \"#utility.yul\":11429:11434   */\n      dup2\n        /* \"#utility.yul\":11425:11427   */\n      dup2\n        /* \"#utility.yul\":11418:11435   */\n      mstore\n        /* \"#utility.yul\":11474:11478   */\n      0x20\n        /* \"#utility.yul\":11470:11472   */\n      dup2\n        /* \"#utility.yul\":11460:11479   */\n      keccak256\n        /* \"#utility.yul\":11544:11546   */\n      0x1f\n        /* \"#utility.yul\":11532:11542   */\n      dup6\n        /* \"#utility.yul\":11528:11547   */\n      add\n        /* \"#utility.yul\":11525:11526   */\n      0x05\n        /* \"#utility.yul\":11521:11548   */\n      shr\n        /* \"#utility.yul\":11515:11519   */\n      dup2\n        /* \"#utility.yul\":11511:11549   */\n      add\n        /* \"#utility.yul\":11580:11584   */\n      0x20\n        /* \"#utility.yul\":11568:11578   */\n      dup7\n        /* \"#utility.yul\":11565:11585   */\n      lt\n        /* \"#utility.yul\":11562:11609   */\n      iszero\n      tag_469\n      jumpi\n      pop\n        /* \"#utility.yul\":11603:11607   */\n      dup1\n        /* \"#utility.yul\":11562:11609   */\n    tag_469:\n        /* \"#utility.yul\":11658:11660   */\n      0x1f\n        /* \"#utility.yul\":11653:11656   */\n      dup6\n        /* \"#utility.yul\":11649:11661   */\n      add\n        /* \"#utility.yul\":11646:11647   */\n      0x05\n        /* \"#utility.yul\":11642:11662   */\n      shr\n        /* \"#utility.yul\":11636:11640   */\n      dup3\n        /* \"#utility.yul\":11632:11663   */\n      add\n        /* \"#utility.yul\":11622:11663   */\n      swap2\n      pop\n        /* \"#utility.yul\":11713:11795   */\n    tag_470:\n        /* \"#utility.yul\":11731:11733   */\n      dup2\n        /* \"#utility.yul\":11724:11729   */\n      dup2\n        /* \"#utility.yul\":11721:11734   */\n      lt\n        /* \"#utility.yul\":11713:11795   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":11776:11793   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":11757:11758   */\n      0x01\n        /* \"#utility.yul\":11746:11759   */\n      add\n        /* \"#utility.yul\":11713:11795   */\n      jump(tag_470)\n    tag_472:\n        /* \"#utility.yul\":11717:11720   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11266:11811   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11987:13339   */\n    tag_193:\n        /* \"#utility.yul\":12113:12116   */\n      dup2\n        /* \"#utility.yul\":12107:12117   */\n      mload\n        /* \"#utility.yul\":12140:12158   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12132:12138   */\n      dup2\n        /* \"#utility.yul\":12129:12159   */\n      gt\n        /* \"#utility.yul\":12126:12182   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":12162:12180   */\n      tag_476\n      tag_297\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":12191:12288   */\n      tag_477\n        /* \"#utility.yul\":12281:12287   */\n      dup2\n        /* \"#utility.yul\":12241:12279   */\n      tag_478\n        /* \"#utility.yul\":12273:12277   */\n      dup5\n        /* \"#utility.yul\":12267:12278   */\n      sload\n        /* \"#utility.yul\":12241:12279   */\n      tag_130\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":12235:12239   */\n      dup5\n        /* \"#utility.yul\":12191:12288   */\n      tag_384\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":12343:12347   */\n      0x20\n      dup1\n        /* \"#utility.yul\":12407:12409   */\n      0x1f\n        /* \"#utility.yul\":12396:12410   */\n      dup4\n      gt\n        /* \"#utility.yul\":12424:12425   */\n      0x01\n        /* \"#utility.yul\":12419:13082   */\n      dup2\n      eq\n      tag_480\n      jumpi\n        /* \"#utility.yul\":13126:13127   */\n      0x00\n        /* \"#utility.yul\":13143:13149   */\n      dup5\n        /* \"#utility.yul\":13140:13229   */\n      iszero\n      tag_481\n      jumpi\n      pop\n        /* \"#utility.yul\":13195:13214   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":13189:13215   */\n      mload\n        /* \"#utility.yul\":13140:13229   */\n    tag_481:\n      not(0x00)\n        /* \"#utility.yul\":11944:11945   */\n      0x03\n        /* \"#utility.yul\":11940:11951   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":11936:11960   */\n      shr\n        /* \"#utility.yul\":11932:11961   */\n      not\n        /* \"#utility.yul\":11922:11962   */\n      and\n        /* \"#utility.yul\":11968:11969   */\n      0x01\n        /* \"#utility.yul\":11964:11975   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":11919:11976   */\n      or\n        /* \"#utility.yul\":13242:13323   */\n      dup6\n      sstore\n        /* \"#utility.yul\":12389:13333   */\n      jump(tag_472)\n        /* \"#utility.yul\":12419:13082   */\n    tag_480:\n        /* \"#utility.yul\":11213:11214   */\n      0x00\n        /* \"#utility.yul\":11206:11220   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":11250:11254   */\n      0x20\n        /* \"#utility.yul\":11237:11255   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":12455:12475   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":12573:12809   */\n    tag_484:\n        /* \"#utility.yul\":12587:12594   */\n      dup3\n        /* \"#utility.yul\":12584:12585   */\n      dup2\n        /* \"#utility.yul\":12581:12595   */\n      lt\n        /* \"#utility.yul\":12573:12809   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":12676:12695   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":12670:12696   */\n      mload\n        /* \"#utility.yul\":12655:12697   */\n      dup3\n      sstore\n        /* \"#utility.yul\":12768:12795   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":12736:12737   */\n      0x01\n        /* \"#utility.yul\":12724:12738   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":12603:12622   */\n      dup5\n      add\n        /* \"#utility.yul\":12573:12809   */\n      jump(tag_484)\n    tag_486:\n        /* \"#utility.yul\":12577:12580   */\n      pop\n        /* \"#utility.yul\":12837:12843   */\n      dup6\n        /* \"#utility.yul\":12828:12835   */\n      dup3\n        /* \"#utility.yul\":12825:12844   */\n      lt\n        /* \"#utility.yul\":12822:13023   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":12898:12917   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":12892:12918   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":12981:12982   */\n      0x03\n        /* \"#utility.yul\":12977:12991   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":12993:12996   */\n      0xf8\n        /* \"#utility.yul\":12973:12997   */\n      and\n        /* \"#utility.yul\":12969:13006   */\n      shr\n        /* \"#utility.yul\":12965:13007   */\n      not\n        /* \"#utility.yul\":12950:13008   */\n      and\n        /* \"#utility.yul\":12935:13009   */\n      dup2\n      sstore\n        /* \"#utility.yul\":12822:13023   */\n    tag_487:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13069:13070   */\n      0x01\n        /* \"#utility.yul\":13053:13067   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":13049:13071   */\n      add\n        /* \"#utility.yul\":13036:13072   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":11987:13339   */\n      jump\t// out\n        /* \"#utility.yul\":13344:13472   */\n    tag_196:\n        /* \"#utility.yul\":13411:13420   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":13432:13443   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":13429:13466   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":13446:13464   */\n      tag_135\n      tag_382\n      jump\t// in\n        /* \"#utility.yul\":13477:13661   */\n    tag_217:\n        /* \"#utility.yul\":13547:13553   */\n      0x00\n        /* \"#utility.yul\":13600:13602   */\n      0x20\n        /* \"#utility.yul\":13588:13597   */\n      dup3\n        /* \"#utility.yul\":13579:13586   */\n      dup5\n        /* \"#utility.yul\":13575:13598   */\n      sub\n        /* \"#utility.yul\":13571:13603   */\n      slt\n        /* \"#utility.yul\":13568:13620   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":13616:13617   */\n      0x00\n        /* \"#utility.yul\":13613:13614   */\n      dup1\n        /* \"#utility.yul\":13606:13618   */\n      revert\n        /* \"#utility.yul\":13568:13620   */\n    tag_492:\n      pop\n        /* \"#utility.yul\":13639:13655   */\n      mload\n      swap2\n        /* \"#utility.yul\":13477:13661   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14002:14127   */\n    tag_227:\n        /* \"#utility.yul\":14067:14076   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":14088:14098   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":14085:14121   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":14101:14119   */\n      tag_135\n      tag_382\n      jump\t// in\n        /* \"#utility.yul\":14726:14861   */\n    tag_321:\n        /* \"#utility.yul\":14765:14768   */\n      0x00\n        /* \"#utility.yul\":14786:14803   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":14783:14826   */\n      tag_501\n      jumpi\n        /* \"#utility.yul\":14806:14824   */\n      tag_501\n      tag_382\n      jump\t// in\n    tag_501:\n      pop\n        /* \"#utility.yul\":14853:14854   */\n      0x01\n        /* \"#utility.yul\":14842:14855   */\n      add\n      swap1\n        /* \"#utility.yul\":14726:14861   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cd76bc054f9b7286b2319f7424a569c2b00a432882652b1101de32972756f42e64736f6c63430008140033\n}\n\nsub_1: assembly {\n        /* \"contracts/CredentialVerifier.sol\":150:992  contract CredentialVerifier is Ownable {... */\n      mstore(0x40, 0x80)\n        /* \"contracts/CredentialVerifier.sol\":252:398  constructor(address gitcoinResolverAddress_) Ownable(_msgSender()) {... */\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      mload(0x40)\n      sub(codesize, bytecodeSize)\n      dup1\n      bytecodeSize\n      dup4\n      codecopy\n      dup2\n      add\n      0x40\n      dup2\n      swap1\n      mstore\n      tag_2\n      swap2\n      tag_3\n      jump\t// in\n    tag_2:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n      tag_9\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":455:506   */\n      mstore\n        /* \"#utility.yul\":428:446   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n      tag_12\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n      tag_13\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_12:\n      pop\n        /* \"contracts/CredentialVerifier.sol\":330:346  _gitcoinResolver */\n      0x01\n        /* \"contracts/CredentialVerifier.sol\":330:390  _gitcoinResolver = IGitcoinResolver(gitcoinResolverAddress_) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/CredentialVerifier.sol\":150:992  contract CredentialVerifier is Ownable {... */\n      jump(tag_18)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:304   */\n    tag_3:\n        /* \"#utility.yul\":84:90   */\n      0x00\n        /* \"#utility.yul\":137:139   */\n      0x20\n        /* \"#utility.yul\":125:134   */\n      dup3\n        /* \"#utility.yul\":116:123   */\n      dup5\n        /* \"#utility.yul\":112:135   */\n      sub\n        /* \"#utility.yul\":108:140   */\n      slt\n        /* \"#utility.yul\":105:157   */\n      iszero\n      tag_20\n      jumpi\n        /* \"#utility.yul\":153:154   */\n      0x00\n        /* \"#utility.yul\":150:151   */\n      dup1\n        /* \"#utility.yul\":143:155   */\n      revert\n        /* \"#utility.yul\":105:157   */\n    tag_20:\n        /* \"#utility.yul\":179:195   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":224:255   */\n      dup2\n      and\n        /* \"#utility.yul\":214:256   */\n      dup2\n      eq\n        /* \"#utility.yul\":204:274   */\n      tag_21\n      jumpi\n        /* \"#utility.yul\":270:271   */\n      0x00\n        /* \"#utility.yul\":267:268   */\n      dup1\n        /* \"#utility.yul\":260:272   */\n      revert\n        /* \"#utility.yul\":204:274   */\n    tag_21:\n        /* \"#utility.yul\":293:298   */\n      swap4\n        /* \"#utility.yul\":14:304   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":309:512   */\n    tag_18:\n        /* \"contracts/CredentialVerifier.sol\":150:992  contract CredentialVerifier is Ownable {... */\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      0x00\n      codecopy\n      0x00\n      return\n    stop\n\n    sub_0: assembly {\n            /* \"contracts/CredentialVerifier.sol\":150:992  contract CredentialVerifier is Ownable {... */\n          mstore(0x40, 0x80)\n          callvalue\n          dup1\n          iszero\n          tag_1\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_1:\n          pop\n          jumpi(tag_2, lt(calldatasize, 0x04))\n          shr(0xe0, calldataload(0x00))\n          dup1\n          0x2ca835a8\n          eq\n          tag_3\n          jumpi\n          dup1\n          0x715018a6\n          eq\n          tag_4\n          jumpi\n          dup1\n          0x8da5cb5b\n          eq\n          tag_5\n          jumpi\n          dup1\n          0xbd75aae8\n          eq\n          tag_6\n          jumpi\n          dup1\n          0xf2fde38b\n          eq\n          tag_7\n          jumpi\n        tag_2:\n          0x00\n          dup1\n          revert\n            /* \"contracts/CredentialVerifier.sol\":406:609  function verifyGitcionPass(address owner, bytes32 uid) public returns (bool) {... */\n        tag_3:\n          tag_8\n          tag_9\n          calldatasize\n          0x04\n          tag_10\n          jump\t// in\n        tag_9:\n          tag_11\n          jump\t// in\n        tag_8:\n          mload(0x40)\n            /* \"#utility.yul\":616:630   */\n          swap1\n          iszero\n            /* \"#utility.yul\":609:631   */\n          iszero\n            /* \"#utility.yul\":591:632   */\n          dup2\n          mstore\n            /* \"#utility.yul\":579:581   */\n          0x20\n            /* \"#utility.yul\":564:582   */\n          add\n            /* \"contracts/CredentialVerifier.sol\":406:609  function verifyGitcionPass(address owner, bytes32 uid) public returns (bool) {... */\n        tag_12:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          return\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n        tag_4:\n          tag_14\n          tag_15\n          jump\t// in\n        tag_14:\n          stop\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n        tag_5:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n          sload\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n          mload(0x40)\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n          swap1\n          swap2\n          and\n            /* \"#utility.yul\":789:840   */\n          dup2\n          mstore\n            /* \"#utility.yul\":777:779   */\n          0x20\n            /* \"#utility.yul\":762:780   */\n          add\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n          tag_12\n            /* \"#utility.yul\":643:846   */\n          jump\n            /* \"contracts/CredentialVerifier.sol\":617:890  function calcWeight(address owner, bytes32 uid) public returns (uint) {... */\n        tag_6:\n          tag_20\n          tag_21\n          calldatasize\n          0x04\n          tag_10\n          jump\t// in\n        tag_21:\n          tag_22\n          jump\t// in\n        tag_20:\n          mload(0x40)\n            /* \"#utility.yul\":997:1022   */\n          swap1\n          dup2\n          mstore\n            /* \"#utility.yul\":985:987   */\n          0x20\n            /* \"#utility.yul\":970:988   */\n          add\n            /* \"contracts/CredentialVerifier.sol\":617:890  function calcWeight(address owner, bytes32 uid) public returns (uint) {... */\n          tag_12\n            /* \"#utility.yul\":851:1028   */\n          jump\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n        tag_7:\n          tag_14\n          tag_26\n          calldatasize\n          0x04\n          tag_27\n          jump\t// in\n        tag_26:\n          tag_28\n          jump\t// in\n            /* \"contracts/CredentialVerifier.sol\":406:609  function verifyGitcionPass(address owner, bytes32 uid) public returns (bool) {... */\n        tag_11:\n            /* \"contracts/CredentialVerifier.sol\":521:525  true */\n          0x01\n            /* \"contracts/CredentialVerifier.sol\":406:609  function verifyGitcionPass(address owner, bytes32 uid) public returns (bool) {... */\n        tag_29:\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n        tag_15:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          tag_31\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n          tag_32\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          jump\t// in\n        tag_31:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n          tag_34\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n          tag_35\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n          jump\t// in\n        tag_34:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n          jump\t// out\n            /* \"contracts/CredentialVerifier.sol\":617:890  function calcWeight(address owner, bytes32 uid) public returns (uint) {... */\n        tag_22:\n            /* \"contracts/CredentialVerifier.sol\":829:830  1 */\n          0x01\n            /* \"contracts/CredentialVerifier.sol\":822:830  return 1 */\n          jump(tag_29)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n        tag_28:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          tag_41\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n          tag_32\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          jump\t// in\n        tag_41:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n          dup2\n          and\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n          tag_43\n          jumpi\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          mload(0x40)\n          shl(0xe0, 0x1e4fbdf7)\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":789:840   */\n          mstore\n            /* \"#utility.yul\":762:780   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n        tag_44:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n        tag_43:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n          tag_45\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n          dup2\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n          tag_35\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n          jump\t// in\n        tag_45:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n        tag_32:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n          sload\n          sub(shl(0xa0, 0x01), 0x01)\n          and\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n          eq\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n          tag_34\n          jumpi\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          mload(0x40)\n          shl(0xe0, 0x118cdaa7)\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":789:840   */\n          mstore\n            /* \"#utility.yul\":762:780   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          tag_44\n            /* \"#utility.yul\":643:846   */\n          jump\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n        tag_35:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n          dup1\n          sload\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n          dup4\n          dup2\n          and\n          not(sub(shl(0xa0, 0x01), 0x01))\n          dup4\n          and\n          dup2\n          or\n          dup5\n          sstore\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          mload(0x40)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n          swap2\n          swap1\n          swap3\n          and\n          swap3\n          dup4\n          swap2\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n          swap2\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n          swap1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          log3\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n          pop\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":14:187   */\n        tag_55:\n            /* \"#utility.yul\":82:102   */\n          dup1\n          calldataload\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":131:162   */\n          dup2\n          and\n            /* \"#utility.yul\":121:163   */\n          dup2\n          eq\n            /* \"#utility.yul\":111:181   */\n          tag_58\n          jumpi\n            /* \"#utility.yul\":177:178   */\n          0x00\n            /* \"#utility.yul\":174:175   */\n          dup1\n            /* \"#utility.yul\":167:179   */\n          revert\n            /* \"#utility.yul\":111:181   */\n        tag_58:\n            /* \"#utility.yul\":14:187   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":192:446   */\n        tag_10:\n            /* \"#utility.yul\":260:266   */\n          0x00\n            /* \"#utility.yul\":268:274   */\n          dup1\n            /* \"#utility.yul\":321:323   */\n          0x40\n            /* \"#utility.yul\":309:318   */\n          dup4\n            /* \"#utility.yul\":300:307   */\n          dup6\n            /* \"#utility.yul\":296:319   */\n          sub\n            /* \"#utility.yul\":292:324   */\n          slt\n            /* \"#utility.yul\":289:341   */\n          iszero\n          tag_60\n          jumpi\n            /* \"#utility.yul\":337:338   */\n          0x00\n            /* \"#utility.yul\":334:335   */\n          dup1\n            /* \"#utility.yul\":327:339   */\n          revert\n            /* \"#utility.yul\":289:341   */\n        tag_60:\n            /* \"#utility.yul\":360:389   */\n          tag_61\n            /* \"#utility.yul\":379:388   */\n          dup4\n            /* \"#utility.yul\":360:389   */\n          tag_55\n          jump\t// in\n        tag_61:\n            /* \"#utility.yul\":350:389   */\n          swap5\n            /* \"#utility.yul\":436:438   */\n          0x20\n            /* \"#utility.yul\":421:439   */\n          swap4\n          swap1\n          swap4\n          add\n            /* \"#utility.yul\":408:440   */\n          calldataload\n          swap4\n          pop\n          pop\n          pop\n            /* \"#utility.yul\":192:446   */\n          jump\t// out\n            /* \"#utility.yul\":1033:1219   */\n        tag_27:\n            /* \"#utility.yul\":1092:1098   */\n          0x00\n            /* \"#utility.yul\":1145:1147   */\n          0x20\n            /* \"#utility.yul\":1133:1142   */\n          dup3\n            /* \"#utility.yul\":1124:1131   */\n          dup5\n            /* \"#utility.yul\":1120:1143   */\n          sub\n            /* \"#utility.yul\":1116:1148   */\n          slt\n            /* \"#utility.yul\":1113:1165   */\n          iszero\n          tag_66\n          jumpi\n            /* \"#utility.yul\":1161:1162   */\n          0x00\n            /* \"#utility.yul\":1158:1159   */\n          dup1\n            /* \"#utility.yul\":1151:1163   */\n          revert\n            /* \"#utility.yul\":1113:1165   */\n        tag_66:\n            /* \"#utility.yul\":1184:1213   */\n          tag_67\n            /* \"#utility.yul\":1203:1212   */\n          dup3\n            /* \"#utility.yul\":1184:1213   */\n          tag_55\n          jump\t// in\n        tag_67:\n            /* \"#utility.yul\":1174:1213   */\n          swap4\n            /* \"#utility.yul\":1033:1219   */\n          swap3\n          pop\n          pop\n          pop\n          jump\t// out\n\n        auxdata: 0xa264697066735822122060b739706bc2ffe4187c03f614cd620b154157954b354e2990d1d9f2654d9fb864736f6c63430008140033\n    }\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1015": {
									"entryPoint": null,
									"id": 1015,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 282,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 377,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2940:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:9"
															},
															"nodeType": "YulIf",
															"src": "289:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:9"
															},
															"nodeType": "YulIf",
															"src": "359:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:9",
														"type": ""
													}
												],
												"src": "146:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:9",
														"type": ""
													}
												],
												"src": "531:121:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:9"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:9"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:9",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:9"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:9"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:9"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:9",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:9"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:9"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:9"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:9"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:9"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:9"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:9"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:9",
																			"statements": []
																		},
																		"src": "1104:82:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:9"
															},
															"nodeType": "YulIf",
															"src": "748:448:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:9",
														"type": ""
													}
												],
												"src": "657:545:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:9",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:9"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:9",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:9"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:9",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:9",
														"type": ""
													}
												],
												"src": "1207:166:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:9"
															},
															"nodeType": "YulIf",
															"src": "1517:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:9"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:9"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:9",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:9"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:9"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:9"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:9"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:9",
																					"statements": []
																				},
																				"src": "1964:236:9"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:9",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:9",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:9"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:9"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:9"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:9",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:9"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:9"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:9",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:9"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:9"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:9"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:9"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:9"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:9"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:9"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:9",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:9"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:9"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:9"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:9"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:9",
														"type": ""
													}
												],
												"src": "1378:1352:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2836:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2846:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2858:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2869:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2854:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2846:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2888:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2903:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2919:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2924:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2915:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2915:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2928:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2911:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2911:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2899:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2899:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2881:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2881:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2881:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2805:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2816:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2827:4:9",
														"type": ""
													}
												],
												"src": "2735:203:9"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052678ac7230489e800006006553480156200001c575f80fd5b506040805180820182526004808252634249415360e01b6020808401829052845180860190955291845290830152339160036200005a838262000219565b50600462000069828262000219565b5050506001600160a01b0381166200009a57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b620000a5816200011a565b5073c94abf0292ac04aac18c251d9c8169a8dd2bbbdc604051620000c9906200016b565b6001600160a01b039091168152602001604051809103905ff080158015620000f3573d5f803e3d5ffd5b50600b80546001600160a01b0319166001600160a01b0392909216919091179055620002e1565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b61035d8062001e6483390190565b634e487b7160e01b5f52604160045260245ffd5b600181811c90821680620001a257607f821691505b602082108103620001c157634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000214575f81815260208120601f850160051c81016020861015620001ef5750805b601f850160051c820191505b818110156200021057828155600101620001fb565b5050505b505050565b81516001600160401b0381111562000235576200023562000179565b6200024d816200024684546200018d565b84620001c7565b602080601f83116001811462000283575f84156200026b5750858301515b5f19600386901b1c1916600185901b17855562000210565b5f85815260208120601f198616915b82811015620002b35788860151825594840194600190910190840162000292565b5085821015620002d157878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b611b7580620002ef5f395ff3fe608060405234801561000f575f80fd5b5060043610610153575f3560e01c80638da5cb5b116100bf578063b1e95e9411610079578063b1e95e9414610303578063cda411be14610316578063dd62ed3e14610336578063ed2e39a71461036e578063f2fde38b1461038e578063f7cb2657146103a1575f80fd5b80638da5cb5b1461028057806393ad4aca1461029b57806395d89b41146102ba5780639a383dfd146102c2578063a6c2da4c146102e7578063a9059cbb146102f0575f80fd5b8063313ce56711610110578063313ce567146101e557806363b6ad97146101f4578063682290991461021e57806370a082311461023d578063715018a6146102655780638c881eeb1461026d575f80fd5b806306fdde0314610157578063095ea7b3146101755780630962ef79146101985780630a05b17f146101ad57806318160ddd146101c057806323b872dd146101d2575b5f80fd5b61015f6103a9565b60405161016c91906115ad565b60405180910390f35b6101886101833660046115e1565b610439565b604051901515815260200161016c565b6101ab6101a6366004611609565b610452565b005b6101ab6101bb3660046116bd565b610576565b6002545b60405190815260200161016c565b6101886101e0366004611736565b61088f565b6040516012815260200161016c565b6101c461020236600461176f565b600860209081525f928352604080842090915290825290205481565b6101c461022c36600461178f565b600c6020525f908152604090205481565b6101c461024b36600461178f565b6001600160a01b03165f9081526020819052604090205490565b6101ab6108b2565b6101ab61027b3660046117a8565b6108c5565b6005546040516001600160a01b03909116815260200161016c565b6101c46102a9366004611609565b60096020525f908152604090205481565b61015f610bcf565b6102d56102d0366004611609565b610bde565b60405161016c969594939291906117d1565b6101c460065481565b6101886102fe3660046115e1565b610d3b565b6101ab610311366004611609565b610d48565b610329610324366004611609565b610d55565b60405161016c9190611889565b6101c461034436600461189b565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61038161037c36600461176f565b610ef9565b60405161016c91906118cc565b6101ab61039c36600461178f565b61112f565b6007546101c4565b6060600380546103b89061192c565b80601f01602080910402602001604051908101604052809291908181526020018280546103e49061192c565b801561042f5780601f106104065761010080835404028352916020019161042f565b820191905f5260205f20905b81548152906001019060200180831161041257829003601f168201915b5050505050905090565b5f33610446818585611169565b60019150505b92915050565b6007818154811061046557610465611964565b905f5260205f2090600602016005015460095f8381526020019081526020015f205410156104c95760405162461bcd60e51b815260206004820152600c60248201526b1b9bdd08199a5b9a5cda195960a21b60448201526064015b60405180910390fd5b336001600160a01b0316600782815481106104e6576104e6611964565b5f9182526020909120600690910201546001600160a01b03161461053b5760405162461bcd60e51b815260206004820152600c60248201526b37b7363c9031b932b0ba37b960a11b60448201526064016104c0565b6105733360056007848154811061055457610554611964565b905f5260205f2090600602016004015461056e919061198c565b61117b565b50565b600b5460405163059506b560e31b8152336004820152602481018390526001600160a01b0390911690632ca835a8906044016020604051808303815f875af11580156105c4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105e891906119ab565b6106255760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd08185d5d1a1bdc9a5e995960921b60448201526064016104c0565b60075415806106665750335f9081526020819052604090205483111580156106665750600a6006548361065891906119ca565b610662919061198c565b8310155b6106a75760405162461bcd60e51b8152602060048201526012602482015271696e73756666696369656e742066756e647360701b60448201526064016104c0565b5f82116106e75760405162461bcd60e51b815260206004820152600e60248201526d696e76616c696420706172616d7360901b60448201526064016104c0565b335f908152600a6020526040902054156107435760405162461bcd60e51b815260206004820152601960248201527f6f6e6c7920616c6c6f77206f6e65206c69766520746f7069630000000000000060448201526064016104c0565b5f61074d60075490565b111561075d5761075d33846111b3565b6040805160c0810182523381524260208201908152918101878152606082018790526080820186905260a08201859052600780546001810182555f9190915282517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688600690920291820180546001600160a01b0319166001600160a01b0390921691909117815593517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68982015590519192917fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a9091019061083e9082611a2e565b50606082015160038201906108539082611a2e565b506080820151600482015560a09091015160059091015560075461087990600190611aea565b335f908152600a60205260409020555050505050565b5f3361089c8582856111e7565b6108a785858561125c565b506001949350505050565b6108ba6112b9565b6108c35f6112e6565b565b600b546040516317aeb55d60e31b8152336004820152602481018390525f916001600160a01b03169063bd75aae8906044016020604051808303815f875af1158015610913573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109379190611afd565b90505f81116109795760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd08185d5d1a1bdc9a5e995960921b60448201526064016104c0565b6007848154811061098c5761098c611964565b905f5260205f2090600602016005015460095f8681526020019081526020015f2054106109e65760405162461bcd60e51b8152602060048201526008602482015267199a5b9a5cda195960c21b60448201526064016104c0565b335f908152600c6020526040902054610a03906201518090611b14565b421015610a415760405162461bcd60e51b815260206004820152600c60248201526b6f6e6365207065722064617960a01b60448201526064016104c0565b335f818152600c6020526040902042905560078054610ac192919087908110610a6c57610a6c611964565b905f5260205f2090600602016005015460078781548110610a8f57610a8f611964565b905f5260205f20906006020160040154610aa9919061198c565b83600654610ab791906119ca565b61056e9190611b14565b5f848152600960205260408120805460019290610adf908490611b14565b90915550505f84815260086020908152604080832086845290915281208054839290610b0c908490611b14565b90915550506040805184815260208101839052859133917f6c7eb2743ec28489909706ea440d909129004996be657d36c6e9add778546abf910160405180910390a360078481548110610b6157610b61611964565b905f5260205f2090600602016005015460095f8681526020019081526020015f205403610bc9575f600a5f60078781548110610b9f57610b9f611964565b5f91825260208083206006909202909101546001600160a01b031683528201929092526040019020555b50505050565b6060600480546103b89061192c565b60078181548110610bed575f80fd5b5f9182526020909120600690910201805460018201546002830180546001600160a01b039093169450909291610c229061192c565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4e9061192c565b8015610c995780601f10610c7057610100808354040283529160200191610c99565b820191905f5260205f20905b815481529060010190602001808311610c7c57829003601f168201915b505050505090806003018054610cae9061192c565b80601f0160208091040260200160405190810160405280929190818152602001828054610cda9061192c565b8015610d255780601f10610cfc57610100808354040283529160200191610d25565b820191905f5260205f20905b815481529060010190602001808311610d0857829003601f168201915b5050505050908060040154908060050154905086565b5f3361044681858561125c565b610d506112b9565b600655565b610d5d61152f565b60078281548110610d7057610d70611964565b905f5260205f2090600602016040518060c00160405290815f82015f9054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815260200160018201548152602001600282018054610dce9061192c565b80601f0160208091040260200160405190810160405280929190818152602001828054610dfa9061192c565b8015610e455780601f10610e1c57610100808354040283529160200191610e45565b820191905f5260205f20905b815481529060010190602001808311610e2857829003601f168201915b50505050508152602001600382018054610e5e9061192c565b80601f0160208091040260200160405190810160405280929190818152602001828054610e8a9061192c565b8015610ed55780601f10610eac57610100808354040283529160200191610ed5565b820191905f5260205f20905b815481529060010190602001808311610eb857829003601f168201915b50505050508152602001600482015481526020016005820154815250509050919050565b60608167ffffffffffffffff811115610f1457610f14611620565b604051908082528060200260200182016040528015610f4d57816020015b610f3a61152f565b815260200190600190039081610f325790505b5090505f5b82811015611128576007610f668583611b14565b81548110610f7657610f76611964565b905f5260205f2090600602016040518060c00160405290815f82015f9054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815260200160018201548152602001600282018054610fd49061192c565b80601f01602080910402602001604051908101604052809291908181526020018280546110009061192c565b801561104b5780601f106110225761010080835404028352916020019161104b565b820191905f5260205f20905b81548152906001019060200180831161102e57829003601f168201915b505050505081526020016003820180546110649061192c565b80601f01602080910402602001604051908101604052809291908181526020018280546110909061192c565b80156110db5780601f106110b2576101008083540402835291602001916110db565b820191905f5260205f20905b8154815290600101906020018083116110be57829003601f168201915b505050505081526020016004820154815260200160058201548152505082828151811061110a5761110a611964565b6020026020010181905250808061112090611b27565b915050610f52565b5092915050565b6111376112b9565b6001600160a01b03811661116057604051631e4fbdf760e01b81525f60048201526024016104c0565b610573816112e6565b6111768383836001611337565b505050565b6001600160a01b0382166111a45760405163ec442f0560e01b81525f60048201526024016104c0565b6111af5f8383611409565b5050565b6001600160a01b0382166111dc57604051634b637e8f60e11b81525f60048201526024016104c0565b6111af825f83611409565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198114610bc9578181101561124e57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104c0565b610bc984848484035f611337565b6001600160a01b03831661128557604051634b637e8f60e11b81525f60048201526024016104c0565b6001600160a01b0382166112ae5760405163ec442f0560e01b81525f60048201526024016104c0565b611176838383611409565b6005546001600160a01b031633146108c35760405163118cdaa760e01b81523360048201526024016104c0565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166113605760405163e602df0560e01b81525f60048201526024016104c0565b6001600160a01b03831661138957604051634a1406b160e11b81525f60048201526024016104c0565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610bc957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113fb91815260200190565b60405180910390a350505050565b6001600160a01b038316611433578060025f8282546114289190611b14565b909155506114a39050565b6001600160a01b0383165f90815260208190526040902054818110156114855760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016104c0565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166114bf576002805482900390556114dd565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161152291815260200190565b60405180910390a3505050565b6040518060c001604052805f6001600160a01b031681526020015f815260200160608152602001606081526020015f81526020015f81525090565b5f81518084525f5b8181101561158e57602081850181015186830182015201611572565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f6115bf602083018461156a565b9392505050565b80356001600160a01b03811681146115dc575f80fd5b919050565b5f80604083850312156115f2575f80fd5b6115fb836115c6565b946020939093013593505050565b5f60208284031215611619575f80fd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112611643575f80fd5b813567ffffffffffffffff8082111561165e5761165e611620565b604051601f8301601f19908116603f0116810190828211818310171561168657611686611620565b8160405283815286602085880101111561169e575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f805f60a086880312156116d1575f80fd5b853567ffffffffffffffff808211156116e8575f80fd5b6116f489838a01611634565b96506020880135915080821115611709575f80fd5b5061171688828901611634565b959895975050505060408401359360608101359360809091013592509050565b5f805f60608486031215611748575f80fd5b611751846115c6565b925061175f602085016115c6565b9150604084013590509250925092565b5f8060408385031215611780575f80fd5b50508035926020909101359150565b5f6020828403121561179f575f80fd5b6115bf826115c6565b5f805f606084860312156117ba575f80fd5b505081359360208301359350604090920135919050565b60018060a01b038716815285602082015260c060408201525f6117f760c083018761156a565b8281036060840152611809818761156a565b6080840195909552505060a00152949350505050565b60018060a01b038151168252602081015160208301525f604082015160c0604085015261184f60c085018261156a565b905060608301518482036060860152611868828261156a565b9150506080830151608085015260a083015160a08501528091505092915050565b602081525f6115bf602083018461181f565b5f80604083850312156118ac575f80fd5b6118b5836115c6565b91506118c3602084016115c6565b90509250929050565b5f602080830181845280855180835260408601915060408160051b87010192508387015f5b8281101561191f57603f1988860301845261190d85835161181f565b945092850192908501906001016118f1565b5092979650505050505050565b600181811c9082168061194057607f821691505b60208210810361195e57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f826119a657634e487b7160e01b5f52601260045260245ffd5b500490565b5f602082840312156119bb575f80fd5b815180151581146115bf575f80fd5b808202811582820484141761044c5761044c611978565b601f821115611176575f81815260208120601f850160051c81016020861015611a075750805b601f850160051c820191505b81811015611a2657828155600101611a13565b505050505050565b815167ffffffffffffffff811115611a4857611a48611620565b611a5c81611a56845461192c565b846119e1565b602080601f831160018114611a8f575f8415611a785750858301515b5f19600386901b1c1916600185901b178555611a26565b5f85815260208120601f198616915b82811015611abd57888601518255948401946001909101908401611a9e565b5085821015611ada57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b8181038181111561044c5761044c611978565b5f60208284031215611b0d575f80fd5b5051919050565b8082018082111561044c5761044c611978565b5f60018201611b3857611b38611978565b506001019056fea2646970667358221220cd76bc054f9b7286b2319f7424a569c2b00a432882652b1101de32972756f42e64736f6c63430008140033608060405234801561000f575f80fd5b5060405161035d38038061035d83398101604081905261002e916100d1565b338061005357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005c81610082565b50600180546001600160a01b0319166001600160a01b03929092169190911790556100fe565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100e1575f80fd5b81516001600160a01b03811681146100f7575f80fd5b9392505050565b6102528061010b5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80632ca835a814610059578063715018a6146100815780638da5cb5b1461008b578063bd75aae8146100a5578063f2fde38b146100c6575b5f80fd5b61006c6100673660046101d4565b6100d9565b60405190151581526020015b60405180910390f35b6100896100e2565b005b5f546040516001600160a01b039091168152602001610078565b6100b86100b33660046101d4565b6100f5565b604051908152602001610078565b6100896100d43660046101fc565b6100fc565b60015b92915050565b6100ea61013e565b6100f35f61016a565b565b60016100dc565b61010461013e565b6001600160a01b03811661013257604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61013b8161016a565b50565b5f546001600160a01b031633146100f35760405163118cdaa760e01b8152336004820152602401610129565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146101cf575f80fd5b919050565b5f80604083850312156101e5575f80fd5b6101ee836101b9565b946020939093013593505050565b5f6020828403121561020c575f80fd5b610215826101b9565b939250505056fea264697066735822122060b739706bc2ffe4187c03f614cd620b154157954b354e2990d1d9f2654d9fb864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0x8AC7230489E80000 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0x42494153 PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE SWAP2 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE CALLER SWAP2 PUSH1 0x3 PUSH3 0x5A DUP4 DUP3 PUSH3 0x219 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x69 DUP3 DUP3 PUSH3 0x219 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x9A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xA5 DUP2 PUSH3 0x11A JUMP JUMPDEST POP PUSH20 0xC94ABF0292AC04AAC18C251D9C8169A8DD2BBBDC PUSH1 0x40 MLOAD PUSH3 0xC9 SWAP1 PUSH3 0x16B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xF3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x2E1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x35D DUP1 PUSH3 0x1E64 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1A2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1C1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x214 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EF JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x210 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FB JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x235 JUMPI PUSH3 0x235 PUSH3 0x179 JUMP JUMPDEST PUSH3 0x24D DUP2 PUSH3 0x246 DUP5 SLOAD PUSH3 0x18D JUMP JUMPDEST DUP5 PUSH3 0x1C7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x283 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x210 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B3 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x292 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D1 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1B75 DUP1 PUSH3 0x2EF PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x153 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xBF JUMPI DUP1 PUSH4 0xB1E95E94 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xB1E95E94 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xCDA411BE EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0xED2E39A7 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xF7CB2657 EQ PUSH2 0x3A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x93AD4ACA EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x9A383DFD EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xA6C2DA4C EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x63B6AD97 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x68229099 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x8C881EEB EQ PUSH2 0x26D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x962EF79 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xA05B17F EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15F PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0x576 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST PUSH2 0x188 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x176F JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x178F JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1609 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15F PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x2D5 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D1 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST PUSH2 0x329 PUSH2 0x324 CALLDATASIZE PUSH1 0x4 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x381 PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0x176F JUMP JUMPDEST PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x18CC JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0x178F JUMP JUMPDEST PUSH2 0x112F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3B8 SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3E4 SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x42F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x406 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x42F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x412 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x446 DUP2 DUP6 DUP6 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x465 JUMPI PUSH2 0x465 PUSH2 0x1964 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1B9BDD08199A5B9A5CDA1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4E6 JUMPI PUSH2 0x4E6 PUSH2 0x1964 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x53B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x37B7363C9031B932B0BA37B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x573 CALLER PUSH1 0x5 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x554 JUMPI PUSH2 0x554 PUSH2 0x1964 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x117B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x59506B5 PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2CA835A8 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0x19AB JUMP JUMPDEST PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x7 SLOAD ISZERO DUP1 PUSH2 0x666 JUMPI POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO DUP1 ISZERO PUSH2 0x666 JUMPI POP PUSH1 0xA PUSH1 0x6 SLOAD DUP4 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST DUP4 LT ISZERO JUMPDEST PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x696E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x6E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x696E76616C696420706172616D73 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920616C6C6F77206F6E65206C69766520746F70696300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH0 PUSH2 0x74D PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x75D JUMPI PUSH2 0x75D CALLER DUP5 PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE SWAP2 DUP2 ADD DUP8 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 PUSH1 0x6 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP4 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C689 DUP3 ADD SSTORE SWAP1 MLOAD SWAP2 SWAP3 SWAP2 PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68A SWAP1 SWAP2 ADD SWAP1 PUSH2 0x83E SWAP1 DUP3 PUSH2 0x1A2E JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0x853 SWAP1 DUP3 PUSH2 0x1A2E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x5 SWAP1 SWAP2 ADD SSTORE PUSH1 0x7 SLOAD PUSH2 0x879 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x89C DUP6 DUP3 DUP6 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x8A7 DUP6 DUP6 DUP6 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x8BA PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x8C3 PUSH0 PUSH2 0x12E6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x17AEB55D PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xBD75AAE8 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x913 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x937 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x98C JUMPI PUSH2 0x98C PUSH2 0x1964 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD PUSH1 0x9 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x199A5B9A5CDA1959 PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA03 SWAP1 PUSH3 0x15180 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xA41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x6F6E63652070657220646179 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH2 0xAC1 SWAP3 SWAP2 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0xA6C JUMPI PUSH2 0xA6C PUSH2 0x1964 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD PUSH1 0x7 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0xA8F JUMPI PUSH2 0xA8F PUSH2 0x1964 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH2 0xAA9 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST DUP4 PUSH1 0x6 SLOAD PUSH2 0xAB7 SWAP2 SWAP1 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xADF SWAP1 DUP5 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB0C SWAP1 DUP5 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP6 SWAP2 CALLER SWAP2 PUSH32 0x6C7EB2743EC28489909706EA440D909129004996BE657D36C6E9ADD778546ABF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xB61 JUMPI PUSH2 0xB61 PUSH2 0x1964 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD PUSH1 0x9 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0xBC9 JUMPI PUSH0 PUSH1 0xA PUSH0 PUSH1 0x7 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0xB9F JUMPI PUSH2 0xB9F PUSH2 0x1964 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x6 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3B8 SWAP1 PUSH2 0x192C JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBED JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP SWAP1 SWAP3 SWAP2 PUSH2 0xC22 SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC4E SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC99 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC70 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC99 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC7C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0xCAE SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCDA SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD25 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCFC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD25 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD08 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x446 DUP2 DUP6 DUP6 PUSH2 0x125C JUMP JUMPDEST PUSH2 0xD50 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0xD5D PUSH2 0x152F JUMP JUMPDEST PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD70 JUMPI PUSH2 0xD70 PUSH2 0x1964 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xDCE SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDFA SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE45 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE1C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE45 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE28 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0xE5E SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE8A SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xED5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEAC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xED5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF14 JUMPI PUSH2 0xF14 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF4D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xF3A PUSH2 0x152F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xF32 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1128 JUMPI PUSH1 0x7 PUSH2 0xF66 DUP6 DUP4 PUSH2 0x1B14 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xF76 JUMPI PUSH2 0xF76 PUSH2 0x1964 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xFD4 SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1000 SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x104B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1022 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x104B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x102E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x1064 SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1090 SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10DB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10DB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10BE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x110A JUMPI PUSH2 0x110A PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x1120 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF52 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1137 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1160 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x573 DUP2 PUSH2 0x12E6 JUMP JUMPDEST PUSH2 0x1176 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1337 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x11AF PUSH0 DUP4 DUP4 PUSH2 0x1409 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11DC JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x11AF DUP3 PUSH0 DUP4 PUSH2 0x1409 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0xBC9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x124E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0xBC9 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1337 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1285 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12AE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x1176 DUP4 DUP4 DUP4 PUSH2 0x1409 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1360 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1389 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xBC9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13FB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1433 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1428 SWAP2 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x14A3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1485 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x14BF JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1522 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x158E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1572 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x15BF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x156A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15DC JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15FB DUP4 PUSH2 0x15C6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1619 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1643 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x165E JUMPI PUSH2 0x165E PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1686 JUMPI PUSH2 0x1686 PUSH2 0x1620 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x169E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16F4 DUP10 DUP4 DUP11 ADD PUSH2 0x1634 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1709 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1716 DUP9 DUP3 DUP10 ADD PUSH2 0x1634 JUMP JUMPDEST SWAP6 SWAP9 SWAP6 SWAP8 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP4 PUSH1 0x80 SWAP1 SWAP2 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1748 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1751 DUP5 PUSH2 0x15C6 JUMP JUMPDEST SWAP3 POP PUSH2 0x175F PUSH1 0x20 DUP6 ADD PUSH2 0x15C6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1780 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15BF DUP3 PUSH2 0x15C6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x17F7 PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x156A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1809 DUP2 DUP8 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x80 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP PUSH1 0xA0 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH0 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0xC0 PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x184F PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x156A JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x1868 DUP3 DUP3 PUSH2 0x156A JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x15BF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x181F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18AC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x18B5 DUP4 PUSH2 0x15C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C3 PUSH1 0x20 DUP5 ADD PUSH2 0x15C6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x191F JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x190D DUP6 DUP4 MLOAD PUSH2 0x181F JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x18F1 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1940 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x195E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x19A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15BF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x44C JUMPI PUSH2 0x44C PUSH2 0x1978 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1176 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1A07 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A26 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A13 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A48 JUMPI PUSH2 0x1A48 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x1A5C DUP2 PUSH2 0x1A56 DUP5 SLOAD PUSH2 0x192C JUMP JUMPDEST DUP5 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1A8F JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1A78 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1A26 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1ABD JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1A9E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1ADA JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x44C JUMPI PUSH2 0x44C PUSH2 0x1978 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B0D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x44C JUMPI PUSH2 0x44C PUSH2 0x1978 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1B38 JUMPI PUSH2 0x1B38 PUSH2 0x1978 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD PUSH23 0xBC054F9B7286B2319F7424A569C2B00A432882652B1101 0xDE ORIGIN SWAP8 0x27 JUMP DELEGATECALL 0x2E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x35D CODESIZE SUB DUP1 PUSH2 0x35D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xD1 JUMP JUMPDEST CALLER DUP1 PUSH2 0x53 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C DUP2 PUSH2 0x82 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xFE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x252 DUP1 PUSH2 0x10B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2CA835A8 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xBD75AAE8 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x67 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0xE2 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0xF5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0x89 PUSH2 0xD4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FC JUMP JUMPDEST PUSH2 0xFC JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEA PUSH2 0x13E JUMP JUMPDEST PUSH2 0xF3 PUSH0 PUSH2 0x16A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH2 0xDC JUMP JUMPDEST PUSH2 0x104 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x132 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13B DUP2 PUSH2 0x16A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x129 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1EE DUP4 PUSH2 0x1B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x215 DUP3 PUSH2 0x1B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xB7 CODECOPY PUSH17 0x6BC2FFE4187C03F614CD620B154157954B CALLDATALOAD 0x4E 0x29 SWAP1 0xD1 0xD9 CALLCODE PUSH6 0x4D9FB864736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "209:4429:6:-:0;;;681:9;658:32;;1347:177;;;;;;;;;-1:-1:-1;1896:113:2;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;;;;;;;;;;;;;;;;;;;;1391:10:6;;1962:5:2;:13;1896:113;1962:5;:13;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2881:51:9;2854:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;1473:42:6::2;1450:66;;;;;:::i;:::-;-1:-1:-1::0;;;;;2899:32:9;;;2881:51;;2869:2;2854:18;1450:66:6::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;1428:19:6::2;:88:::0;;-1:-1:-1;;;;;;1428:88:6::2;-1:-1:-1::0;;;;;1428:88:6;;;::::2;::::0;;;::::2;::::0;;209:4429;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;209:4429:6:-;;;;;;;;:::o;14:127:9:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:9;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:9;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:9;;;2580:26;2531:89;-1:-1:-1;;1335:1:9;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:9;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:9;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:9;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:9:o;2735:203::-;209:4429:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 4457,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4919,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 4531,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4793,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_lastJoinTime_992": {
									"entryPoint": null,
									"id": 992,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 4475,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_rewards_964": {
									"entryPoint": null,
									"id": 964,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_798": {
									"entryPoint": 4583,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_topics_968": {
									"entryPoint": 3038,
									"id": 968,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4838,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 4700,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 5129,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_voterCounts_980": {
									"entryPoint": null,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_votes_975": {
									"entryPoint": null,
									"id": 975,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1081,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimRewards_1292": {
									"entryPoint": 1106,
									"id": 1292,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@create_1119": {
									"entryPoint": 1398,
									"id": 1119,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_345": {
									"entryPoint": 937,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2226,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 3023,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@topicAt_1132": {
									"entryPoint": 3413,
									"id": 1132,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@topicTotal_1357": {
									"entryPoint": null,
									"id": 1357,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@topics_1348": {
									"entryPoint": 3833,
									"id": 1348,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 2191,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 4399,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 3387,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateRewards_1305": {
									"entryPoint": 3400,
									"id": 1305,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vote_1251": {
									"entryPoint": 2245,
									"id": 1251,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 5684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_bytes32": {
									"entryPoint": 5821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bytes32": {
									"entryPoint": 6056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_string": {
									"entryPoint": 5482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_Topic": {
									"entryPoint": 6175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256__to_t_address_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6097,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Topic_$958_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Topic_$958_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6062e555f70deb1ff2dfd4fda06937887a2a3a7db3bc7c48953073540fee91a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7b33a07f1644fab5bc0af6f7c06c8dceb370139ee7f9ae35b70dfee8eda3c95a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7deba3c42fe79f0d026f6bfe980b7d76c2e95599426008e43856a5b7cd99c5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_81ccd3d8524e842a4d558b20780b5b6a25069ed5264032cfb1fc8542f9c0bca4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8aed0440c9cacb4460ecdd12f6aff03c27cace39666d71f0946a6f3e9022a4a1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ac5ac7e4af96b704de23383a91c10346f729e9b7855b951aeea8b541e93db654__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6619efcaf1bc721f319537fb44a587a6e8004ad3ee4c5a0847daaa09d4052d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Topic_$958_memory_ptr__to_t_struct$_Topic_$958_memory_ptr__fromStack_reversed": {
									"entryPoint": 6281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 6625,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 6702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6520,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6500,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5664,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15213:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "64:373:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "74:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "94:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "88:12:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "78:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "116:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "121:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "109:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "109:19:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "137:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "146:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "141:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "208:110:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "222:14:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "232:4:9",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "226:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "264:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "269:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "260:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "260:11:9"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "273:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "256:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "256:20:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "292:5:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "299:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "288:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "288:13:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "303:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "284:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "284:22:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "278:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "278:29:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "249:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "249:59:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "249:59:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "167:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "170:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "164:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "164:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "178:21:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "180:17:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "189:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "192:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "185:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "185:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "180:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "160:3:9",
																"statements": []
															},
															"src": "156:162:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "342:3:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "347:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "338:16:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "356:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "334:27:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "363:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "327:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "327:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "327:38:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:57:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "389:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "402:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "410:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "398:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "398:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "419:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "415:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "415:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "394:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "394:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "385:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:39:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "426:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "381:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "381:50:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "374:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "41:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "48:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:9",
														"type": ""
													}
												],
												"src": "14:423:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "563:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "580:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "591:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "573:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "573:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "603:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "641:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "652:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "637:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "637:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "611:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "611:45:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "603:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "532:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "543:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "554:4:9",
														"type": ""
													}
												],
												"src": "442:220:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "726:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "748:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "735:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "735:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "726:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "818:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "827:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "830:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "820:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "820:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "788:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "803:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "808:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "799:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "799:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "812:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "795:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "795:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "784:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "784:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "774:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "774:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "767:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:50:9"
															},
															"nodeType": "YulIf",
															"src": "764:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "695:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "706:5:9",
														"type": ""
													}
												],
												"src": "667:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "932:167:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "978:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "987:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "990:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "980:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "980:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "980:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "962:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "949:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "974:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:32:9"
															},
															"nodeType": "YulIf",
															"src": "942:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1003:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1032:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1013:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1013:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1003:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1051:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1078:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1089:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1074:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1074:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1061:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1061:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1051:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "890:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "901:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "913:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "921:6:9",
														"type": ""
													}
												],
												"src": "845:254:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1199:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1209:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1221:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1232:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1217:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1217:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1209:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1251:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1276:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1269:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1269:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1262:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1262:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1244:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1244:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1244:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1168:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1179:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1190:4:9",
														"type": ""
													}
												],
												"src": "1104:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1366:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1412:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1421:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1424:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1414:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1414:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1414:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1387:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1396:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1408:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1379:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1379:32:9"
															},
															"nodeType": "YulIf",
															"src": "1376:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1437:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1460:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1447:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1447:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1437:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1332:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1343:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1355:6:9",
														"type": ""
													}
												],
												"src": "1296:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1513:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1530:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1537:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1542:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1533:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1523:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1523:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1523:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1570:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1563:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1563:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1594:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1597:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1587:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1587:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1587:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1481:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1666:666:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1715:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1727:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1717:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1717:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1694:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1702:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1690:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1690:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1709:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1686:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1686:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:35:9"
															},
															"nodeType": "YulIf",
															"src": "1676:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1740:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1763:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1750:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1750:20:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1744:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1779:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1789:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1783:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1830:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1832:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1832:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1832:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1822:2:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1826:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:10:9"
															},
															"nodeType": "YulIf",
															"src": "1816:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1861:17:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1875:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1871:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1871:7:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1865:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1887:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1907:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1901:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1901:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1891:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1919:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1941:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "1965:2:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1969:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1961:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1961:13:9"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "1976:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1957:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1957:22:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1981:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1953:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1953:31:9"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1986:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1949:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1937:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1937:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1923:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2049:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2051:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2051:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2051:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2008:10:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2020:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2005:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2005:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2028:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2040:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2025:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2025:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2002:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2002:46:9"
															},
															"nodeType": "YulIf",
															"src": "1999:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2087:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2091:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2080:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2080:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2080:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2118:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2126:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2111:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2111:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2111:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2177:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2186:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2189:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2179:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2179:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2179:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2152:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2160:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2148:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2148:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2165:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2144:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2144:26:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2172:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2141:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2141:35:9"
															},
															"nodeType": "YulIf",
															"src": "2138:55:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2219:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2227:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2215:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2215:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2238:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2246:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2234:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2234:17:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2253:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2202:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2202:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2202:54:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2280:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2288:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2276:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2276:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2293:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2272:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2272:26:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2300:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2265:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2265:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2265:37:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2311:15:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2320:6:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2311:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1640:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1648:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1656:5:9",
														"type": ""
													}
												],
												"src": "1613:719:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2495:591:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2542:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2551:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2554:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2544:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2544:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2544:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2516:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2525:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2512:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2512:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2508:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2508:33:9"
															},
															"nodeType": "YulIf",
															"src": "2505:53:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2567:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2594:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2581:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2581:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2571:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2613:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2623:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2617:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2670:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2656:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2664:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2653:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:14:9"
															},
															"nodeType": "YulIf",
															"src": "2650:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2693:60:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2725:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2736:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2721:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2721:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2745:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2703:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2703:50:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2693:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2762:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2795:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2806:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2791:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2791:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2778:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2778:32:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2766:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2839:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2848:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2851:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2841:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2841:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2841:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2825:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2835:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2822:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2822:16:9"
															},
															"nodeType": "YulIf",
															"src": "2819:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2864:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2896:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2907:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2892:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2892:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2918:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2874:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2874:52:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2864:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2935:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2962:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2973:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2958:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2958:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2945:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2945:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2935:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2986:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3013:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3024:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3009:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3009:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2996:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:32:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2986:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3037:43:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3064:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3075:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3060:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3060:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3047:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:33:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3037:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2429:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2440:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2452:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2460:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2468:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2476:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2484:6:9",
														"type": ""
													}
												],
												"src": "2337:749:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3192:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3202:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3214:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3225:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3210:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3210:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3202:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3244:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3255:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3237:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3237:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3161:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3172:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3183:4:9",
														"type": ""
													}
												],
												"src": "3091:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3377:224:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3423:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3432:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3435:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3425:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3425:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3425:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3398:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3407:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3394:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3394:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3419:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3390:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3390:32:9"
															},
															"nodeType": "YulIf",
															"src": "3387:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3448:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3477:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3458:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3458:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3448:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3496:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3529:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3540:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3525:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3525:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3506:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3496:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3553:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3580:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3591:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3576:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3576:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3563:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3563:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3553:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3327:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3338:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3350:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3358:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3366:6:9",
														"type": ""
													}
												],
												"src": "3273:328:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3703:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3713:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3725:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3736:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3721:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3721:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3713:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3755:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3770:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3778:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3766:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3766:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3748:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3748:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3748:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3672:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3683:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3694:4:9",
														"type": ""
													}
												],
												"src": "3606:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3882:161:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3928:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3937:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3940:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3930:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3930:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3930:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3903:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3912:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3899:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3899:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3924:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3895:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3895:32:9"
															},
															"nodeType": "YulIf",
															"src": "3892:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3953:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3976:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3963:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3953:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3995:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4022:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4033:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4018:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4018:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4005:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4005:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3995:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3840:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3851:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3863:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3871:6:9",
														"type": ""
													}
												],
												"src": "3795:248:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4118:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4164:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4173:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4176:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4166:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4166:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4166:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4139:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4148:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4135:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4135:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4160:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4131:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4131:32:9"
															},
															"nodeType": "YulIf",
															"src": "4128:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4189:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4218:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4199:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4199:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4189:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4084:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4095:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4107:6:9",
														"type": ""
													}
												],
												"src": "4048:186:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4343:212:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4389:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4398:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4401:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4391:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4391:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4391:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4373:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4360:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4360:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4385:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4356:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4356:32:9"
															},
															"nodeType": "YulIf",
															"src": "4353:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4414:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4437:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4424:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4424:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4414:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4456:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4483:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4494:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4479:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4479:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4466:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4466:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4456:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4507:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4534:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4545:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4530:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4530:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4517:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4517:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4507:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4293:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4304:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4316:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4324:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4332:6:9",
														"type": ""
													}
												],
												"src": "4239:316:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4661:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4671:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4683:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4694:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4679:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4679:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4671:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4713:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4728:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4744:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4749:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4740:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4740:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4753:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4736:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4736:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4724:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4724:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4706:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4706:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4706:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4630:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4641:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4652:4:9",
														"type": ""
													}
												],
												"src": "4560:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5049:416:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5066:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5081:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5097:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5102:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5093:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5093:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5106:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5089:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5089:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5077:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5077:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5059:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5059:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5059:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5130:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5141:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5126:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5126:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5146:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5119:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5119:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5119:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5173:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5184:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5169:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5169:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5189:3:9",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5162:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5162:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5162:31:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5202:60:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5234:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5246:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5257:3:9",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5242:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5242:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "5216:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5216:46:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "5206:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5282:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5293:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5278:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5278:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "5302:6:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5310:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5298:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5298:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5271:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5271:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5271:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5330:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5356:6:9"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "5364:6:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "5338:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5338:33:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5330:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5391:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5402:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5387:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5387:19:9"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5408:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5380:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5380:35:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5435:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5446:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5431:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5431:19:9"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "5452:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5424:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5424:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5424:35:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256__to_t_address_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4978:9:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4989:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4997:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5005:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5013:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5021:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5029:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5040:4:9",
														"type": ""
													}
												],
												"src": "4768:697:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5526:577:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5543:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5558:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "5552:5:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5552:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5574:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5579:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5570:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5570:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5583:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5566:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5566:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5548:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5548:38:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5536:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5536:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5536:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5607:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5612:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5603:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5603:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5629:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5636:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5625:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5625:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5619:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5619:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5596:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5596:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5596:47:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5652:43:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5682:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5689:4:9",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5678:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5678:16:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5672:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5672:23:9"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "5656:12:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5715:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5720:4:9",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5711:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5711:14:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5727:4:9",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5704:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5704:28:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5704:28:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5741:59:9",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "5771:12:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5789:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5794:4:9",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5785:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5785:14:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "5753:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5753:47:9"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "5745:4:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5809:45:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5841:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5848:4:9",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5837:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5837:16:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5831:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5831:23:9"
															},
															"variables": [
																{
																	"name": "memberValue0_1",
																	"nodeType": "YulTypedName",
																	"src": "5813:14:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5874:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5879:4:9",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5870:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5870:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5890:4:9"
																			},
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5896:3:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5886:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5886:14:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5863:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5863:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5863:38:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5910:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0_1",
																		"nodeType": "YulIdentifier",
																		"src": "5942:14:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5958:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "5924:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5924:39:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "5914:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5983:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5988:4:9",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5979:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5979:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6005:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6012:4:9",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6001:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6001:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5995:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5995:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5972:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5972:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5972:47:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6039:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6044:4:9",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6035:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6035:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6061:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6068:4:9",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6057:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6057:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6051:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6051:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6028:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6028:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6028:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6084:13:9",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "6091:6:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6084:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_struct_Topic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5503:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5510:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5518:3:9",
														"type": ""
													}
												],
												"src": "5470:633:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6253:105:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6270:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6281:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6263:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6263:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6263:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6293:59:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6325:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6337:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6348:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6333:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6333:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_Topic",
																	"nodeType": "YulIdentifier",
																	"src": "6301:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6301:51:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6293:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Topic_$958_memory_ptr__to_t_struct$_Topic_$958_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6222:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6233:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6244:4:9",
														"type": ""
													}
												],
												"src": "6108:250:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6450:173:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6496:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6505:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6508:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6498:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6498:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6498:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6471:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6480:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6467:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6467:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6492:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6463:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6463:32:9"
															},
															"nodeType": "YulIf",
															"src": "6460:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6521:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6550:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6531:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6531:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6521:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6569:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6602:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6613:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6598:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6598:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6579:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6579:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6569:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6408:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6419:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6431:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6439:6:9",
														"type": ""
													}
												],
												"src": "6363:260:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6823:638:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6833:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6843:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6837:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6854:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6872:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6883:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6868:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6868:18:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "6858:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6902:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6913:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6895:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6895:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6895:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6925:17:9",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "6936:6:9"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "6929:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6951:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6971:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6965:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6965:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6955:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "6994:6:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7002:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6987:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6987:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6987:22:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7018:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7029:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7040:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7025:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7025:18:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7018:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7052:53:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7074:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7089:1:9",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "7092:6:9"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7085:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7085:14:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7070:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7070:30:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7102:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7066:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7066:39:9"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "7056:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7114:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7132:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7140:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7128:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7128:15:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7118:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7152:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7161:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7156:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7220:212:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7241:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tail_2",
																									"nodeType": "YulIdentifier",
																									"src": "7254:6:9"
																								},
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "7262:9:9"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "7250:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7250:22:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7278:2:9",
																									"type": "",
																									"value": "63"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7274:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7274:7:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7246:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7246:36:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7234:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7234:49:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7234:49:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7296:56:9",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "7336:6:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7330:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7330:13:9"
																				},
																				{
																					"name": "tail_2",
																					"nodeType": "YulIdentifier",
																					"src": "7345:6:9"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_struct_Topic",
																				"nodeType": "YulIdentifier",
																				"src": "7306:23:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7306:46:9"
																		},
																		"variableNames": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "7296:6:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7365:25:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7379:6:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7387:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7375:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7375:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7365:6:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7403:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7414:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7419:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7410:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7410:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7403:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7182:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7185:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7179:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7179:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7193:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7195:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7204:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7207:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7200:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7200:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7195:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7175:3:9",
																"statements": []
															},
															"src": "7171:261:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7441:14:9",
															"value": {
																"name": "tail_2",
																"nodeType": "YulIdentifier",
																"src": "7449:6:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7441:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Topic_$958_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Topic_$958_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6792:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6803:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6814:4:9",
														"type": ""
													}
												],
												"src": "6628:833:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7521:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7531:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7545:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7548:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7541:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7541:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7531:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7562:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7598:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7588:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7588:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7566:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7639:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7641:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7655:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7663:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7651:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7651:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7641:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7619:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7612:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7612:26:9"
															},
															"nodeType": "YulIf",
															"src": "7609:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7729:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7750:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7757:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7762:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7753:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7753:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7743:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7743:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7743:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7794:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7797:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7787:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7787:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7787:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7822:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7825:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7815:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7815:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7815:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7685:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7708:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7716:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7705:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7705:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7682:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7682:38:9"
															},
															"nodeType": "YulIf",
															"src": "7679:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7501:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7510:6:9",
														"type": ""
													}
												],
												"src": "7466:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7883:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7900:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7907:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7912:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7903:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7903:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7893:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7893:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7893:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7940:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7943:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7933:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7933:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7933:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7964:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7967:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7957:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7957:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7957:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "7851:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8157:162:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8174:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8185:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8167:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8167:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8167:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8208:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8219:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8204:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8204:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8224:2:9",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8197:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8197:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8197:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8247:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8258:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8243:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8243:18:9"
																	},
																	{
																		"hexValue": "6e6f742066696e6973686564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8263:14:9",
																		"type": "",
																		"value": "not finished"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8236:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8236:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8236:42:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8287:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8299:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8310:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8295:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8295:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8287:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_81ccd3d8524e842a4d558b20780b5b6a25069ed5264032cfb1fc8542f9c0bca4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8134:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8148:4:9",
														"type": ""
													}
												],
												"src": "7983:336:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8498:162:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8515:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8526:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8508:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8508:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8508:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8549:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8560:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8545:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8545:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8565:2:9",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8538:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8538:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8538:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8588:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8599:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8584:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8584:18:9"
																	},
																	{
																		"hexValue": "6f6e6c792063726561746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8604:14:9",
																		"type": "",
																		"value": "only creator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8577:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8577:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8577:42:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8628:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8640:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8651:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8636:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8636:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8628:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6062e555f70deb1ff2dfd4fda06937887a2a3a7db3bc7c48953073540fee91a6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8475:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8489:4:9",
														"type": ""
													}
												],
												"src": "8324:336:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8697:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8714:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8721:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8726:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8717:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8717:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8707:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8707:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8707:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8754:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8757:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8747:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8747:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8747:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8778:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8781:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8771:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8771:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8771:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8665:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8843:171:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8874:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8895:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8902:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8907:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8898:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8898:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8888:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8888:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8888:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8939:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8942:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8932:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8932:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8932:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8967:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8970:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8960:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8960:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8960:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8863:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8856:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8856:9:9"
															},
															"nodeType": "YulIf",
															"src": "8853:132:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8994:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9003:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9006:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8999:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8999:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8994:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8828:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8831:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8837:1:9",
														"type": ""
													}
												],
												"src": "8797:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9148:145:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9158:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9170:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9181:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9166:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9166:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9158:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9200:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9215:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9231:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9236:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9227:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9227:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9240:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9223:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9223:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9211:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9211:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9193:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9193:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9193:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9264:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9275:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9260:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9260:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9280:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9253:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9253:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9253:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9109:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9120:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9128:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9139:4:9",
														"type": ""
													}
												],
												"src": "9019:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9376:199:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9422:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9431:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9434:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9424:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9424:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9424:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9397:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9406:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9393:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9393:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9418:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9389:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9389:32:9"
															},
															"nodeType": "YulIf",
															"src": "9386:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9447:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9466:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9460:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9460:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9451:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9529:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9538:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9541:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9531:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9531:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9531:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9498:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "9519:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "9512:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9512:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9505:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9505:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9495:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9495:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9488:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9488:40:9"
															},
															"nodeType": "YulIf",
															"src": "9485:60:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9554:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9564:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9554:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9342:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9353:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9365:6:9",
														"type": ""
													}
												],
												"src": "9298:277:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9754:164:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9771:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9782:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9764:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9764:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9764:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9805:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9816:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9801:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9801:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9821:2:9",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9794:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9794:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9794:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9844:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9855:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9840:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9840:18:9"
																	},
																	{
																		"hexValue": "6e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9860:16:9",
																		"type": "",
																		"value": "not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9833:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9833:44:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9833:44:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9886:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9898:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9909:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9894:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9894:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9886:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8aed0440c9cacb4460ecdd12f6aff03c27cace39666d71f0946a6f3e9022a4a1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9731:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9745:4:9",
														"type": ""
													}
												],
												"src": "9580:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9975:116:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9985:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10000:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10003:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9996:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9996:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9985:7:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10063:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10065:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10065:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10065:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10034:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10027:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10027:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10041:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "10048:7:9"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "10057:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "10044:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10044:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "10038:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10038:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10024:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10024:37:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10017:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10017:45:9"
															},
															"nodeType": "YulIf",
															"src": "10014:71:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9954:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9957:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9963:7:9",
														"type": ""
													}
												],
												"src": "9923:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10270:168:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10287:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10298:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10280:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10280:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10280:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10321:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10332:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10317:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10317:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10337:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10310:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10310:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10360:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10371:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10356:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10356:18:9"
																	},
																	{
																		"hexValue": "696e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10376:20:9",
																		"type": "",
																		"value": "insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10349:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10349:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10349:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10406:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10418:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10429:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10414:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10414:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10406:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10247:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10261:4:9",
														"type": ""
													}
												],
												"src": "10096:342:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10617:164:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10634:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10645:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10627:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10627:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10627:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10668:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10679:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10664:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10664:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10684:2:9",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10657:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10657:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10657:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10707:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10718:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10703:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10703:18:9"
																	},
																	{
																		"hexValue": "696e76616c696420706172616d73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10723:16:9",
																		"type": "",
																		"value": "invalid params"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10696:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10696:44:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10696:44:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10749:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10761:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10772:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10757:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10757:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10749:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ac5ac7e4af96b704de23383a91c10346f729e9b7855b951aeea8b541e93db654__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10594:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10608:4:9",
														"type": ""
													}
												],
												"src": "10443:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10960:175:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10977:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10988:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10970:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10970:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10970:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11011:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11022:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11007:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11007:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11027:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11000:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11000:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11000:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11050:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11061:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11046:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11046:18:9"
																	},
																	{
																		"hexValue": "6f6e6c7920616c6c6f77206f6e65206c69766520746f706963",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11066:27:9",
																		"type": "",
																		"value": "only allow one live topic"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11039:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11039:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11039:55:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11103:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11115:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11126:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11111:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11111:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11103:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6619efcaf1bc721f319537fb44a587a6e8004ad3ee4c5a0847daaa09d4052d3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10937:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10951:4:9",
														"type": ""
													}
												],
												"src": "10786:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11196:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11213:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "11216:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11206:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11206:14:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11206:14:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11229:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11247:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11250:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "11237:9:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11237:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "11229:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "11179:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11187:4:9",
														"type": ""
													}
												],
												"src": "11140:121:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11347:464:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11380:425:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11394:11:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "11404:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "11398:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "11425:2:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "11429:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11418:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11418:17:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11418:17:9"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11448:31:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "11470:2:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11474:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "11460:9:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11460:19:9"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "11452:4:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11492:57:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "11515:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11525:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "11532:10:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "11544:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11528:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11528:19:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "11521:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11521:27:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11511:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11511:38:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "11496:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11586:23:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "11588:19:9",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "11603:4:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "11588:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "11568:10:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11580:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "11565:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11565:20:9"
																		},
																		"nodeType": "YulIf",
																		"src": "11562:47:9"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11622:41:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "11636:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11646:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "11653:3:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "11658:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11649:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11649:12:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "11642:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11642:20:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11632:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11632:31:9"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "11626:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11676:24:9",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "11689:11:9"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "11680:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11774:21:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "11783:5:9"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "11790:2:9"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "11776:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11776:17:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11776:17:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "11724:5:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "11731:2:9"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "11721:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11721:13:9"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "11735:26:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "11737:22:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "11750:5:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11757:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "11746:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11746:13:9"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "11737:5:9"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "11717:3:9",
																			"statements": []
																		},
																		"src": "11713:82:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "11363:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11368:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11360:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11360:11:9"
															},
															"nodeType": "YulIf",
															"src": "11357:448:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11319:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "11326:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "11331:10:9",
														"type": ""
													}
												],
												"src": "11266:545:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11901:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11911:65:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "11926:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11944:1:9",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "11947:3:9"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "11940:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11940:11:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11957:1:9",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "11953:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11953:6:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "11936:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11936:24:9"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "11932:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11932:29:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11922:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11922:40:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11968:1:9",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "11971:3:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11964:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11964:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "11919:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11919:57:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "11911:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11878:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "11884:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "11892:4:9",
														"type": ""
													}
												],
												"src": "11816:166:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12083:1256:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12093:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "12113:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12107:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12107:10:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "12097:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12160:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12162:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12162:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12162:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "12132:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12140:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12129:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12129:30:9"
															},
															"nodeType": "YulIf",
															"src": "12126:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "12235:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "12273:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "12267:5:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12267:11:9"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "12241:25:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12241:38:9"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "12281:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "12191:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12191:97:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12191:97:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12297:18:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12314:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "12301:9:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12324:23:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12343:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "12328:11:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12356:24:9",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "12369:11:9"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "12356:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12426:656:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "12440:35:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "12459:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "12471:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "12467:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12467:7:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "12455:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12455:20:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "12444:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "12488:49:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "12532:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "12502:29:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12502:35:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "12492:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "12550:10:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12559:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "12554:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "12637:172:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "12662:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "12680:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "12685:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "12676:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "12676:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "12670:5:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12670:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "12655:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12655:42:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "12655:42:9"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "12714:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "12728:6:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12736:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12724:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12724:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "12714:6:9"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "12755:40:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "12772:9:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "12783:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12768:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12768:27:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "12755:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12584:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "12587:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "12581:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12581:14:9"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "12596:28:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "12598:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "12607:1:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "12610:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12603:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12603:19:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12598:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "12577:3:9",
																					"statements": []
																				},
																				"src": "12573:236:9"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "12857:166:9",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "12875:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "12902:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "12907:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "12898:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12898:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "12892:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12892:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "12879:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "12942:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "12954:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "12981:1:9",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "12984:6:9"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "12977:3:9"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "12977:14:9"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "12993:3:9",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "12973:3:9"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "12973:24:9"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "13003:1:9",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "12999:3:9"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "12999:6:9"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "12969:3:9"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "12969:37:9"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "12965:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "12965:42:9"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "12950:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12950:58:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "12935:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12935:74:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "12935:74:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "12828:7:9"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "12837:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "12825:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12825:19:9"
																				},
																				"nodeType": "YulIf",
																				"src": "12822:201:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "13043:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "13057:1:9",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "13060:6:9"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "13053:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13053:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "13069:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13049:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13049:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "13036:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13036:36:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "13036:36:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "12419:663:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12424:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13099:234:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "13113:14:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13126:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "13117:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "13162:67:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "13180:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "13199:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "13204:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "13195:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "13195:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "13189:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13189:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "13180:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "13143:6:9"
																				},
																				"nodeType": "YulIf",
																				"src": "13140:89:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "13249:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "13308:5:9"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "13315:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "13255:52:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13255:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "13242:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13242:81:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "13242:81:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "13091:242:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "12399:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12407:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12396:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12396:14:9"
															},
															"nodeType": "YulSwitch",
															"src": "12389:944:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "12068:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12074:3:9",
														"type": ""
													}
												],
												"src": "11987:1352:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13393:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13403:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13415:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13418:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13411:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13411:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13403:4:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13444:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13446:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13446:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13446:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "13435:4:9"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13441:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13432:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13432:11:9"
															},
															"nodeType": "YulIf",
															"src": "13429:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13375:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13378:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13384:4:9",
														"type": ""
													}
												],
												"src": "13344:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13558:103:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13604:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13613:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13616:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13606:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13606:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13606:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13579:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13588:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13575:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13575:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13600:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13571:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13571:32:9"
															},
															"nodeType": "YulIf",
															"src": "13568:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13629:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13645:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13639:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13639:16:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "13629:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13524:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13535:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13547:6:9",
														"type": ""
													}
												],
												"src": "13477:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13840:157:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13857:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13868:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13850:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13850:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13850:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13891:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13902:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13887:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13887:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13907:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13880:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13880:29:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13880:29:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13929:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13940:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13925:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13925:18:9"
																	},
																	{
																		"hexValue": "66696e6973686564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13945:10:9",
																		"type": "",
																		"value": "finished"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13918:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13918:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13918:38:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13965:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13977:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13988:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13973:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13973:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13965:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7b33a07f1644fab5bc0af6f7c06c8dceb370139ee7f9ae35b70dfee8eda3c95a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13817:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13831:4:9",
														"type": ""
													}
												],
												"src": "13666:331:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14050:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14060:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14071:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14074:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14067:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14067:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14060:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14099:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14101:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14101:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14101:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14091:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "14094:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14088:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14088:10:9"
															},
															"nodeType": "YulIf",
															"src": "14085:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14033:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14036:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14042:3:9",
														"type": ""
													}
												],
												"src": "14002:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14306:162:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14323:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14334:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14316:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14316:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14316:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14357:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14368:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14353:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14353:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14373:2:9",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14346:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14346:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14346:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14396:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14407:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14392:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14392:18:9"
																	},
																	{
																		"hexValue": "6f6e63652070657220646179",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14412:14:9",
																		"type": "",
																		"value": "once per day"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14385:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14385:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14385:42:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14436:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14448:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14459:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14444:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14444:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14436:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7deba3c42fe79f0d026f6bfe980b7d76c2e95599426008e43856a5b7cd99c5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14283:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14297:4:9",
														"type": ""
													}
												],
												"src": "14132:336:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14602:119:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14612:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14624:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14635:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14620:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14620:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14612:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14654:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14665:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14647:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14647:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14647:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14692:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14703:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14688:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14688:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14708:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14681:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14681:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14681:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14563:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14574:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14582:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14593:4:9",
														"type": ""
													}
												],
												"src": "14473:248:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14773:88:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14804:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14806:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14806:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14806:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14789:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14800:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14796:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14796:6:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14786:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14786:17:9"
															},
															"nodeType": "YulIf",
															"src": "14783:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14835:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14846:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14853:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14842:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14842:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14835:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14755:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14765:3:9",
														"type": ""
													}
												],
												"src": "14726:135:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15023:188:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15033:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15045:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15056:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15041:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15041:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15033:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15075:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15090:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15106:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15111:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "15102:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15102:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15115:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "15098:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15098:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15086:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15086:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15068:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15068:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15068:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15139:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15150:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15135:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15135:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15155:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15128:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15128:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15128:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15182:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15193:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15178:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15178:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15198:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15171:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15171:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15171:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14976:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14987:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14995:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15003:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15014:4:9",
														"type": ""
													}
												],
												"src": "14866:345:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256__to_t_address_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 192)\n        let tail_1 := abi_encode_string(value2, add(headStart, 192))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_string(value3, tail_1)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_struct_Topic(value, pos) -> end\n    {\n        mstore(pos, and(mload(value), sub(shl(160, 1), 1)))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n        let memberValue0 := mload(add(value, 0x40))\n        mstore(add(pos, 0x40), 0xc0)\n        let tail := abi_encode_string(memberValue0, add(pos, 0xc0))\n        let memberValue0_1 := mload(add(value, 0x60))\n        mstore(add(pos, 0x60), sub(tail, pos))\n        let tail_1 := abi_encode_string(memberValue0_1, tail)\n        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n        end := tail_1\n    }\n    function abi_encode_tuple_t_struct$_Topic_$958_memory_ptr__to_t_struct$_Topic_$958_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_struct_Topic(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Topic_$958_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Topic_$958_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, length)), 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            tail_2 := abi_encode_struct_Topic(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_81ccd3d8524e842a4d558b20780b5b6a25069ed5264032cfb1fc8542f9c0bca4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"not finished\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6062e555f70deb1ff2dfd4fda06937887a2a3a7db3bc7c48953073540fee91a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"only creator\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_8aed0440c9cacb4460ecdd12f6aff03c27cace39666d71f0946a6f3e9022a4a1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"not authorized\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"insufficient funds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ac5ac7e4af96b704de23383a91c10346f729e9b7855b951aeea8b541e93db654__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"invalid params\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d6619efcaf1bc721f319537fb44a587a6e8004ad3ee4c5a0847daaa09d4052d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"only allow one live topic\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_7b33a07f1644fab5bc0af6f7c06c8dceb370139ee7f9ae35b70dfee8eda3c95a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 8)\n        mstore(add(headStart, 64), \"finished\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_7deba3c42fe79f0d026f6bfe980b7d76c2e95599426008e43856a5b7cd99c5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"once per day\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x153 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xBF JUMPI DUP1 PUSH4 0xB1E95E94 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xB1E95E94 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xCDA411BE EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0xED2E39A7 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xF7CB2657 EQ PUSH2 0x3A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x93AD4ACA EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x9A383DFD EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xA6C2DA4C EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x63B6AD97 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x68229099 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x8C881EEB EQ PUSH2 0x26D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x962EF79 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xA05B17F EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15F PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0x576 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST PUSH2 0x188 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x176F JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x178F JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1609 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15F PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x2D5 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D1 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST PUSH2 0x329 PUSH2 0x324 CALLDATASIZE PUSH1 0x4 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x381 PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0x176F JUMP JUMPDEST PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x18CC JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0x178F JUMP JUMPDEST PUSH2 0x112F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3B8 SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3E4 SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x42F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x406 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x42F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x412 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x446 DUP2 DUP6 DUP6 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x465 JUMPI PUSH2 0x465 PUSH2 0x1964 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1B9BDD08199A5B9A5CDA1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4E6 JUMPI PUSH2 0x4E6 PUSH2 0x1964 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x53B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x37B7363C9031B932B0BA37B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x573 CALLER PUSH1 0x5 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x554 JUMPI PUSH2 0x554 PUSH2 0x1964 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x117B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x59506B5 PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2CA835A8 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0x19AB JUMP JUMPDEST PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x7 SLOAD ISZERO DUP1 PUSH2 0x666 JUMPI POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO DUP1 ISZERO PUSH2 0x666 JUMPI POP PUSH1 0xA PUSH1 0x6 SLOAD DUP4 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST DUP4 LT ISZERO JUMPDEST PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x696E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x6E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x696E76616C696420706172616D73 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920616C6C6F77206F6E65206C69766520746F70696300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH0 PUSH2 0x74D PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x75D JUMPI PUSH2 0x75D CALLER DUP5 PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE SWAP2 DUP2 ADD DUP8 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 PUSH1 0x6 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP4 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C689 DUP3 ADD SSTORE SWAP1 MLOAD SWAP2 SWAP3 SWAP2 PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68A SWAP1 SWAP2 ADD SWAP1 PUSH2 0x83E SWAP1 DUP3 PUSH2 0x1A2E JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0x853 SWAP1 DUP3 PUSH2 0x1A2E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x5 SWAP1 SWAP2 ADD SSTORE PUSH1 0x7 SLOAD PUSH2 0x879 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x89C DUP6 DUP3 DUP6 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x8A7 DUP6 DUP6 DUP6 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x8BA PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x8C3 PUSH0 PUSH2 0x12E6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x17AEB55D PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xBD75AAE8 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x913 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x937 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x98C JUMPI PUSH2 0x98C PUSH2 0x1964 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD PUSH1 0x9 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x199A5B9A5CDA1959 PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA03 SWAP1 PUSH3 0x15180 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xA41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x6F6E63652070657220646179 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH2 0xAC1 SWAP3 SWAP2 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0xA6C JUMPI PUSH2 0xA6C PUSH2 0x1964 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD PUSH1 0x7 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0xA8F JUMPI PUSH2 0xA8F PUSH2 0x1964 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH2 0xAA9 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST DUP4 PUSH1 0x6 SLOAD PUSH2 0xAB7 SWAP2 SWAP1 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xADF SWAP1 DUP5 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB0C SWAP1 DUP5 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP6 SWAP2 CALLER SWAP2 PUSH32 0x6C7EB2743EC28489909706EA440D909129004996BE657D36C6E9ADD778546ABF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xB61 JUMPI PUSH2 0xB61 PUSH2 0x1964 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD PUSH1 0x9 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0xBC9 JUMPI PUSH0 PUSH1 0xA PUSH0 PUSH1 0x7 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0xB9F JUMPI PUSH2 0xB9F PUSH2 0x1964 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x6 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3B8 SWAP1 PUSH2 0x192C JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBED JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP SWAP1 SWAP3 SWAP2 PUSH2 0xC22 SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC4E SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC99 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC70 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC99 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC7C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0xCAE SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCDA SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD25 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCFC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD25 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD08 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x446 DUP2 DUP6 DUP6 PUSH2 0x125C JUMP JUMPDEST PUSH2 0xD50 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0xD5D PUSH2 0x152F JUMP JUMPDEST PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD70 JUMPI PUSH2 0xD70 PUSH2 0x1964 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xDCE SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDFA SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE45 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE1C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE45 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE28 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0xE5E SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE8A SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xED5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEAC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xED5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF14 JUMPI PUSH2 0xF14 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF4D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xF3A PUSH2 0x152F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xF32 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1128 JUMPI PUSH1 0x7 PUSH2 0xF66 DUP6 DUP4 PUSH2 0x1B14 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xF76 JUMPI PUSH2 0xF76 PUSH2 0x1964 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xFD4 SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1000 SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x104B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1022 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x104B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x102E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x1064 SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1090 SWAP1 PUSH2 0x192C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10DB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10DB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10BE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x110A JUMPI PUSH2 0x110A PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x1120 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF52 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1137 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1160 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x573 DUP2 PUSH2 0x12E6 JUMP JUMPDEST PUSH2 0x1176 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1337 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x11AF PUSH0 DUP4 DUP4 PUSH2 0x1409 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11DC JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x11AF DUP3 PUSH0 DUP4 PUSH2 0x1409 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0xBC9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x124E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0xBC9 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1337 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1285 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12AE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x1176 DUP4 DUP4 DUP4 PUSH2 0x1409 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1360 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1389 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xBC9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13FB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1433 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1428 SWAP2 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x14A3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1485 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x14BF JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1522 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x158E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1572 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x15BF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x156A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15DC JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15FB DUP4 PUSH2 0x15C6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1619 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1643 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x165E JUMPI PUSH2 0x165E PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1686 JUMPI PUSH2 0x1686 PUSH2 0x1620 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x169E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16F4 DUP10 DUP4 DUP11 ADD PUSH2 0x1634 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1709 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1716 DUP9 DUP3 DUP10 ADD PUSH2 0x1634 JUMP JUMPDEST SWAP6 SWAP9 SWAP6 SWAP8 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP4 PUSH1 0x80 SWAP1 SWAP2 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1748 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1751 DUP5 PUSH2 0x15C6 JUMP JUMPDEST SWAP3 POP PUSH2 0x175F PUSH1 0x20 DUP6 ADD PUSH2 0x15C6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1780 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15BF DUP3 PUSH2 0x15C6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x17F7 PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x156A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1809 DUP2 DUP8 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x80 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP PUSH1 0xA0 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH0 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0xC0 PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x184F PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x156A JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x1868 DUP3 DUP3 PUSH2 0x156A JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x15BF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x181F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18AC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x18B5 DUP4 PUSH2 0x15C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C3 PUSH1 0x20 DUP5 ADD PUSH2 0x15C6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x191F JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x190D DUP6 DUP4 MLOAD PUSH2 0x181F JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x18F1 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1940 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x195E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x19A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15BF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x44C JUMPI PUSH2 0x44C PUSH2 0x1978 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1176 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1A07 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A26 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A13 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A48 JUMPI PUSH2 0x1A48 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x1A5C DUP2 PUSH2 0x1A56 DUP5 SLOAD PUSH2 0x192C JUMP JUMPDEST DUP5 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1A8F JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1A78 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1A26 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1ABD JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1A9E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1ADA JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x44C JUMPI PUSH2 0x44C PUSH2 0x1978 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B0D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x44C JUMPI PUSH2 0x44C PUSH2 0x1978 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1B38 JUMPI PUSH2 0x1B38 PUSH2 0x1978 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD PUSH23 0xBC054F9B7286B2319F7424A569C2B00A432882652B1101 0xDE ORIGIN SWAP8 0x27 JUMP DELEGATECALL 0x2E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "209:4429:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:9;;1262:22;1244:41;;1232:2;1217:18;4293:186:2;1104:187:9;3850:262:6;;;;;;:::i;:::-;;:::i;:::-;;1775:865;;;;;;:::i;:::-;;:::i;3144:97:2:-;3222:12;;3144:97;;;3237:25:9;;;3225:2;3210:18;3144:97:2;3091:177:9;5039:244:2;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;3748:36:9;;3736:2;3721:18;3002:82:2;3606:184:9;780:52:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1244:48;;;;;;:::i;:::-;;;;;;;;;;;;;;3299:116:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:0;;;:::i;2829:914:6:-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;4706:51:9;;4694:2;4679:18;1638:85:0;4560:203:9;893:41:6;;;;;;:::i;:::-;;;;;;;;;;;;;;2276:93:2;;;:::i;699:22:6:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;658:32::-;;;;;;3610:178:2;;;;;;:::i;:::-;;:::i;4215:93:6:-;;;;;;:::i;:::-;;:::i;2648:100::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3846:140:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;4316:223:6;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;4547:88:6:-;4613:7;:14;4547:88;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:5;4420:31:2;735:10:5;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;3850:262:6:-;3937:7;3945;3937:16;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;3912:12;:21;3925:7;3912:21;;;;;;;;;;;;:45;;3904:70;;;;-1:-1:-1;;;3904:70:6;;8185:2:9;3904:70:6;;;8167:21:9;8224:2;8204:18;;;8197:30;-1:-1:-1;;;8243:18:9;;;8236:42;8295:18;;3904:70:6;;;;;;;;;4021:10;-1:-1:-1;;;;;3993:38:6;:7;4001;3993:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:24;-1:-1:-1;;;;;3993:24:6;:38;3985:63;;;;-1:-1:-1;;;3985:63:6;;8526:2:9;3985:63:6;;;8508:21:9;8565:2;8545:18;;;8538:30;-1:-1:-1;;;8584:18:9;;;8577:42;8636:18;;3985:63:6;8324:336:9;3985:63:6;4059:45;4065:10;4102:1;4077:7;4085;4077:16;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:26;;;;:::i;:::-;4059:5;:45::i;:::-;3850:262;:::o;1775:865::-;1973:19;;:65;;-1:-1:-1;;;1973:65:6;;2011:10;1973:65;;;9193:51:9;9260:18;;;9253:34;;;-1:-1:-1;;;;;1973:19:6;;;;:37;;9166:18:9;;1973:65:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1951:129;;;;-1:-1:-1;;;1951:129:6;;9782:2:9;1951:129:6;;;9764:21:9;9821:2;9801:18;;;9794:30;-1:-1:-1;;;9840:18:9;;;9833:44;9894:18;;1951:129:6;9580:338:9;1951:129:6;4613:7;:14;2113:15;;:86;;-1:-1:-1;2144:10:6;3364:7:2;3390:18;;;;;;;;;;;2159:5:6;-1:-1:-1;2134:30:6;:64;;;;;2196:2;2184:8;;2178:3;:14;;;;:::i;:::-;2177:21;;;;:::i;:::-;2168:5;:30;;2134:64;2091:154;;;;-1:-1:-1;;;2091:154:6;;10298:2:9;2091:154:6;;;10280:21:9;10337:2;10317:18;;;10310:30;-1:-1:-1;;;10356:18:9;;;10349:48;10414:18;;2091:154:6;10096:342:9;2091:154:6;2270:1;2264:3;:7;2256:34;;;;-1:-1:-1;;;2256:34:6;;10645:2:9;2256:34:6;;;10627:21:9;10684:2;10664:18;;;10657:30;-1:-1:-1;;;10703:18:9;;;10696:44;10757:18;;2256:34:6;10443:338:9;2256:34:6;2317:10;2309:19;;;;:7;:19;;;;;;:24;2301:62;;;;-1:-1:-1;;;2301:62:6;;10988:2:9;2301:62:6;;;10970:21:9;11027:2;11007:18;;;11000:30;11066:27;11046:18;;;11039:55;11111:18;;2301:62:6;10786:349:9;2301:62:6;2390:1;2377:12;4613:7;:14;;4547:88;2377:12;:14;2374:97;;;2435:24;2441:10;2453:5;2435;:24::i;:::-;2508:62;;;;;;;;2514:10;2508:62;;2526:15;2508:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2481:7;:100;;;;;;;-1:-1:-1;2481:100:6;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2481:100:6;-1:-1:-1;;;;;2481:100:6;;;;;;;;;;;;;;;;;2508:62;;2481:100;;;;;;;;;;:::i;:::-;-1:-1:-1;2481:100:6;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2481:100:6;;;;;;;;;;;;;;;;;;2614:7;:14;:18;;2631:1;;2614:18;:::i;:::-;2600:10;2592:19;;;;:7;:19;;;;;:40;-1:-1:-1;;;;;1775:865:6:o;5039:244:2:-;5126:4;735:10:5;5182:37:2;5198:4;735:10:5;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2829:914:6:-;2927:19;;:95;;-1:-1:-1;;;2927:95:6;;2972:10;2927:95;;;9193:51:9;9260:18;;;9253:34;;;2913:11:6;;-1:-1:-1;;;;;2927:19:6;;:30;;9166:18:9;;2927:95:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2913:109;;3050:1;3041:6;:10;3033:37;;;;-1:-1:-1;;;3033:37:6;;9782:2:9;3033:37:6;;;9764:21:9;9821:2;9801:18;;;9794:30;-1:-1:-1;;;9840:18:9;;;9833:44;9894:18;;3033:37:6;9580:338:9;3033:37:6;3113:7;3121;3113:16;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;3089:12;:21;3102:7;3089:21;;;;;;;;;;;;:44;3081:65;;;;-1:-1:-1;;;3081:65:6;;13868:2:9;3081:65:6;;;13850:21:9;13907:1;13887:18;;;13880:29;-1:-1:-1;;;13925:18:9;;;13918:38;13973:18;;3081:65:6;13666:331:9;3081:65:6;3212:10;3198:25;;;;:13;:25;;;;;;:42;;1333:5;;3198:42;:::i;:::-;3179:15;:61;;3157:123;;;;-1:-1:-1;;;3157:123:6;;14334:2:9;3157:123:6;;;14316:21:9;14373:2;14353:18;;;14346:30;-1:-1:-1;;;14392:18:9;;;14385:42;14444:18;;3157:123:6;14132:336:9;3157:123:6;3305:10;3291:25;;;;:13;:25;;;;;3319:15;3291:43;;3437:7;:16;;3347:121;;3305:10;3437:7;3445;;3437:16;;;;;;:::i;:::-;;;;;;;;;;;:20;;;3412:7;3420;3412:16;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:45;;;;:::i;:::-;3403:6;3392:8;;:17;;;;:::i;:::-;:65;;;;:::i;3347:121::-;3479:21;;;;:12;:21;;;;;:26;;3504:1;;3479:21;:26;;3504:1;;3479:26;:::i;:::-;;;;-1:-1:-1;;3516:15:6;;;;:6;:15;;;;;;;;:24;;;;;;;;:34;;3544:6;;3516:15;:34;;3544:6;;3516:34;:::i;:::-;;;;-1:-1:-1;;3566:42:6;;;14647:25:9;;;14703:2;14688:18;;14681:34;;;3583:7:6;;3571:10;;3566:42;;14620:18:9;3566:42:6;;;;;;;3650:7;3658;3650:16;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;3625:12;:21;3638:7;3625:21;;;;;;;;;;;;:45;3621:115;;3723:1;3687:7;:33;3695:7;3703;3695:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;;;3695:24:6;3687:33;;;;;;;;;;;;:37;3621:115;2902:841;2829:914;;;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;699:22:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;699:22:6;;;;-1:-1:-1;699:22:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3610:178:2:-;3679:4;735:10:5;3733:27:2;735:10:5;3750:2:2;3754:5;3733:9;:27::i;4215:93:6:-;1531:13:0;:11;:13::i;:::-;4281:8:6::1;:19:::0;4215:93::o;2648:100::-;2693:12;;:::i;:::-;2726:7;2734:5;2726:14;;;;;;;;:::i;:::-;;;;;;;;;;;2719:21;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2719:21:6;-1:-1:-1;;;;;2719:21:6;-1:-1:-1;;;;;2719:21:6;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2648:100;;;:::o;4316:223::-;4378:21;4433:6;4421:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4412:28;;4455:6;4451:81;4466:6;4464:1;:8;4451:81;;;4504:7;4512;4514:5;4512:1;:7;:::i;:::-;4504:16;;;;;;;;:::i;:::-;;;;;;;;;;;4492:28;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4492:28:6;-1:-1:-1;;;;;4492:28:6;-1:-1:-1;;;;;4492:28:6;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;4499:1;4492:9;;;;;;;;:::i;:::-;;;;;;:28;;;;4473:3;;;;;:::i;:::-;;;;4451:81;;;;4316:223;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;4706:51:9::0;4679:18;;2672:31:0::1;4560:203:9::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;8989:128:2:-:0;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;7721:208::-;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;4706:51:9;4679:18;;7835:32:2;4560:203:9;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;-1:-1:-1;;;;;8317:21:2;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:2;;8388:1;8361:30;;;4706:51:9;4679:18;;8361:30:2;4560:203:9;8313:89:2;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;15086:32:9;;10936:60:2;;;15068:51:9;15135:18;;;15128:34;;;15178:18;;;15171:34;;;15041:18;;10936:60:2;14866:345:9;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;4706:51:9;4679:18;;5780:30:2;4560:203:9;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;4706:51:9;4679:18;;5873:32:2;4560:203:9;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;4706:51:9;4679:18;;1901:40:0;4560:203:9;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9949:432:2:-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;4706:51:9;4679:18;;10103:32:2;4560:203:9;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;4706:51:9;4679:18;;10203:31:2;4560:203:9;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;3237:25:9;;3225:2;3210:18;;3091:177;10333:31:2;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;15086:32:9;;6649:50:2;;;15068:51:9;15135:18;;;15128:34;;;15178:18;;;15171:34;;;15041:18;;6649:50:2;14866:345:9;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;3237::9;;3225:2;3210:18;;3091:177;7346:25:2;;;;;;;;6271:1107;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:423:9:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:9:o;667:173::-;735:20;;-1:-1:-1;;;;;784:31:9;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:9:o;1296:180::-;1355:6;1408:2;1396:9;1387:7;1383:23;1379:32;1376:52;;;1424:1;1421;1414:12;1376:52;-1:-1:-1;1447:23:9;;1296:180;-1:-1:-1;1296:180:9:o;1481:127::-;1542:10;1537:3;1533:20;1530:1;1523:31;1573:4;1570:1;1563:15;1597:4;1594:1;1587:15;1613:719;1656:5;1709:3;1702:4;1694:6;1690:17;1686:27;1676:55;;1727:1;1724;1717:12;1676:55;1763:6;1750:20;1789:18;1826:2;1822;1819:10;1816:36;;;1832:18;;:::i;:::-;1907:2;1901:9;1875:2;1961:13;;-1:-1:-1;;1957:22:9;;;1981:2;1953:31;1949:40;1937:53;;;2005:18;;;2025:22;;;2002:46;1999:72;;;2051:18;;:::i;:::-;2091:10;2087:2;2080:22;2126:2;2118:6;2111:18;2172:3;2165:4;2160:2;2152:6;2148:15;2144:26;2141:35;2138:55;;;2189:1;2186;2179:12;2138:55;2253:2;2246:4;2238:6;2234:17;2227:4;2219:6;2215:17;2202:54;2300:1;2293:4;2288:2;2280:6;2276:15;2272:26;2265:37;2320:6;2311:15;;;;;;1613:719;;;;:::o;2337:749::-;2452:6;2460;2468;2476;2484;2537:3;2525:9;2516:7;2512:23;2508:33;2505:53;;;2554:1;2551;2544:12;2505:53;2594:9;2581:23;2623:18;2664:2;2656:6;2653:14;2650:34;;;2680:1;2677;2670:12;2650:34;2703:50;2745:7;2736:6;2725:9;2721:22;2703:50;:::i;:::-;2693:60;;2806:2;2795:9;2791:18;2778:32;2762:48;;2835:2;2825:8;2822:16;2819:36;;;2851:1;2848;2841:12;2819:36;;2874:52;2918:7;2907:8;2896:9;2892:24;2874:52;:::i;:::-;2337:749;;2864:62;;-1:-1:-1;;;;2973:2:9;2958:18;;2945:32;;3024:2;3009:18;;2996:32;;3075:3;3060:19;;;3047:33;;-1:-1:-1;2337:749:9;-1:-1:-1;2337:749:9:o;3273:328::-;3350:6;3358;3366;3419:2;3407:9;3398:7;3394:23;3390:32;3387:52;;;3435:1;3432;3425:12;3387:52;3458:29;3477:9;3458:29;:::i;:::-;3448:39;;3506:38;3540:2;3529:9;3525:18;3506:38;:::i;:::-;3496:48;;3591:2;3580:9;3576:18;3563:32;3553:42;;3273:328;;;;;:::o;3795:248::-;3863:6;3871;3924:2;3912:9;3903:7;3899:23;3895:32;3892:52;;;3940:1;3937;3930:12;3892:52;-1:-1:-1;;3963:23:9;;;4033:2;4018:18;;;4005:32;;-1:-1:-1;3795:248:9:o;4048:186::-;4107:6;4160:2;4148:9;4139:7;4135:23;4131:32;4128:52;;;4176:1;4173;4166:12;4128:52;4199:29;4218:9;4199:29;:::i;4239:316::-;4316:6;4324;4332;4385:2;4373:9;4364:7;4360:23;4356:32;4353:52;;;4401:1;4398;4391:12;4353:52;-1:-1:-1;;4424:23:9;;;4494:2;4479:18;;4466:32;;-1:-1:-1;4545:2:9;4530:18;;;4517:32;;4239:316;-1:-1:-1;4239:316:9:o;4768:697::-;5106:1;5102;5097:3;5093:11;5089:19;5081:6;5077:32;5066:9;5059:51;5146:6;5141:2;5130:9;5126:18;5119:34;5189:3;5184:2;5173:9;5169:18;5162:31;5040:4;5216:46;5257:3;5246:9;5242:19;5234:6;5216:46;:::i;:::-;5310:9;5302:6;5298:22;5293:2;5282:9;5278:18;5271:50;5338:33;5364:6;5356;5338:33;:::i;:::-;5402:3;5387:19;;5380:35;;;;-1:-1:-1;;5446:3:9;5431:19;5424:35;5330:41;4768:697;-1:-1:-1;;;;4768:697:9:o;5470:633::-;5583:1;5579;5574:3;5570:11;5566:19;5558:5;5552:12;5548:38;5543:3;5536:51;5636:4;5629:5;5625:16;5619:23;5612:4;5607:3;5603:14;5596:47;5518:3;5689:4;5682:5;5678:16;5672:23;5727:4;5720;5715:3;5711:14;5704:28;5753:47;5794:4;5789:3;5785:14;5771:12;5753:47;:::i;:::-;5741:59;;5848:4;5841:5;5837:16;5831:23;5896:3;5890:4;5886:14;5879:4;5874:3;5870:14;5863:38;5924:39;5958:4;5942:14;5924:39;:::i;:::-;5910:53;;;6012:4;6005:5;6001:16;5995:23;5988:4;5983:3;5979:14;5972:47;6068:4;6061:5;6057:16;6051:23;6044:4;6039:3;6035:14;6028:47;6091:6;6084:13;;;5470:633;;;;:::o;6108:250::-;6281:2;6270:9;6263:21;6244:4;6301:51;6348:2;6337:9;6333:18;6325:6;6301:51;:::i;6363:260::-;6431:6;6439;6492:2;6480:9;6471:7;6467:23;6463:32;6460:52;;;6508:1;6505;6498:12;6460:52;6531:29;6550:9;6531:29;:::i;:::-;6521:39;;6579:38;6613:2;6602:9;6598:18;6579:38;:::i;:::-;6569:48;;6363:260;;;;;:::o;6628:833::-;6814:4;6843:2;6883;6872:9;6868:18;6913:2;6902:9;6895:21;6936:6;6971;6965:13;7002:6;6994;6987:22;7040:2;7029:9;7025:18;7018:25;;7102:2;7092:6;7089:1;7085:14;7074:9;7070:30;7066:39;7052:53;;7140:2;7132:6;7128:15;7161:1;7171:261;7185:6;7182:1;7179:13;7171:261;;;7278:2;7274:7;7262:9;7254:6;7250:22;7246:36;7241:3;7234:49;7306:46;7345:6;7336;7330:13;7306:46;:::i;:::-;7296:56;-1:-1:-1;7410:12:9;;;;7375:15;;;;7207:1;7200:9;7171:261;;;-1:-1:-1;7449:6:9;;6628:833;-1:-1:-1;;;;;;;6628:833:9:o;7466:380::-;7545:1;7541:12;;;;7588;;;7609:61;;7663:4;7655:6;7651:17;7641:27;;7609:61;7716:2;7708:6;7705:14;7685:18;7682:38;7679:161;;7762:10;7757:3;7753:20;7750:1;7743:31;7797:4;7794:1;7787:15;7825:4;7822:1;7815:15;7679:161;;7466:380;;;:::o;7851:127::-;7912:10;7907:3;7903:20;7900:1;7893:31;7943:4;7940:1;7933:15;7967:4;7964:1;7957:15;8665:127;8726:10;8721:3;8717:20;8714:1;8707:31;8757:4;8754:1;8747:15;8781:4;8778:1;8771:15;8797:217;8837:1;8863;8853:132;;8907:10;8902:3;8898:20;8895:1;8888:31;8942:4;8939:1;8932:15;8970:4;8967:1;8960:15;8853:132;-1:-1:-1;8999:9:9;;8797:217::o;9298:277::-;9365:6;9418:2;9406:9;9397:7;9393:23;9389:32;9386:52;;;9434:1;9431;9424:12;9386:52;9466:9;9460:16;9519:5;9512:13;9505:21;9498:5;9495:32;9485:60;;9541:1;9538;9531:12;9923:168;9996:9;;;10027;;10044:15;;;10038:22;;10024:37;10014:71;;10065:18;;:::i;11266:545::-;11368:2;11363:3;11360:11;11357:448;;;11404:1;11429:5;11425:2;11418:17;11474:4;11470:2;11460:19;11544:2;11532:10;11528:19;11525:1;11521:27;11515:4;11511:38;11580:4;11568:10;11565:20;11562:47;;;-1:-1:-1;11603:4:9;11562:47;11658:2;11653:3;11649:12;11646:1;11642:20;11636:4;11632:31;11622:41;;11713:82;11731:2;11724:5;11721:13;11713:82;;;11776:17;;;11757:1;11746:13;11713:82;;;11717:3;;;11266:545;;;:::o;11987:1352::-;12113:3;12107:10;12140:18;12132:6;12129:30;12126:56;;;12162:18;;:::i;:::-;12191:97;12281:6;12241:38;12273:4;12267:11;12241:38;:::i;:::-;12235:4;12191:97;:::i;:::-;12343:4;;12407:2;12396:14;;12424:1;12419:663;;;;13126:1;13143:6;13140:89;;;-1:-1:-1;13195:19:9;;;13189:26;13140:89;-1:-1:-1;;11944:1:9;11940:11;;;11936:24;11932:29;11922:40;11968:1;11964:11;;;11919:57;13242:81;;12389:944;;12419:663;11213:1;11206:14;;;11250:4;11237:18;;-1:-1:-1;;12455:20:9;;;12573:236;12587:7;12584:1;12581:14;12573:236;;;12676:19;;;12670:26;12655:42;;12768:27;;;;12736:1;12724:14;;;;12603:19;;12573:236;;;12577:3;12837:6;12828:7;12825:19;12822:201;;;12898:19;;;12892:26;-1:-1:-1;;12981:1:9;12977:14;;;12993:3;12973:24;12969:37;12965:42;12950:58;12935:74;;12822:201;-1:-1:-1;;;;;13069:1:9;13053:14;;;13049:22;13036:36;;-1:-1:-1;11987:1352:9:o;13344:128::-;13411:9;;;13432:11;;;13429:37;;;13446:18;;:::i;13477:184::-;13547:6;13600:2;13588:9;13579:7;13575:23;13571:32;13568:52;;;13616:1;13613;13606:12;13568:52;-1:-1:-1;13639:16:9;;13477:184;-1:-1:-1;13477:184:9:o;14002:125::-;14067:9;;;14088:10;;;14085:36;;;14101:18;;:::i;14726:135::-;14765:3;14786:17;;;14783:43;;14806:18;;:::i;:::-;-1:-1:-1;14853:1:9;14842:13;;14726:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1405800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_lastJoinTime(address)": "2583",
								"_rewards()": "2405",
								"_topics(uint256)": "infinite",
								"_voterCounts(uint256)": "2480",
								"_votes(uint256,uint256)": "2575",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24758",
								"balanceOf(address)": "2626",
								"claimRewards(uint256)": "66158",
								"create(string,string,uint256,uint256,bytes32)": "infinite",
								"decimals()": "199",
								"name()": "infinite",
								"owner()": "2323",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"topicAt(uint256)": "infinite",
								"topicTotal()": "2423",
								"topics(uint256,uint256)": "infinite",
								"totalSupply()": "2392",
								"transfer(address,uint256)": "51349",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443",
								"updateRewards(uint256)": "24508",
								"vote(uint256,uint256,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 209,
									"end": 4638,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 681,
									"end": 690,
									"name": "PUSH",
									"source": 6,
									"value": "8AC7230489E80000"
								},
								{
									"begin": 658,
									"end": 690,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 658,
									"end": 690,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1524,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1524,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1524,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1524,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1347,
									"end": 1524,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1524,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1347,
									"end": 1524,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1524,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1524,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1347,
									"end": 1524,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "42494153"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1391,
									"end": 1401,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1401,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2881,
									"end": 2932,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2854,
									"end": 2872,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2854,
									"end": 2872,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1515,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "C94ABF0292AC04AAC18C251D9C8169A8DD2BBBDC"
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1450,
									"end": 1516,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2899,
									"end": 2931,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2899,
									"end": 2931,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2899,
									"end": 2931,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2881,
									"end": 2932,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2881,
									"end": 2932,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2869,
									"end": 2871,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2854,
									"end": 2872,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "CREATE",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1450,
									"end": 1516,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1450,
									"end": 1516,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1428,
									"end": 1447,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1428,
									"end": 1516,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1428,
									"end": 1516,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1428,
									"end": 1516,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1428,
									"end": 1516,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1428,
									"end": 1516,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1428,
									"end": 1516,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1428,
									"end": 1516,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1428,
									"end": 1516,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1428,
									"end": 1516,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1428,
									"end": 1516,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1428,
									"end": 1516,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1428,
									"end": 1516,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1428,
									"end": 1516,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 209,
									"end": 4638,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 9,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2735,
									"end": 2938,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 2735,
									"end": 2938,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 209,
									"end": 4638,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd76bc054f9b7286b2319f7424a569c2b00a432882652b1101de32972756f42e64736f6c63430008140033",
									".code": [
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "B1E95E94"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "B1E95E94"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "CDA411BE"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "ED2E39A7"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "F7CB2657"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "93AD4ACA"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "9A383DFD"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "A6C2DA4C"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "63B6AD97"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "68229099"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "8C881EEB"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "962EF79"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "A05B17F"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 4638,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1269,
											"end": 1283,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 1284,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1244,
											"end": 1285,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1244,
											"end": 1285,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1104,
											"end": 1291,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 4112,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3850,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3850,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3850,
											"end": 4112,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 4112,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3850,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3850,
											"end": 4112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 4112,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3850,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3850,
											"end": 4112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 4112,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3850,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 4112,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 2640,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1775,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1775,
											"end": 2640,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 2640,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1775,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1775,
											"end": 2640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 2640,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1775,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1775,
											"end": 2640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3237,
											"end": 3262,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3237,
											"end": 3262,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3227,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3091,
											"end": 3268,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3748,
											"end": 3784,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3748,
											"end": 3784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3738,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3721,
											"end": 3739,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3606,
											"end": 3790,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 780,
											"end": 832,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 780,
											"end": 832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 780,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 780,
											"end": 832,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 780,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 780,
											"end": 832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 780,
											"end": 832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 780,
											"end": 832,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 780,
											"end": 832,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 832,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 832,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 780,
											"end": 832,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1244,
											"end": 1292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1292,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2829,
											"end": 3743,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2829,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2829,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2829,
											"end": 3743,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 3743,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2829,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2829,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 3743,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2829,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2829,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4757,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4706,
											"end": 4757,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4696,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4560,
											"end": 4763,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 893,
											"end": 934,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 893,
											"end": 934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 893,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 893,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 893,
											"end": 934,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 893,
											"end": 934,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 893,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 893,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 893,
											"end": 934,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 893,
											"end": 934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 893,
											"end": 934,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 893,
											"end": 934,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 934,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 893,
											"end": 934,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 893,
											"end": 934,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 893,
											"end": 934,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 893,
											"end": 934,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 893,
											"end": 934,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 893,
											"end": 934,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 893,
											"end": 934,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 893,
											"end": 934,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 699,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 699,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 699,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 699,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 658,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 658,
											"end": 690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 658,
											"end": 690,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 4308,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 4215,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4215,
											"end": 4308,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4308,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4215,
											"end": 4308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4308,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4215,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 4215,
											"end": 4308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2648,
											"end": 2748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2648,
											"end": 2748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2648,
											"end": 2748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4316,
											"end": 4539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4316,
											"end": 4539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4316,
											"end": 4539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4635,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4547,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4620,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4547,
											"end": 4635,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4112,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3850,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3945,
											"end": 3952,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3937,
											"end": 3953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3957,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3937,
											"end": 3957,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3957,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3924,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3912,
											"end": 3933,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3932,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3933,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3933,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3912,
											"end": 3933,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3933,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3933,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3912,
											"end": 3933,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3933,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3933,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3933,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3957,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3957,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8185,
											"end": 8187,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8167,
											"end": 8188,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8224,
											"end": 8226,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 8204,
											"end": 8222,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8204,
											"end": 8222,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8204,
											"end": 8222,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8197,
											"end": 8227,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD08199A5B9A5CDA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8243,
											"end": 8261,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8243,
											"end": 8261,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8236,
											"end": 8278,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8295,
											"end": 8313,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8295,
											"end": 8313,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3904,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4021,
											"end": 4031,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3993,
											"end": 4031,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4000,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4001,
											"end": 4008,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3993,
											"end": 4009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4017,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3993,
											"end": 4017,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4031,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3985,
											"end": 4048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3985,
											"end": 4048,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3985,
											"end": 4048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8526,
											"end": 8528,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3985,
											"end": 4048,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3985,
											"end": 4048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8529,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8565,
											"end": 8567,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 8545,
											"end": 8563,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8545,
											"end": 8563,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8545,
											"end": 8563,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8538,
											"end": 8568,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7363C9031B932B0BA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8584,
											"end": 8602,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8584,
											"end": 8602,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8584,
											"end": 8602,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8577,
											"end": 8619,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8636,
											"end": 8654,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8636,
											"end": 8654,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3985,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 8324,
											"end": 8660,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3985,
											"end": 4048,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3985,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4065,
											"end": 4075,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4103,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4077,
											"end": 4084,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4085,
											"end": 4092,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4077,
											"end": 4093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4099,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4077,
											"end": 4099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4099,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4077,
											"end": 4103,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4077,
											"end": 4103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4103,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4077,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4059,
											"end": 4104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4104,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4059,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 4112,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 4112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 2640,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1775,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1992,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1973,
											"end": 1992,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59506B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2021,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9193,
											"end": 9244,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9260,
											"end": 9278,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9260,
											"end": 9278,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9260,
											"end": 9278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9287,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9287,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1973,
											"end": 1992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1992,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1992,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "PUSH",
											"source": 6,
											"value": "2CA835A8"
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9166,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9166,
											"end": 9184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1973,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1973,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1951,
											"end": 2080,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2080,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 2080,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 2080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9784,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 2080,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 2080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9764,
											"end": 9785,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9821,
											"end": 9823,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 9801,
											"end": 9819,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9801,
											"end": 9819,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9801,
											"end": 9819,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9794,
											"end": 9824,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD08185D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9840,
											"end": 9858,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9840,
											"end": 9858,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9840,
											"end": 9858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9833,
											"end": 9877,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9894,
											"end": 9912,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9894,
											"end": 9912,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1951,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 9580,
											"end": 9918,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1951,
											"end": 2080,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1951,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4620,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2113,
											"end": 2199,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2144,
											"end": 2154,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2164,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 2134,
											"end": 2164,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2198,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2198,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2134,
											"end": 2198,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2198,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2184,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2184,
											"end": 2192,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2181,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2178,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2177,
											"end": 2198,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2177,
											"end": 2198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2198,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2177,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2173,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2198,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2198,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2198,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2134,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2091,
											"end": 2245,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2245,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2245,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2091,
											"end": 2245,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2245,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10298,
											"end": 10300,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2245,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2091,
											"end": 2245,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2245,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10280,
											"end": 10301,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10337,
											"end": 10339,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10310,
											"end": 10340,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E73756666696369656E742066756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10356,
											"end": 10374,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10356,
											"end": 10374,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10356,
											"end": 10374,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10349,
											"end": 10397,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10414,
											"end": 10432,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10414,
											"end": 10432,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 10096,
											"end": 10438,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2245,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2091,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2270,
											"end": 2271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2267,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2271,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2256,
											"end": 2290,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2290,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2256,
											"end": 2290,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2256,
											"end": 2290,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2290,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10645,
											"end": 10647,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2256,
											"end": 2290,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2256,
											"end": 2290,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2290,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10684,
											"end": 10686,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 10664,
											"end": 10682,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10664,
											"end": 10682,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10682,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10657,
											"end": 10687,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E76616C696420706172616D73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10703,
											"end": 10721,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10703,
											"end": 10721,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10703,
											"end": 10721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10740,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10757,
											"end": 10775,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10757,
											"end": 10775,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2256,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 10443,
											"end": 10781,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2256,
											"end": 2290,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2256,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2317,
											"end": 2327,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2328,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2328,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2316,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2309,
											"end": 2328,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2328,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2328,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2328,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2328,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2301,
											"end": 2363,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2301,
											"end": 2363,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2301,
											"end": 2363,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2363,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10988,
											"end": 10990,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2363,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2301,
											"end": 2363,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10970,
											"end": 10991,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11027,
											"end": 11029,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 11007,
											"end": 11025,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11007,
											"end": 11025,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11007,
											"end": 11025,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11000,
											"end": 11030,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11066,
											"end": 11093,
											"name": "PUSH",
											"source": 9,
											"value": "6F6E6C7920616C6C6F77206F6E65206C69766520746F70696300000000000000"
										},
										{
											"begin": 11046,
											"end": 11064,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11046,
											"end": 11064,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11046,
											"end": 11064,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11039,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11111,
											"end": 11129,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11111,
											"end": 11129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2301,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 10786,
											"end": 11135,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2301,
											"end": 2363,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2301,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2391,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 4613,
											"end": 4620,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4635,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2389,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2377,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2391,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2471,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2374,
											"end": 2471,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2441,
											"end": 2451,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2458,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2435,
											"end": 2459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2459,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2435,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2514,
											"end": 2524,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2541,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2488,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C689"
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2570,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68A"
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2481,
											"end": 2581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2481,
											"end": 2581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2581,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2621,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2614,
											"end": 2632,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2631,
											"end": 2632,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2631,
											"end": 2632,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2614,
											"end": 2632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2632,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2614,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2599,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2592,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 2611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2611,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2632,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1775,
											"end": 2640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2829,
											"end": 3743,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2829,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 2927,
											"end": 2946,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17AEB55D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 2982,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9193,
											"end": 9244,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9260,
											"end": 9278,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9260,
											"end": 9278,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9260,
											"end": 9278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9287,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9287,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2913,
											"end": 2924,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2924,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2927,
											"end": 2946,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 2946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 2957,
											"name": "PUSH",
											"source": 6,
											"value": "BD75AAE8"
										},
										{
											"begin": 2927,
											"end": 2957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9166,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9166,
											"end": 9184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2927,
											"end": 3022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2927,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2913,
											"end": 3022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2913,
											"end": 3022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3051,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3047,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3051,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3033,
											"end": 3070,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3070,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3070,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3033,
											"end": 3070,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3070,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9784,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3033,
											"end": 3070,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3033,
											"end": 3070,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9764,
											"end": 9785,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9821,
											"end": 9823,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 9801,
											"end": 9819,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9801,
											"end": 9819,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9801,
											"end": 9819,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9794,
											"end": 9824,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD08185D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9840,
											"end": 9858,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9840,
											"end": 9858,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9840,
											"end": 9858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9833,
											"end": 9877,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9894,
											"end": 9912,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9894,
											"end": 9912,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3033,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 9580,
											"end": 9918,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3033,
											"end": 3070,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3033,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3120,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3121,
											"end": 3128,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3113,
											"end": 3129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3133,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3113,
											"end": 3133,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3133,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3109,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3133,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3081,
											"end": 3146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3146,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3081,
											"end": 3146,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3081,
											"end": 3146,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3146,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13868,
											"end": 13870,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3081,
											"end": 3146,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3081,
											"end": 3146,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3146,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13850,
											"end": 13871,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13907,
											"end": 13908,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 13887,
											"end": 13905,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13887,
											"end": 13905,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13887,
											"end": 13905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13880,
											"end": 13909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "199A5B9A5CDA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13918,
											"end": 13956,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13973,
											"end": 13991,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13973,
											"end": 13991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3081,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 13666,
											"end": 13997,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3081,
											"end": 3146,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3081,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3222,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3223,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3223,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3211,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3198,
											"end": 3223,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3198,
											"end": 3223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3223,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3198,
											"end": 3223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3223,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3223,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3198,
											"end": 3240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3198,
											"end": 3240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3240,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3198,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3179,
											"end": 3194,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3179,
											"end": 3240,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3179,
											"end": 3240,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3157,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3157,
											"end": 3280,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3157,
											"end": 3280,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3280,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3157,
											"end": 3280,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3157,
											"end": 3280,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14334,
											"end": 14336,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3280,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3157,
											"end": 3280,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3157,
											"end": 3280,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14316,
											"end": 14337,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14373,
											"end": 14375,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 14353,
											"end": 14371,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14353,
											"end": 14371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14353,
											"end": 14371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14346,
											"end": 14376,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F6E63652070657220646179"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14392,
											"end": 14410,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14392,
											"end": 14410,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14392,
											"end": 14410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14385,
											"end": 14427,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14444,
											"end": 14462,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14444,
											"end": 14462,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 14132,
											"end": 14468,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3280,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3157,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 3315,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3316,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3291,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3291,
											"end": 3316,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3316,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3334,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3334,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3334,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3444,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3347,
											"end": 3468,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 3315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3452,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3452,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3437,
											"end": 3453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3419,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3420,
											"end": 3427,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3412,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3434,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3412,
											"end": 3434,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3434,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3412,
											"end": 3457,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3457,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3412,
											"end": 3457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3457,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3412,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3403,
											"end": 3409,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3392,
											"end": 3400,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3392,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3392,
											"end": 3457,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3457,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3392,
											"end": 3457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3468,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3347,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3500,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3500,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3491,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3479,
											"end": 3500,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3479,
											"end": 3500,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3500,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3479,
											"end": 3500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3500,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3505,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3505,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 3505,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3504,
											"end": 3505,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3479,
											"end": 3505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 3505,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 3505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3479,
											"end": 3505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3505,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3479,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3505,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3505,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3522,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3540,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3540,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3540,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3540,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3540,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3550,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3550,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3550,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3516,
											"end": 3550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3550,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3516,
											"end": 3550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3550,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3516,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3550,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3550,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3566,
											"end": 3608,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3566,
											"end": 3608,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3608,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 14647,
											"end": 14672,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14647,
											"end": 14672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14647,
											"end": 14672,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14703,
											"end": 14705,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14688,
											"end": 14706,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14688,
											"end": 14706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14681,
											"end": 14715,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14681,
											"end": 14715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14681,
											"end": 14715,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3583,
											"end": 3590,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3581,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3608,
											"name": "PUSH",
											"source": 6,
											"value": "6C7EB2743EC28489909706EA440D909129004996BE657D36C6E9ADD778546ABF"
										},
										{
											"begin": 3566,
											"end": 3608,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3566,
											"end": 3608,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3566,
											"end": 3608,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3608,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3608,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3608,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3608,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3657,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3658,
											"end": 3665,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3650,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3670,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3650,
											"end": 3670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3670,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3625,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3645,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3646,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3646,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3625,
											"end": 3646,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3646,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3670,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 3621,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3687,
											"end": 3694,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3687,
											"end": 3720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3702,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3703,
											"end": 3710,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3695,
											"end": 3711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3719,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3695,
											"end": 3719,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3720,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3720,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3720,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3720,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3720,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3720,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3720,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3720,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3720,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3687,
											"end": 3720,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3720,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3720,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3724,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3736,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 3621,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 3743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 3743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 3743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 3743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 699,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 699,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 699,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 699,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 699,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 699,
											"end": 721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 699,
											"end": 721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 4308,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 4215,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4281,
											"end": 4300,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2693,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2693,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 2693,
											"end": 2705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2693,
											"end": 2705,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2693,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2734,
											"end": 2739,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2726,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2719,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2719,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2719,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2719,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4399,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 4421,
											"end": 4440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 4421,
											"end": 4440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4412,
											"end": 4440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4412,
											"end": 4440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4451,
											"end": 4532,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 4451,
											"end": 4532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4466,
											"end": 4472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4464,
											"end": 4465,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4464,
											"end": 4472,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4451,
											"end": 4532,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4451,
											"end": 4532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 4451,
											"end": 4532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4511,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4512,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 4514,
											"end": 4519,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4512,
											"end": 4519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4519,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 4512,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4504,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4492,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4492,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4492,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4492,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4498,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4499,
											"end": 4500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4492,
											"end": 4501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4476,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4476,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 4473,
											"end": 4476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 4473,
											"end": 4476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4476,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 4473,
											"end": 4476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4476,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4451,
											"end": 4532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 4451,
											"end": 4532,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4451,
											"end": 4532,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 4451,
											"end": 4532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4451,
											"end": 4532,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4757,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4560,
											"end": 4763,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4757,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4560,
											"end": 4763,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4757,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4560,
											"end": 4763,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15086,
											"end": 15118,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15086,
											"end": 15118,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15068,
											"end": 15119,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15135,
											"end": 15153,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15135,
											"end": 15153,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15135,
											"end": 15153,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15128,
											"end": 15162,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15128,
											"end": 15162,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15128,
											"end": 15162,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15178,
											"end": 15196,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 15178,
											"end": 15196,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15178,
											"end": 15196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15171,
											"end": 15205,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15171,
											"end": 15205,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15171,
											"end": 15205,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 14866,
											"end": 15211,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4757,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4560,
											"end": 4763,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4757,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4560,
											"end": 4763,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4757,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4560,
											"end": 4763,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4757,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4560,
											"end": 4763,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4757,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4560,
											"end": 4763,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3262,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3237,
											"end": 3262,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3227,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3091,
											"end": 3268,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15086,
											"end": 15118,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15086,
											"end": 15118,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15068,
											"end": 15119,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15135,
											"end": 15153,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15135,
											"end": 15153,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15135,
											"end": 15153,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15128,
											"end": 15162,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15128,
											"end": 15162,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15128,
											"end": 15162,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15178,
											"end": 15196,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 15178,
											"end": 15196,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15178,
											"end": 15196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15171,
											"end": 15205,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15171,
											"end": 15205,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15171,
											"end": 15205,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 14866,
											"end": 15211,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3262,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3237,
											"end": 3262,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3227,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3091,
											"end": 3268,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "278"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 437,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 14,
											"end": 437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 56,
											"end": 59,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 99,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 88,
											"end": 100,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 121,
											"end": 127,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 116,
											"end": 119,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 109,
											"end": 128,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 146,
											"end": 147,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 170,
											"end": 176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 167,
											"end": 168,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 164,
											"end": 177,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 156,
											"end": 318,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 156,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 232,
											"end": 236,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 288,
											"end": 301,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 288,
											"end": 301,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 288,
											"end": 301,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 284,
											"end": 306,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 284,
											"end": 306,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 278,
											"end": 307,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 260,
											"end": 271,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 260,
											"end": 271,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 260,
											"end": 271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 256,
											"end": 276,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 256,
											"end": 276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 249,
											"end": 308,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 185,
											"end": 197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 156,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 156,
											"end": 318,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 160,
											"end": 163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 363,
											"end": 364,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 347,
											"end": 353,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 342,
											"end": 345,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 338,
											"end": 354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 334,
											"end": 361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 327,
											"end": 365,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 426,
											"end": 430,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 419,
											"end": 421,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 415,
											"end": 422,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 410,
											"end": 412,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 398,
											"end": 413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 394,
											"end": 423,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 389,
											"end": 392,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 381,
											"end": 431,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 374,
											"end": 431,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 374,
											"end": 431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 374,
											"end": 431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 437,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14,
											"end": 437,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 442,
											"end": 662,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 442,
											"end": 662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 591,
											"end": 593,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 573,
											"end": 594,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 554,
											"end": 558,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 652,
											"end": 654,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 637,
											"end": 655,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 611,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 611,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 611,
											"end": 656,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 603,
											"end": 656,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 442,
											"end": 662,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 442,
											"end": 662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 667,
											"end": 840,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 667,
											"end": 840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 735,
											"end": 755,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 735,
											"end": 755,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 784,
											"end": 815,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 784,
											"end": 815,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 774,
											"end": 816,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 774,
											"end": 816,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 764,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 764,
											"end": 834,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 828,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 820,
											"end": 832,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 764,
											"end": 834,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 764,
											"end": 834,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 667,
											"end": 840,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 667,
											"end": 840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 667,
											"end": 840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 845,
											"end": 1099,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 845,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 913,
											"end": 919,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 921,
											"end": 927,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 974,
											"end": 976,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 971,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 949,
											"end": 972,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 945,
											"end": 977,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 942,
											"end": 994,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 942,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 942,
											"end": 994,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 990,
											"end": 991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 988,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 980,
											"end": 992,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 942,
											"end": 994,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 942,
											"end": 994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 1032,
											"end": 1041,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 1013,
											"end": 1042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1003,
											"end": 1042,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1089,
											"end": 1091,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 845,
											"end": 1099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1296,
											"end": 1476,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1296,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1361,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1394,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1406,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1379,
											"end": 1411,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1376,
											"end": 1428,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1376,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 1376,
											"end": 1428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1424,
											"end": 1425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1421,
											"end": 1422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1426,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1376,
											"end": 1428,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 1376,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1447,
											"end": 1470,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1447,
											"end": 1470,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1296,
											"end": 1476,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1296,
											"end": 1476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1481,
											"end": 1608,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 1481,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1552,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1533,
											"end": 1553,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1531,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1523,
											"end": 1554,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1577,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1597,
											"end": 1601,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1594,
											"end": 1595,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1602,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1613,
											"end": 2332,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 1613,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1656,
											"end": 1661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1712,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1706,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1694,
											"end": 1700,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1713,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 1676,
											"end": 1731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1728,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1729,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1731,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 1676,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1769,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1750,
											"end": 1770,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1822,
											"end": 1824,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1819,
											"end": 1829,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1852,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 1816,
											"end": 1852,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1832,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 1832,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 1832,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1832,
											"end": 1850,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 1832,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1907,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1910,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1875,
											"end": 1877,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1961,
											"end": 1974,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1974,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1957,
											"end": 1979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1957,
											"end": 1979,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1957,
											"end": 1979,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1981,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 1953,
											"end": 1984,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1949,
											"end": 1989,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 1990,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 1990,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 1990,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2005,
											"end": 2023,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2005,
											"end": 2023,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2005,
											"end": 2023,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2047,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2047,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2047,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2048,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1999,
											"end": 2071,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1999,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 1999,
											"end": 2071,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2051,
											"end": 2069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2087,
											"end": 2089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2102,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2126,
											"end": 2128,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2118,
											"end": 2124,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2111,
											"end": 2129,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2172,
											"end": 2175,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2160,
											"end": 2162,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2170,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2141,
											"end": 2176,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2193,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 2138,
											"end": 2193,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2187,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2191,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2193,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 2138,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2246,
											"end": 2250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2231,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2225,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2215,
											"end": 2232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2256,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2301,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2297,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2290,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2280,
											"end": 2286,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2291,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2302,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2311,
											"end": 2326,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2311,
											"end": 2326,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2311,
											"end": 2326,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2311,
											"end": 2326,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2311,
											"end": 2326,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2311,
											"end": 2326,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1613,
											"end": 2332,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1613,
											"end": 2332,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1613,
											"end": 2332,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1613,
											"end": 2332,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1613,
											"end": 2332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 3086,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2337,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2452,
											"end": 2458,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2482,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2537,
											"end": 2540,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2525,
											"end": 2534,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2516,
											"end": 2523,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2512,
											"end": 2535,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2541,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2505,
											"end": 2558,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2505,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 2505,
											"end": 2558,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2554,
											"end": 2555,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2552,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2505,
											"end": 2558,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 2505,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2594,
											"end": 2603,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2604,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2641,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2662,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2667,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2684,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 2650,
											"end": 2684,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2682,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2684,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 2650,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2703,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 2745,
											"end": 2752,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2736,
											"end": 2742,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2725,
											"end": 2734,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 2721,
											"end": 2743,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2703,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 2703,
											"end": 2753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2703,
											"end": 2753,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 2703,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2808,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2795,
											"end": 2804,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2791,
											"end": 2809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2810,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2762,
											"end": 2810,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2762,
											"end": 2810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2837,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2833,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2822,
											"end": 2838,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2855,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 2819,
											"end": 2855,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2851,
											"end": 2852,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2841,
											"end": 2853,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2855,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 2819,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 2918,
											"end": 2925,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 2915,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2905,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2892,
											"end": 2916,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 2874,
											"end": 2926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2926,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 2874,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 3086,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 3086,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2973,
											"end": 2975,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2958,
											"end": 2976,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2976,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 2977,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 2977,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3026,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3009,
											"end": 3027,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3009,
											"end": 3027,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2996,
											"end": 3028,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2996,
											"end": 3028,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3075,
											"end": 3078,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3047,
											"end": 3080,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3047,
											"end": 3080,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2337,
											"end": 3086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2337,
											"end": 3086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3601,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 3273,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3364,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3421,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3407,
											"end": 3416,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3398,
											"end": 3405,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3417,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3390,
											"end": 3422,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3387,
											"end": 3439,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3387,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 3387,
											"end": 3439,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3435,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3433,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3387,
											"end": 3439,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 3387,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3458,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 3477,
											"end": 3486,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3458,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 3458,
											"end": 3487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3458,
											"end": 3487,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 3458,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3448,
											"end": 3487,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3448,
											"end": 3487,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3529,
											"end": 3538,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 3506,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3544,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 3506,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3593,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3580,
											"end": 3589,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3563,
											"end": 3595,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3595,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3601,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3601,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3601,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3795,
											"end": 4043,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3795,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3871,
											"end": 3877,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3926,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3912,
											"end": 3921,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3903,
											"end": 3910,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3899,
											"end": 3922,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3927,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3944,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 3892,
											"end": 3944,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3940,
											"end": 3941,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3938,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3942,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3944,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 3892,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3963,
											"end": 3986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3986,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3986,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4037,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4037,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3795,
											"end": 4043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4048,
											"end": 4234,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4048,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4107,
											"end": 4113,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4162,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4148,
											"end": 4157,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4146,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4158,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4163,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4180,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 4128,
											"end": 4180,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4177,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4173,
											"end": 4174,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4178,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4180,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 4128,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 4218,
											"end": 4227,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 4199,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4239,
											"end": 4555,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 4239,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4332,
											"end": 4338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4387,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4373,
											"end": 4382,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4383,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4388,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4405,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 4353,
											"end": 4405,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4401,
											"end": 4402,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4398,
											"end": 4399,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4391,
											"end": 4403,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4405,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 4353,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4424,
											"end": 4447,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4447,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4447,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4496,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4479,
											"end": 4497,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4498,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4498,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4545,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4530,
											"end": 4548,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4530,
											"end": 4548,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4530,
											"end": 4548,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4517,
											"end": 4549,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4517,
											"end": 4549,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4239,
											"end": 4555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4239,
											"end": 4555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 5465,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4768,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5106,
											"end": 5107,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5102,
											"end": 5103,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5097,
											"end": 5100,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 5093,
											"end": 5104,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5089,
											"end": 5108,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5087,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5077,
											"end": 5109,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5066,
											"end": 5075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5110,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5152,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5143,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5130,
											"end": 5139,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5126,
											"end": 5144,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 5153,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5189,
											"end": 5192,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 5184,
											"end": 5186,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5173,
											"end": 5182,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5169,
											"end": 5187,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5162,
											"end": 5193,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5044,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5216,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 5257,
											"end": 5260,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 5246,
											"end": 5255,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5234,
											"end": 5240,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5216,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 5216,
											"end": 5262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5216,
											"end": 5262,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 5216,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5319,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5302,
											"end": 5308,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5320,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5293,
											"end": 5295,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5282,
											"end": 5291,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5278,
											"end": 5296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5271,
											"end": 5321,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5338,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 5364,
											"end": 5370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5356,
											"end": 5362,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5338,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 5338,
											"end": 5371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5338,
											"end": 5371,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 5338,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5405,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5387,
											"end": 5406,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5387,
											"end": 5406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5380,
											"end": 5415,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5380,
											"end": 5415,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5380,
											"end": 5415,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5380,
											"end": 5415,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5446,
											"end": 5449,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 5431,
											"end": 5450,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5424,
											"end": 5459,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5371,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 5465,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4768,
											"end": 5465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 6103,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 5470,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5574,
											"end": 5577,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 5570,
											"end": 5581,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5566,
											"end": 5585,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5563,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5552,
											"end": 5564,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5548,
											"end": 5586,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5543,
											"end": 5546,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5587,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5640,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5629,
											"end": 5634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5625,
											"end": 5641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5619,
											"end": 5642,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5612,
											"end": 5616,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5607,
											"end": 5610,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 5617,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5596,
											"end": 5643,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5521,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5689,
											"end": 5693,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5682,
											"end": 5687,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5678,
											"end": 5694,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5672,
											"end": 5695,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5727,
											"end": 5731,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 5720,
											"end": 5724,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5715,
											"end": 5718,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5711,
											"end": 5725,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5704,
											"end": 5732,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 5794,
											"end": 5798,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 5789,
											"end": 5792,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5785,
											"end": 5799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5771,
											"end": 5783,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 5753,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 5800,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 5753,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5848,
											"end": 5852,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5841,
											"end": 5846,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5837,
											"end": 5853,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5831,
											"end": 5854,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5896,
											"end": 5899,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5890,
											"end": 5894,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5886,
											"end": 5900,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5879,
											"end": 5883,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5874,
											"end": 5877,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 5884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5863,
											"end": 5901,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5924,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 5958,
											"end": 5962,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5924,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 5924,
											"end": 5963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5924,
											"end": 5963,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 5924,
											"end": 5963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5910,
											"end": 5963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5910,
											"end": 5963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5910,
											"end": 5963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6012,
											"end": 6016,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6005,
											"end": 6010,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6001,
											"end": 6017,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5995,
											"end": 6018,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5988,
											"end": 5992,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5983,
											"end": 5986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5979,
											"end": 5993,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5972,
											"end": 6019,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6072,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 6061,
											"end": 6066,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6057,
											"end": 6073,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6074,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6044,
											"end": 6048,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 6039,
											"end": 6042,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6035,
											"end": 6049,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6028,
											"end": 6075,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6091,
											"end": 6097,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 6103,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 6103,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 6103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 6103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 6103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6108,
											"end": 6358,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 6108,
											"end": 6358,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6283,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6270,
											"end": 6279,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6263,
											"end": 6284,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6248,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 6348,
											"end": 6350,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6337,
											"end": 6346,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6333,
											"end": 6351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6325,
											"end": 6331,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 6301,
											"end": 6352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6623,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 6363,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6437,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6439,
											"end": 6445,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6492,
											"end": 6494,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6480,
											"end": 6489,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6471,
											"end": 6478,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6490,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6463,
											"end": 6495,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6512,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 6460,
											"end": 6512,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6508,
											"end": 6509,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6505,
											"end": 6506,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6498,
											"end": 6510,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6512,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 6460,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 6550,
											"end": 6559,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 6531,
											"end": 6560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6560,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 6531,
											"end": 6560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6521,
											"end": 6560,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6521,
											"end": 6560,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6579,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 6613,
											"end": 6615,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6602,
											"end": 6611,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6598,
											"end": 6616,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6579,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 6579,
											"end": 6617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6579,
											"end": 6617,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 6579,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6569,
											"end": 6617,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6569,
											"end": 6617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6623,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6623,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 7461,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 6628,
											"end": 7461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6843,
											"end": 6845,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6883,
											"end": 6885,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6872,
											"end": 6881,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6913,
											"end": 6915,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6911,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6916,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6936,
											"end": 6942,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6971,
											"end": 6977,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6965,
											"end": 6978,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7002,
											"end": 7008,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6994,
											"end": 7000,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7009,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7042,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7029,
											"end": 7038,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7018,
											"end": 7043,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7018,
											"end": 7043,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7102,
											"end": 7104,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7092,
											"end": 7098,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7089,
											"end": 7090,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7085,
											"end": 7099,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7083,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7105,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7052,
											"end": 7105,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7052,
											"end": 7105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7140,
											"end": 7142,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7132,
											"end": 7138,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7143,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7161,
											"end": 7162,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7171,
											"end": 7432,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 7171,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7185,
											"end": 7191,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7179,
											"end": 7192,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7432,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 7171,
											"end": 7432,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7278,
											"end": 7280,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 7262,
											"end": 7271,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7254,
											"end": 7260,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7250,
											"end": 7272,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7246,
											"end": 7282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7241,
											"end": 7244,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7234,
											"end": 7283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 7345,
											"end": 7351,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7342,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7330,
											"end": 7343,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 7306,
											"end": 7352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7352,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 7306,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7296,
											"end": 7352,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7410,
											"end": 7422,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7410,
											"end": 7422,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7410,
											"end": 7422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7410,
											"end": 7422,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7375,
											"end": 7390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7375,
											"end": 7390,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7375,
											"end": 7390,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7375,
											"end": 7390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7207,
											"end": 7208,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7200,
											"end": 7209,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 7171,
											"end": 7432,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7432,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 7171,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7449,
											"end": 7455,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7449,
											"end": 7455,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 7461,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6628,
											"end": 7461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 7846,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 7466,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7545,
											"end": 7546,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7541,
											"end": 7553,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7541,
											"end": 7553,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7541,
											"end": 7553,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 7541,
											"end": 7553,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7609,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 7609,
											"end": 7670,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7663,
											"end": 7667,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 7655,
											"end": 7661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7651,
											"end": 7668,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7641,
											"end": 7668,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7641,
											"end": 7668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7609,
											"end": 7670,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 7609,
											"end": 7670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7716,
											"end": 7718,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7705,
											"end": 7719,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7685,
											"end": 7703,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7720,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 7679,
											"end": 7840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7762,
											"end": 7772,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 7757,
											"end": 7760,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 7753,
											"end": 7773,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 7750,
											"end": 7751,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7743,
											"end": 7774,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7797,
											"end": 7801,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 7794,
											"end": 7795,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7787,
											"end": 7802,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7825,
											"end": 7829,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7822,
											"end": 7823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7840,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 7679,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 7846,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 7846,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 7846,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 7846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7851,
											"end": 7978,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 7851,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7912,
											"end": 7922,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 7907,
											"end": 7910,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 7903,
											"end": 7923,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 7900,
											"end": 7901,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7893,
											"end": 7924,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7943,
											"end": 7947,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 7940,
											"end": 7941,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7933,
											"end": 7948,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7967,
											"end": 7971,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7964,
											"end": 7965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8665,
											"end": 8792,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 8665,
											"end": 8792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8726,
											"end": 8736,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 8721,
											"end": 8724,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 8717,
											"end": 8737,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8715,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8707,
											"end": 8738,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8761,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 8754,
											"end": 8755,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8747,
											"end": 8762,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8781,
											"end": 8785,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8778,
											"end": 8779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8771,
											"end": 8786,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8797,
											"end": 9014,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 8797,
											"end": 9014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8838,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8863,
											"end": 8864,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 8853,
											"end": 8985,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8907,
											"end": 8917,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 8902,
											"end": 8905,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 8898,
											"end": 8918,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 8895,
											"end": 8896,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8888,
											"end": 8919,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 8946,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 8939,
											"end": 8940,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8932,
											"end": 8947,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8970,
											"end": 8974,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8967,
											"end": 8968,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8960,
											"end": 8975,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8985,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 8853,
											"end": 8985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8999,
											"end": 9008,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8999,
											"end": 9008,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8797,
											"end": 9014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9575,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 9298,
											"end": 9575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9365,
											"end": 9371,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9418,
											"end": 9420,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9406,
											"end": 9415,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9397,
											"end": 9404,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9393,
											"end": 9416,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9389,
											"end": 9421,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9386,
											"end": 9438,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9386,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 9386,
											"end": 9438,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9434,
											"end": 9435,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9431,
											"end": 9432,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9424,
											"end": 9436,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9386,
											"end": 9438,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 9386,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9475,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9476,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9512,
											"end": 9525,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9505,
											"end": 9526,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9498,
											"end": 9503,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9495,
											"end": 9527,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9485,
											"end": 9545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 9485,
											"end": 9545,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9541,
											"end": 9542,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9538,
											"end": 9539,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9531,
											"end": 9543,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9923,
											"end": 10091,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 9923,
											"end": 10091,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9996,
											"end": 10005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9996,
											"end": 10005,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9996,
											"end": 10005,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10027,
											"end": 10036,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10027,
											"end": 10036,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10044,
											"end": 10059,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10044,
											"end": 10059,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10044,
											"end": 10059,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 10024,
											"end": 10061,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 10014,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 10014,
											"end": 10085,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10065,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 10065,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 10065,
											"end": 10083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11266,
											"end": 11811,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 11266,
											"end": 11811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11368,
											"end": 11370,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11363,
											"end": 11366,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11360,
											"end": 11371,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11357,
											"end": 11805,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11357,
											"end": 11805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 11357,
											"end": 11805,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11404,
											"end": 11405,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11429,
											"end": 11434,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11425,
											"end": 11427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11418,
											"end": 11435,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11474,
											"end": 11478,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11470,
											"end": 11472,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11460,
											"end": 11479,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11544,
											"end": 11546,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11532,
											"end": 11542,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11528,
											"end": 11547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11526,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 11521,
											"end": 11548,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 11515,
											"end": 11519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11511,
											"end": 11549,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11584,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11568,
											"end": 11578,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11565,
											"end": 11585,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11609,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 11562,
											"end": 11609,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11603,
											"end": 11607,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11609,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 11562,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11658,
											"end": 11660,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11653,
											"end": 11656,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11649,
											"end": 11661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11646,
											"end": 11647,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 11642,
											"end": 11662,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 11636,
											"end": 11640,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11632,
											"end": 11663,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11622,
											"end": 11663,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11622,
											"end": 11663,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11713,
											"end": 11795,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 11713,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11733,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11724,
											"end": 11729,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11721,
											"end": 11734,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11713,
											"end": 11795,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11713,
											"end": 11795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 11713,
											"end": 11795,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11776,
											"end": 11793,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11776,
											"end": 11793,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11776,
											"end": 11793,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 11757,
											"end": 11758,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11746,
											"end": 11759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11713,
											"end": 11795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 11713,
											"end": 11795,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11713,
											"end": 11795,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 11713,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11717,
											"end": 11720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11717,
											"end": 11720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11717,
											"end": 11720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11266,
											"end": 11811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11266,
											"end": 11811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11266,
											"end": 11811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11266,
											"end": 11811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11987,
											"end": 13339,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 11987,
											"end": 13339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12113,
											"end": 12116,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12117,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12140,
											"end": 12158,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12132,
											"end": 12138,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12129,
											"end": 12159,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12126,
											"end": 12182,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12126,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 12126,
											"end": 12182,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12162,
											"end": 12180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 12162,
											"end": 12180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 12162,
											"end": 12180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12162,
											"end": 12180,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 12162,
											"end": 12180,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12191,
											"end": 12288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 12281,
											"end": 12287,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 12273,
											"end": 12277,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12267,
											"end": 12278,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 12241,
											"end": 12279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12279,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 12241,
											"end": 12279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12235,
											"end": 12239,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12191,
											"end": 12288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 12191,
											"end": 12288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12191,
											"end": 12288,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 12191,
											"end": 12288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12343,
											"end": 12347,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12343,
											"end": 12347,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12407,
											"end": 12409,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 12396,
											"end": 12410,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12396,
											"end": 12410,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12425,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12419,
											"end": 13082,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12419,
											"end": 13082,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12419,
											"end": 13082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 12419,
											"end": 13082,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13126,
											"end": 13127,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13143,
											"end": 13149,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13140,
											"end": 13229,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13140,
											"end": 13229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 13140,
											"end": 13229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13195,
											"end": 13214,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13195,
											"end": 13214,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13195,
											"end": 13214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13189,
											"end": 13215,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13140,
											"end": 13229,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 13140,
											"end": 13229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11944,
											"end": 11945,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 11940,
											"end": 11951,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11940,
											"end": 11951,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11940,
											"end": 11951,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 11936,
											"end": 11960,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 11932,
											"end": 11961,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11922,
											"end": 11962,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11968,
											"end": 11969,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11964,
											"end": 11975,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11964,
											"end": 11975,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11964,
											"end": 11975,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 11919,
											"end": 11976,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 13242,
											"end": 13323,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13242,
											"end": 13323,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12389,
											"end": 13333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 12389,
											"end": 13333,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12419,
											"end": 13082,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 12419,
											"end": 13082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11213,
											"end": 11214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11206,
											"end": 11220,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11206,
											"end": 11220,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11206,
											"end": 11220,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11250,
											"end": 11254,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11237,
											"end": 11255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11237,
											"end": 11255,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12455,
											"end": 12475,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12455,
											"end": 12475,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12455,
											"end": 12475,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12573,
											"end": 12809,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 12573,
											"end": 12809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12594,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12584,
											"end": 12585,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12581,
											"end": 12595,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12573,
											"end": 12809,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12573,
											"end": 12809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 12573,
											"end": 12809,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12676,
											"end": 12695,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 12676,
											"end": 12695,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12676,
											"end": 12695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12670,
											"end": 12696,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12655,
											"end": 12697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12655,
											"end": 12697,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12768,
											"end": 12795,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12768,
											"end": 12795,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12768,
											"end": 12795,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12768,
											"end": 12795,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12736,
											"end": 12737,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12724,
											"end": 12738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12724,
											"end": 12738,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12724,
											"end": 12738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12724,
											"end": 12738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12603,
											"end": 12622,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12603,
											"end": 12622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12573,
											"end": 12809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 12573,
											"end": 12809,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12573,
											"end": 12809,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 12573,
											"end": 12809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12577,
											"end": 12580,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12837,
											"end": 12843,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12828,
											"end": 12835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12825,
											"end": 12844,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12822,
											"end": 13023,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12822,
											"end": 13023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 12822,
											"end": 13023,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12898,
											"end": 12917,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12898,
											"end": 12917,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12898,
											"end": 12917,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12892,
											"end": 12918,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12981,
											"end": 12982,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 12977,
											"end": 12991,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 12977,
											"end": 12991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12977,
											"end": 12991,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 12993,
											"end": 12996,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 12973,
											"end": 12997,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12969,
											"end": 13006,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 12965,
											"end": 13007,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12950,
											"end": 13008,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12935,
											"end": 13009,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12935,
											"end": 13009,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12822,
											"end": 13023,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 12822,
											"end": 13023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13069,
											"end": 13070,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13053,
											"end": 13067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13053,
											"end": 13067,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13053,
											"end": 13067,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13071,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13036,
											"end": 13072,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13036,
											"end": 13072,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11987,
											"end": 13339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13344,
											"end": 13472,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 13344,
											"end": 13472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13420,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13420,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13420,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13432,
											"end": 13443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13432,
											"end": 13443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13432,
											"end": 13443,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 13429,
											"end": 13466,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13429,
											"end": 13466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 13429,
											"end": 13466,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 13446,
											"end": 13464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13477,
											"end": 13661,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 13477,
											"end": 13661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13553,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13600,
											"end": 13602,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13588,
											"end": 13597,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13579,
											"end": 13586,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13575,
											"end": 13598,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13571,
											"end": 13603,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 13568,
											"end": 13620,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13568,
											"end": 13620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 13568,
											"end": 13620,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13616,
											"end": 13617,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13613,
											"end": 13614,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13606,
											"end": 13618,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13568,
											"end": 13620,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 13568,
											"end": 13620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13639,
											"end": 13655,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13639,
											"end": 13655,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13477,
											"end": 13661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13477,
											"end": 13661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14002,
											"end": 14127,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 14002,
											"end": 14127,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14067,
											"end": 14076,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14067,
											"end": 14076,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14067,
											"end": 14076,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14088,
											"end": 14098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14088,
											"end": 14098,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14088,
											"end": 14098,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14085,
											"end": 14121,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14085,
											"end": 14121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 14085,
											"end": 14121,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14101,
											"end": 14119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 14101,
											"end": 14119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 14101,
											"end": 14119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14726,
											"end": 14861,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 14726,
											"end": 14861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14765,
											"end": 14768,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14786,
											"end": 14803,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14786,
											"end": 14803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14786,
											"end": 14803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14783,
											"end": 14826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 14783,
											"end": 14826,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14806,
											"end": 14824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 14806,
											"end": 14824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 14806,
											"end": 14824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14806,
											"end": 14824,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 14806,
											"end": 14824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14853,
											"end": 14854,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14842,
											"end": 14855,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14842,
											"end": 14855,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14726,
											"end": 14861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								},
								"1": {
									".code": [
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 398,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 398,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 398,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "PUSHSIZE",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "CODESIZE",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "PUSHSIZE",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 398,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 398,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 252,
											"end": 398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 252,
											"end": 398,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 455,
											"end": 506,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 446,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 446,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1392,
											"end": 1404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1373,
											"end": 1405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1405,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1373,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 330,
											"end": 346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 330,
											"end": 390,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 330,
											"end": 390,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 330,
											"end": 390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 330,
											"end": 390,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 330,
											"end": 390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 330,
											"end": 390,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 330,
											"end": 390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 330,
											"end": 390,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 330,
											"end": 390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 330,
											"end": 390,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 330,
											"end": 390,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 330,
											"end": 390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 330,
											"end": 390,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 304,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 14,
											"end": 304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 84,
											"end": 90,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 139,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 125,
											"end": 134,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 116,
											"end": 123,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 112,
											"end": 135,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 108,
											"end": 140,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 105,
											"end": 157,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 105,
											"end": 157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 105,
											"end": 157,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 153,
											"end": 154,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 151,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 143,
											"end": 155,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 105,
											"end": 157,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 105,
											"end": 157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 179,
											"end": 195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 179,
											"end": 195,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 224,
											"end": 255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 224,
											"end": 255,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 214,
											"end": 256,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 214,
											"end": 256,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 204,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 204,
											"end": 274,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 268,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 260,
											"end": 272,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 204,
											"end": 274,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 204,
											"end": 274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 293,
											"end": 298,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14,
											"end": 304,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 309,
											"end": 512,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 309,
											"end": 512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH #[$]",
											"source": 7,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH [$]",
											"source": 7,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "RETURN",
											"source": 7
										}
									],
									".data": {
										"0": {
											".auxdata": "a264697066735822122060b739706bc2ffe4187c03f614cd620b154157954b354e2990d1d9f2654d9fb864736f6c63430008140033",
											".code": [
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH",
													"source": 7,
													"value": "80"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "CALLVALUE",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "ISZERO",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "1"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "REVERT",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "tag",
													"source": 7,
													"value": "1"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH",
													"source": 7,
													"value": "4"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "CALLDATASIZE",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "LT",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "2"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "CALLDATALOAD",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH",
													"source": 7,
													"value": "E0"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "SHR",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH",
													"source": 7,
													"value": "2CA835A8"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "EQ",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "3"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH",
													"source": 7,
													"value": "715018A6"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "EQ",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "4"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH",
													"source": 7,
													"value": "8DA5CB5B"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "EQ",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "5"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH",
													"source": 7,
													"value": "BD75AAE8"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "EQ",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "6"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH",
													"source": 7,
													"value": "F2FDE38B"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "EQ",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "7"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "tag",
													"source": 7,
													"value": "2"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 150,
													"end": 992,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 150,
													"end": 992,
													"name": "REVERT",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"name": "tag",
													"source": 7,
													"value": "3"
												},
												{
													"begin": 406,
													"end": 609,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "8"
												},
												{
													"begin": 406,
													"end": 609,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "9"
												},
												{
													"begin": 406,
													"end": 609,
													"name": "CALLDATASIZE",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"name": "PUSH",
													"source": 7,
													"value": "4"
												},
												{
													"begin": 406,
													"end": 609,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "10"
												},
												{
													"begin": 406,
													"end": 609,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"name": "tag",
													"source": 7,
													"value": "9"
												},
												{
													"begin": 406,
													"end": 609,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "11"
												},
												{
													"begin": 406,
													"end": 609,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"name": "tag",
													"source": 7,
													"value": "8"
												},
												{
													"begin": 406,
													"end": 609,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 406,
													"end": 609,
													"name": "MLOAD",
													"source": 7
												},
												{
													"begin": 616,
													"end": 630,
													"name": "SWAP1",
													"source": 9
												},
												{
													"begin": 616,
													"end": 630,
													"name": "ISZERO",
													"source": 9
												},
												{
													"begin": 609,
													"end": 631,
													"name": "ISZERO",
													"source": 9
												},
												{
													"begin": 591,
													"end": 632,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 591,
													"end": 632,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 579,
													"end": 581,
													"name": "PUSH",
													"source": 9,
													"value": "20"
												},
												{
													"begin": 564,
													"end": 582,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 406,
													"end": 609,
													"name": "tag",
													"source": 7,
													"value": "12"
												},
												{
													"begin": 406,
													"end": 609,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 406,
													"end": 609,
													"name": "MLOAD",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"name": "SWAP2",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"name": "SUB",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"name": "RETURN",
													"source": 7
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "tag",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "14"
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "15"
												},
												{
													"begin": 2293,
													"end": 2394,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "tag",
													"source": 0,
													"value": "14"
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "STOP",
													"source": 0
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "tag",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1684,
													"end": 1691,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 789,
													"end": 840,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 789,
													"end": 840,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 777,
													"end": 779,
													"name": "PUSH",
													"source": 9,
													"value": "20"
												},
												{
													"begin": 762,
													"end": 780,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "12"
												},
												{
													"begin": 643,
													"end": 846,
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 617,
													"end": 890,
													"name": "tag",
													"source": 7,
													"value": "6"
												},
												{
													"begin": 617,
													"end": 890,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 617,
													"end": 890,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 617,
													"end": 890,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "21"
												},
												{
													"begin": 617,
													"end": 890,
													"name": "CALLDATASIZE",
													"source": 7
												},
												{
													"begin": 617,
													"end": 890,
													"name": "PUSH",
													"source": 7,
													"value": "4"
												},
												{
													"begin": 617,
													"end": 890,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "10"
												},
												{
													"begin": 617,
													"end": 890,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 617,
													"end": 890,
													"name": "tag",
													"source": 7,
													"value": "21"
												},
												{
													"begin": 617,
													"end": 890,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 617,
													"end": 890,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "22"
												},
												{
													"begin": 617,
													"end": 890,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 617,
													"end": 890,
													"name": "tag",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 617,
													"end": 890,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 617,
													"end": 890,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 617,
													"end": 890,
													"name": "MLOAD",
													"source": 7
												},
												{
													"begin": 997,
													"end": 1022,
													"name": "SWAP1",
													"source": 9
												},
												{
													"begin": 997,
													"end": 1022,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 997,
													"end": 1022,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 985,
													"end": 987,
													"name": "PUSH",
													"source": 9,
													"value": "20"
												},
												{
													"begin": 970,
													"end": 988,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 617,
													"end": 890,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "12"
												},
												{
													"begin": 851,
													"end": 1028,
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "tag",
													"source": 0,
													"value": "7"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "14"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "26"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "27"
												},
												{
													"begin": 2543,
													"end": 2758,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "tag",
													"source": 0,
													"value": "26"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "28"
												},
												{
													"begin": 2543,
													"end": 2758,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 406,
													"end": 609,
													"name": "tag",
													"source": 7,
													"value": "11"
												},
												{
													"begin": 406,
													"end": 609,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 521,
													"end": 525,
													"name": "PUSH",
													"source": 7,
													"value": "1"
												},
												{
													"begin": 406,
													"end": 609,
													"name": "tag",
													"source": 7,
													"value": "29"
												},
												{
													"begin": 406,
													"end": 609,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"name": "SWAP3",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"name": "SWAP2",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 406,
													"end": 609,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "tag",
													"source": 0,
													"value": "15"
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "31"
												},
												{
													"begin": 1531,
													"end": 1542,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "32"
												},
												{
													"begin": 1531,
													"end": 1544,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "tag",
													"source": 0,
													"value": "31"
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2357,
													"end": 2387,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "34"
												},
												{
													"begin": 2384,
													"end": 2385,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2357,
													"end": 2375,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "35"
												},
												{
													"begin": 2357,
													"end": 2387,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 2357,
													"end": 2387,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "34"
												},
												{
													"begin": 2357,
													"end": 2387,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2293,
													"end": 2394,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 617,
													"end": 890,
													"name": "tag",
													"source": 7,
													"value": "22"
												},
												{
													"begin": 617,
													"end": 890,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 829,
													"end": 830,
													"name": "PUSH",
													"source": 7,
													"value": "1"
												},
												{
													"begin": 822,
													"end": 830,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "29"
												},
												{
													"begin": 822,
													"end": 830,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "tag",
													"source": 0,
													"value": "28"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "41"
												},
												{
													"begin": 1531,
													"end": 1542,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "32"
												},
												{
													"begin": 1531,
													"end": 1544,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "tag",
													"source": 0,
													"value": "41"
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 2627,
													"end": 2649,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 2627,
													"end": 2649,
													"modifierDepth": 1,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 2623,
													"end": 2714,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "43"
												},
												{
													"begin": 2623,
													"end": 2714,
													"modifierDepth": 1,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1E4FBDF7"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 2700,
													"end": 2701,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 789,
													"end": 840,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 762,
													"end": 780,
													"name": "PUSH",
													"source": 9,
													"value": "24"
												},
												{
													"begin": 762,
													"end": 780,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "44"
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 2623,
													"end": 2714,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "43"
												},
												{
													"begin": 2623,
													"end": 2714,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2723,
													"end": 2751,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "45"
												},
												{
													"begin": 2742,
													"end": 2750,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 2723,
													"end": 2741,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "35"
												},
												{
													"begin": 2723,
													"end": 2751,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 2723,
													"end": 2751,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "45"
												},
												{
													"begin": 2723,
													"end": 2751,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1796,
													"end": 1958,
													"name": "tag",
													"source": 0,
													"value": "32"
												},
												{
													"begin": 1796,
													"end": 1958,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1684,
													"end": 1691,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 5
												},
												{
													"begin": 1855,
													"end": 1878,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 1851,
													"end": 1952,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "34"
												},
												{
													"begin": 1851,
													"end": 1952,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "118CDAA7"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 5
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 789,
													"end": 840,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 762,
													"end": 780,
													"name": "PUSH",
													"source": 9,
													"value": "24"
												},
												{
													"begin": 762,
													"end": 780,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "44"
												},
												{
													"begin": 643,
													"end": 846,
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "tag",
													"source": 0,
													"value": "35"
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2985,
													"end": 3001,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "AND",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "OR",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP5",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SSTORE",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP3",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP3",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 0,
													"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 2985,
													"end": 3001,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "LOG3",
													"source": 0
												},
												{
													"begin": 2975,
													"end": 3099,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 2912,
													"end": 3099,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 14,
													"end": 187,
													"name": "tag",
													"source": 9,
													"value": "55"
												},
												{
													"begin": 14,
													"end": 187,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 82,
													"end": 102,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 82,
													"end": 102,
													"name": "CALLDATALOAD",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 131,
													"end": 162,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 131,
													"end": 162,
													"name": "AND",
													"source": 9
												},
												{
													"begin": 121,
													"end": 163,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 121,
													"end": 163,
													"name": "EQ",
													"source": 9
												},
												{
													"begin": 111,
													"end": 181,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "58"
												},
												{
													"begin": 111,
													"end": 181,
													"name": "JUMPI",
													"source": 9
												},
												{
													"begin": 177,
													"end": 178,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 174,
													"end": 175,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 167,
													"end": 179,
													"name": "REVERT",
													"source": 9
												},
												{
													"begin": 111,
													"end": 181,
													"name": "tag",
													"source": 9,
													"value": "58"
												},
												{
													"begin": 111,
													"end": 181,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 14,
													"end": 187,
													"name": "SWAP2",
													"source": 9
												},
												{
													"begin": 14,
													"end": 187,
													"name": "SWAP1",
													"source": 9
												},
												{
													"begin": 14,
													"end": 187,
													"name": "POP",
													"source": 9
												},
												{
													"begin": 14,
													"end": 187,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 192,
													"end": 446,
													"name": "tag",
													"source": 9,
													"value": "10"
												},
												{
													"begin": 192,
													"end": 446,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 260,
													"end": 266,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 268,
													"end": 274,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 321,
													"end": 323,
													"name": "PUSH",
													"source": 9,
													"value": "40"
												},
												{
													"begin": 309,
													"end": 318,
													"name": "DUP4",
													"source": 9
												},
												{
													"begin": 300,
													"end": 307,
													"name": "DUP6",
													"source": 9
												},
												{
													"begin": 296,
													"end": 319,
													"name": "SUB",
													"source": 9
												},
												{
													"begin": 292,
													"end": 324,
													"name": "SLT",
													"source": 9
												},
												{
													"begin": 289,
													"end": 341,
													"name": "ISZERO",
													"source": 9
												},
												{
													"begin": 289,
													"end": 341,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "60"
												},
												{
													"begin": 289,
													"end": 341,
													"name": "JUMPI",
													"source": 9
												},
												{
													"begin": 337,
													"end": 338,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 334,
													"end": 335,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 327,
													"end": 339,
													"name": "REVERT",
													"source": 9
												},
												{
													"begin": 289,
													"end": 341,
													"name": "tag",
													"source": 9,
													"value": "60"
												},
												{
													"begin": 289,
													"end": 341,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 360,
													"end": 389,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "61"
												},
												{
													"begin": 379,
													"end": 388,
													"name": "DUP4",
													"source": 9
												},
												{
													"begin": 360,
													"end": 389,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "55"
												},
												{
													"begin": 360,
													"end": 389,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 360,
													"end": 389,
													"name": "tag",
													"source": 9,
													"value": "61"
												},
												{
													"begin": 360,
													"end": 389,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 350,
													"end": 389,
													"name": "SWAP5",
													"source": 9
												},
												{
													"begin": 436,
													"end": 438,
													"name": "PUSH",
													"source": 9,
													"value": "20"
												},
												{
													"begin": 421,
													"end": 439,
													"name": "SWAP4",
													"source": 9
												},
												{
													"begin": 421,
													"end": 439,
													"name": "SWAP1",
													"source": 9
												},
												{
													"begin": 421,
													"end": 439,
													"name": "SWAP4",
													"source": 9
												},
												{
													"begin": 421,
													"end": 439,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 408,
													"end": 440,
													"name": "CALLDATALOAD",
													"source": 9
												},
												{
													"begin": 408,
													"end": 440,
													"name": "SWAP4",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 192,
													"end": 446,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 1033,
													"end": 1219,
													"name": "tag",
													"source": 9,
													"value": "27"
												},
												{
													"begin": 1033,
													"end": 1219,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1092,
													"end": 1098,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 1145,
													"end": 1147,
													"name": "PUSH",
													"source": 9,
													"value": "20"
												},
												{
													"begin": 1133,
													"end": 1142,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 1124,
													"end": 1131,
													"name": "DUP5",
													"source": 9
												},
												{
													"begin": 1120,
													"end": 1143,
													"name": "SUB",
													"source": 9
												},
												{
													"begin": 1116,
													"end": 1148,
													"name": "SLT",
													"source": 9
												},
												{
													"begin": 1113,
													"end": 1165,
													"name": "ISZERO",
													"source": 9
												},
												{
													"begin": 1113,
													"end": 1165,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "66"
												},
												{
													"begin": 1113,
													"end": 1165,
													"name": "JUMPI",
													"source": 9
												},
												{
													"begin": 1161,
													"end": 1162,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 1158,
													"end": 1159,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 1151,
													"end": 1163,
													"name": "REVERT",
													"source": 9
												},
												{
													"begin": 1113,
													"end": 1165,
													"name": "tag",
													"source": 9,
													"value": "66"
												},
												{
													"begin": 1113,
													"end": 1165,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1184,
													"end": 1213,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "67"
												},
												{
													"begin": 1203,
													"end": 1212,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 1184,
													"end": 1213,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "55"
												},
												{
													"begin": 1184,
													"end": 1213,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 1184,
													"end": 1213,
													"name": "tag",
													"source": 9,
													"value": "67"
												},
												{
													"begin": 1184,
													"end": 1213,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1174,
													"end": 1213,
													"name": "SWAP4",
													"source": 9
												},
												{
													"begin": 1033,
													"end": 1219,
													"name": "SWAP3",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 1033,
													"end": 1219,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 9
												}
											]
										}
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Bias.sol",
								"contracts/CredentialVerifier.sol",
								"contracts/IGitcoinResolver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_lastJoinTime(address)": "68229099",
							"_rewards()": "a6c2da4c",
							"_topics(uint256)": "9a383dfd",
							"_voterCounts(uint256)": "93ad4aca",
							"_votes(uint256,uint256)": "63b6ad97",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"claimRewards(uint256)": "0962ef79",
							"create(string,string,uint256,uint256,bytes32)": "0a05b17f",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"topicAt(uint256)": "cda411be",
							"topicTotal()": "f7cb2657",
							"topics(uint256,uint256)": "ed2e39a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"updateRewards(uint256)": "b1e95e94",
							"vote(uint256,uint256,bytes32)": "8c881eeb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topicId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"choice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"Vote\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_lastJoinTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_topics\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"funds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_voterCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_votes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"topicId\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"funds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gitcoinPassUid\",\"type\":\"bytes32\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"topicAt\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"funds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"internalType\":\"struct BiasProtocol.Topic\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topicTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"topics\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"funds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"internalType\":\"struct BiasProtocol.Topic[]\",\"name\":\"result\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewards_\",\"type\":\"uint256\"}],\"name\":\"updateRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"topicId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteFor\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gitcoinPassUid\",\"type\":\"bytes32\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"claimRewards(uint256)\":{\"details\":\"A successful votings could redeem the funds and receive a 10% bonus\"},\"create(string,string,uint256,uint256,bytes32)\":{\"details\":\"The fund must be more than 10% voter rewards; The creators could get refunds when the topic is fulfilled. It is designed to decrease outdated topics and the creators should choose the participants numebr wisely.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateRewards(uint256)\":{\"details\":\"the owner could be migrated to the relayer of inflation control\"},\"vote(uint256,uint256,bytes32)\":{\"details\":\"Each single user could vote once per day.\"}},\"stateVariables\":{\"_living\":{\"details\":\"Each user is allowed to create one live topic at the time. Once the topic is fulfilled the user could create the next topic. The purpose is to decrease verbose topics.\"},\"_rewards\":{\"details\":\"Earnings each vote\"},\"_voterCounts\":{\"details\":\"Voter counts storage\"},\"_votes\":{\"details\":\"Votes result storage\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Bias.sol\":\"BiasProtocol\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"contracts/Bias.sol\":{\"keccak256\":\"0x27439cff8930e8b55cd460c8d0e6a39d8f54bb84a79e8ba87111a201a1aab7e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26930b3c8cc8dc5cf521e29225af61f4990d7620d22654a000a5789f60d566bd\",\"dweb:/ipfs/QmdLr93ttyx9z4aqRF8JZ6AfyCXRV1rDHvnn5GT2CeQ3hV\"]},\"contracts/CredentialVerifier.sol\":{\"keccak256\":\"0xec20c5cfb3dc725c2f2a57fbe56d70a63ee746504220b57e4c18faf9eb8b03dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8074678a3d6e29705c4a87931d87eedc1ea08fead9922734a24844d83c761a\",\"dweb:/ipfs/QmZ4y5BBfhRZtDn178HLkxE4R4L4eWbwNTXRNTGAajFVmF\"]},\"contracts/IGitcoinResolver.sol\":{\"keccak256\":\"0x9b86790c757993d55b63bbcb11bb7fc7e131b8e804b64a3a8fa14a7f7c2a29bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f77dca95901897fe09f35ad5f2e9c3b2533d14b3791dcad0b007e48fccaf1a98\",\"dweb:/ipfs/QmTBGy9gwMF6HWfXRo6U9hq8FFaqQ67YiHzJFabCtmRYfK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/Bias.sol:BiasProtocol",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/Bias.sol:BiasProtocol",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/Bias.sol:BiasProtocol",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/Bias.sol:BiasProtocol",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/Bias.sol:BiasProtocol",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/Bias.sol:BiasProtocol",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 964,
								"contract": "contracts/Bias.sol:BiasProtocol",
								"label": "_rewards",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 968,
								"contract": "contracts/Bias.sol:BiasProtocol",
								"label": "_topics",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_struct(Topic)958_storage)dyn_storage"
							},
							{
								"astId": 975,
								"contract": "contracts/Bias.sol:BiasProtocol",
								"label": "_votes",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 980,
								"contract": "contracts/Bias.sol:BiasProtocol",
								"label": "_voterCounts",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 985,
								"contract": "contracts/Bias.sol:BiasProtocol",
								"label": "_living",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 988,
								"contract": "contracts/Bias.sol:BiasProtocol",
								"label": "_credentialVerifier",
								"offset": 0,
								"slot": "11",
								"type": "t_contract(CredentialVerifier)1414"
							},
							{
								"astId": 992,
								"contract": "contracts/Bias.sol:BiasProtocol",
								"label": "_lastJoinTime",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Topic)958_storage)dyn_storage": {
								"base": "t_struct(Topic)958_storage",
								"encoding": "dynamic_array",
								"label": "struct BiasProtocol.Topic[]",
								"numberOfBytes": "32"
							},
							"t_contract(CredentialVerifier)1414": {
								"encoding": "inplace",
								"label": "contract CredentialVerifier",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Topic)958_storage": {
								"encoding": "inplace",
								"label": "struct BiasProtocol.Topic",
								"members": [
									{
										"astId": 946,
										"contract": "contracts/Bias.sol:BiasProtocol",
										"label": "creator",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 948,
										"contract": "contracts/Bias.sol:BiasProtocol",
										"label": "createdAt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 950,
										"contract": "contracts/Bias.sol:BiasProtocol",
										"label": "title",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 952,
										"contract": "contracts/Bias.sol:BiasProtocol",
										"label": "content",
										"offset": 0,
										"slot": "3",
										"type": "t_string_storage"
									},
									{
										"astId": 954,
										"contract": "contracts/Bias.sol:BiasProtocol",
										"label": "funds",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 957,
										"contract": "contracts/Bias.sol:BiasProtocol",
										"label": "max",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CredentialVerifier.sol": {
				"CredentialVerifier": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "gitcoinResolverAddress_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "uid",
									"type": "bytes32"
								}
							],
							"name": "calcWeight",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "uid",
									"type": "bytes32"
								}
							],
							"name": "verifyGitcionPass",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CredentialVerifier.sol\":150:992  contract CredentialVerifier is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CredentialVerifier.sol\":252:398  constructor(address gitcoinResolverAddress_) Ownable(_msgSender()) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":455:506   */\n  mstore\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/CredentialVerifier.sol\":330:346  _gitcoinResolver */\n  0x01\n    /* \"contracts/CredentialVerifier.sol\":330:390  _gitcoinResolver = IGitcoinResolver(gitcoinResolverAddress_) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/CredentialVerifier.sol\":150:992  contract CredentialVerifier is Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_20:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_21:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:512   */\ntag_18:\n    /* \"contracts/CredentialVerifier.sol\":150:992  contract CredentialVerifier is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CredentialVerifier.sol\":150:992  contract CredentialVerifier is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2ca835a8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbd75aae8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CredentialVerifier.sol\":406:609  function verifyGitcionPass(address owner, bytes32 uid) public returns (bool) {... */\n    tag_3:\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":616:630   */\n      swap1\n      iszero\n        /* \"#utility.yul\":609:631   */\n      iszero\n        /* \"#utility.yul\":591:632   */\n      dup2\n      mstore\n        /* \"#utility.yul\":579:581   */\n      0x20\n        /* \"#utility.yul\":564:582   */\n      add\n        /* \"contracts/CredentialVerifier.sol\":406:609  function verifyGitcionPass(address owner, bytes32 uid) public returns (bool) {... */\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":789:840   */\n      dup2\n      mstore\n        /* \"#utility.yul\":777:779   */\n      0x20\n        /* \"#utility.yul\":762:780   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_12\n        /* \"#utility.yul\":643:846   */\n      jump\n        /* \"contracts/CredentialVerifier.sol\":617:890  function calcWeight(address owner, bytes32 uid) public returns (uint) {... */\n    tag_6:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_21:\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":997:1022   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":985:987   */\n      0x20\n        /* \"#utility.yul\":970:988   */\n      add\n        /* \"contracts/CredentialVerifier.sol\":617:890  function calcWeight(address owner, bytes32 uid) public returns (uint) {... */\n      tag_12\n        /* \"#utility.yul\":851:1028   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      tag_14\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n        /* \"contracts/CredentialVerifier.sol\":406:609  function verifyGitcionPass(address owner, bytes32 uid) public returns (bool) {... */\n    tag_11:\n        /* \"contracts/CredentialVerifier.sol\":521:525  true */\n      0x01\n        /* \"contracts/CredentialVerifier.sol\":406:609  function verifyGitcionPass(address owner, bytes32 uid) public returns (bool) {... */\n    tag_29:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_31\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_32\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_34\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CredentialVerifier.sol\":617:890  function calcWeight(address owner, bytes32 uid) public returns (uint) {... */\n    tag_22:\n        /* \"contracts/CredentialVerifier.sol\":829:830  1 */\n      0x01\n        /* \"contracts/CredentialVerifier.sol\":822:830  return 1 */\n      jump(tag_29)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_32\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_41:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_43\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":789:840   */\n      mstore\n        /* \"#utility.yul\":762:780   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_34\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":789:840   */\n      mstore\n        /* \"#utility.yul\":762:780   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_44\n        /* \"#utility.yul\":643:846   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_55:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_58\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_58:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_10:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_60:\n        /* \"#utility.yul\":360:389   */\n      tag_61\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_55\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":1033:1219   */\n    tag_27:\n        /* \"#utility.yul\":1092:1098   */\n      0x00\n        /* \"#utility.yul\":1145:1147   */\n      0x20\n        /* \"#utility.yul\":1133:1142   */\n      dup3\n        /* \"#utility.yul\":1124:1131   */\n      dup5\n        /* \"#utility.yul\":1120:1143   */\n      sub\n        /* \"#utility.yul\":1116:1148   */\n      slt\n        /* \"#utility.yul\":1113:1165   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1161:1162   */\n      0x00\n        /* \"#utility.yul\":1158:1159   */\n      dup1\n        /* \"#utility.yul\":1151:1163   */\n      revert\n        /* \"#utility.yul\":1113:1165   */\n    tag_66:\n        /* \"#utility.yul\":1184:1213   */\n      tag_67\n        /* \"#utility.yul\":1203:1212   */\n      dup3\n        /* \"#utility.yul\":1184:1213   */\n      tag_55\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1174:1213   */\n      swap4\n        /* \"#utility.yul\":1033:1219   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122060b739706bc2ffe4187c03f614cd620b154157954b354e2990d1d9f2654d9fb864736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1383": {
									"entryPoint": null,
									"id": 1383,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 130,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:514:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:9"
															},
															"nodeType": "YulIf",
															"src": "105:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:9"
															},
															"nodeType": "YulIf",
															"src": "204:70:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:9",
														"type": ""
													}
												],
												"src": "14:290:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "410:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "420:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "428:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "493:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "498:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "489:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "489:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "502:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "473:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "455:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "455:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "379:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "390:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "401:4:9",
														"type": ""
													}
												],
												"src": "309:203:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161035d38038061035d83398101604081905261002e916100d1565b338061005357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005c81610082565b50600180546001600160a01b0319166001600160a01b03929092169190911790556100fe565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100e1575f80fd5b81516001600160a01b03811681146100f7575f80fd5b9392505050565b6102528061010b5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80632ca835a814610059578063715018a6146100815780638da5cb5b1461008b578063bd75aae8146100a5578063f2fde38b146100c6575b5f80fd5b61006c6100673660046101d4565b6100d9565b60405190151581526020015b60405180910390f35b6100896100e2565b005b5f546040516001600160a01b039091168152602001610078565b6100b86100b33660046101d4565b6100f5565b604051908152602001610078565b6100896100d43660046101fc565b6100fc565b60015b92915050565b6100ea61013e565b6100f35f61016a565b565b60016100dc565b61010461013e565b6001600160a01b03811661013257604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61013b8161016a565b50565b5f546001600160a01b031633146100f35760405163118cdaa760e01b8152336004820152602401610129565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146101cf575f80fd5b919050565b5f80604083850312156101e5575f80fd5b6101ee836101b9565b946020939093013593505050565b5f6020828403121561020c575f80fd5b610215826101b9565b939250505056fea264697066735822122060b739706bc2ffe4187c03f614cd620b154157954b354e2990d1d9f2654d9fb864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x35D CODESIZE SUB DUP1 PUSH2 0x35D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xD1 JUMP JUMPDEST CALLER DUP1 PUSH2 0x53 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C DUP2 PUSH2 0x82 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xFE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x252 DUP1 PUSH2 0x10B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2CA835A8 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xBD75AAE8 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x67 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0xE2 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0xF5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0x89 PUSH2 0xD4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FC JUMP JUMPDEST PUSH2 0xFC JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEA PUSH2 0x13E JUMP JUMPDEST PUSH2 0xF3 PUSH0 PUSH2 0x16A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH2 0xDC JUMP JUMPDEST PUSH2 0x104 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x132 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13B DUP2 PUSH2 0x16A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x129 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1EE DUP4 PUSH2 0x1B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x215 DUP3 PUSH2 0x1B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xB7 CODECOPY PUSH17 0x6BC2FFE4187C03F614CD620B154157954B CALLDATALOAD 0x4E 0x29 SWAP1 0xD1 0xD9 CALLCODE PUSH6 0x4D9FB864736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "150:842:7:-:0;;;252:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:5;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:9;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;330:16:7::1;:60:::0;;-1:-1:-1;;;;;;330:60:7::1;-1:-1:-1::0;;;;;330:60:7;;;::::1;::::0;;;::::1;::::0;;150:842;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:9:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:9;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:9:o;309:203::-;150:842:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 318,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 362,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calcWeight_1413": {
									"entryPoint": 245,
									"id": 1413,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 226,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 252,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyGitcionPass_1395": {
									"entryPoint": 217,
									"id": 1395,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes32": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1221:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:9"
															},
															"nodeType": "YulIf",
															"src": "111:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:9",
														"type": ""
													}
												],
												"src": "14:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:9"
															},
															"nodeType": "YulIf",
															"src": "289:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:9",
														"type": ""
													}
												],
												"src": "192:254:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "556:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "568:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "564:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "564:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "556:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "598:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "623:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "616:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "616:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "609:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "609:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "591:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "591:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "591:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "515:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "526:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "537:4:9",
														"type": ""
													}
												],
												"src": "451:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "744:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "754:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "766:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "777:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "754:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "796:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "811:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "827:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "832:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "823:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "823:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "836:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "819:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "819:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "807:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "789:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "789:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "789:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "713:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "724:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "735:4:9",
														"type": ""
													}
												],
												"src": "643:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "952:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "962:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "974:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "985:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "970:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "962:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1004:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1015:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "997:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "921:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "932:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "943:4:9",
														"type": ""
													}
												],
												"src": "851:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1103:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1149:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1158:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1161:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1151:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1151:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1151:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1124:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1133:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1120:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1120:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1145:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1116:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1116:32:9"
															},
															"nodeType": "YulIf",
															"src": "1113:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1174:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1203:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1184:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1184:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1174:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1069:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1080:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1092:6:9",
														"type": ""
													}
												],
												"src": "1033:186:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c80632ca835a814610059578063715018a6146100815780638da5cb5b1461008b578063bd75aae8146100a5578063f2fde38b146100c6575b5f80fd5b61006c6100673660046101d4565b6100d9565b60405190151581526020015b60405180910390f35b6100896100e2565b005b5f546040516001600160a01b039091168152602001610078565b6100b86100b33660046101d4565b6100f5565b604051908152602001610078565b6100896100d43660046101fc565b6100fc565b60015b92915050565b6100ea61013e565b6100f35f61016a565b565b60016100dc565b61010461013e565b6001600160a01b03811661013257604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61013b8161016a565b50565b5f546001600160a01b031633146100f35760405163118cdaa760e01b8152336004820152602401610129565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146101cf575f80fd5b919050565b5f80604083850312156101e5575f80fd5b6101ee836101b9565b946020939093013593505050565b5f6020828403121561020c575f80fd5b610215826101b9565b939250505056fea264697066735822122060b739706bc2ffe4187c03f614cd620b154157954b354e2990d1d9f2654d9fb864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2CA835A8 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xBD75AAE8 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x67 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0xE2 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0xF5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0x89 PUSH2 0xD4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FC JUMP JUMPDEST PUSH2 0xFC JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEA PUSH2 0x13E JUMP JUMPDEST PUSH2 0xF3 PUSH0 PUSH2 0x16A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH2 0xDC JUMP JUMPDEST PUSH2 0x104 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x132 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13B DUP2 PUSH2 0x16A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x129 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1EE DUP4 PUSH2 0x1B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x215 DUP3 PUSH2 0x1B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xB7 CODECOPY PUSH17 0x6BC2FFE4187C03F614CD620B154157954B CALLDATALOAD 0x4E 0x29 SWAP1 0xD1 0xD9 CALLCODE PUSH6 0x4D9FB864736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "150:842:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;406:203;;;;;;:::i;:::-;;:::i;:::-;;;616:14:9;;609:22;591:41;;579:2;564:18;406:203:7;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;789:51:9;;777:2;762:18;1638:85:0;643:203:9;617:273:7;;;;;;:::i;:::-;;:::i;:::-;;;997:25:9;;;985:2;970:18;617:273:7;851:177:9;2543:215:0;;;;;;:::i;:::-;;:::i;406:203:7:-;521:4;406:203;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;617:273:7:-;829:1;822:8;;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;789:51:9::0;762:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;789:51:9;762:18;;1901:40:0;643:203:9;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:173:9:-;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:9:o;1033:186::-;1092:6;1145:2;1133:9;1124:7;1120:23;1116:32;1113:52;;;1161:1;1158;1151:12;1113:52;1184:29;1203:9;1184:29;:::i;:::-;1174:39;1033:186;-1:-1:-1;;;1033:186:9:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "118800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"calcWeight(address,bytes32)": "447",
								"owner()": "2321",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28395",
								"verifyGitcionPass(address,bytes32)": "365"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 150,
									"end": 992,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 150,
									"end": 992,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 150,
									"end": 992,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 398,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 398,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 398,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 398,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 398,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 252,
									"end": 398,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 252,
									"end": 398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 252,
									"end": 398,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 252,
									"end": 398,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 735,
									"end": 745,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 330,
									"end": 346,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 330,
									"end": 390,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 330,
									"end": 390,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 330,
									"end": 390,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 330,
									"end": 390,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 330,
									"end": 390,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 330,
									"end": 390,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 330,
									"end": 390,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 330,
									"end": 390,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 330,
									"end": 390,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 330,
									"end": 390,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 330,
									"end": 390,
									"modifierDepth": 1,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 330,
									"end": 390,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 330,
									"end": 390,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 150,
									"end": 992,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 150,
									"end": 992,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 309,
									"end": 512,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 309,
									"end": 512,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 150,
									"end": 992,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 992,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 150,
									"end": 992,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 992,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 992,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 150,
									"end": 992,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 992,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122060b739706bc2ffe4187c03f614cd620b154157954b354e2990d1d9f2654d9fb864736f6c63430008140033",
									".code": [
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "2CA835A8"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "BD75AAE8"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 150,
											"end": 992,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 406,
											"end": 609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 406,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 406,
											"end": 609,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 406,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 406,
											"end": 609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 406,
											"end": 609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 406,
											"end": 609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 406,
											"end": 609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 406,
											"end": 609,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 616,
											"end": 630,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 616,
											"end": 630,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 609,
											"end": 631,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 591,
											"end": 632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 591,
											"end": 632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 579,
											"end": 581,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 564,
											"end": 582,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 406,
											"end": 609,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 406,
											"end": 609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 406,
											"end": 609,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 789,
											"end": 840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 789,
											"end": 840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 777,
											"end": 779,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 762,
											"end": 780,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 643,
											"end": 846,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 617,
											"end": 890,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 617,
											"end": 890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 617,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 617,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 617,
											"end": 890,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 617,
											"end": 890,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 617,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 617,
											"end": 890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 617,
											"end": 890,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 617,
											"end": 890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 617,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 617,
											"end": 890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 617,
											"end": 890,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 617,
											"end": 890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 617,
											"end": 890,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 890,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 985,
											"end": 987,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 617,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 851,
											"end": 1028,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 406,
											"end": 609,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 406,
											"end": 609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 525,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 406,
											"end": 609,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 406,
											"end": 609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 406,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 890,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 617,
											"end": 890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 829,
											"end": 830,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 822,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 822,
											"end": 830,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 789,
											"end": 840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 762,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 762,
											"end": 780,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 789,
											"end": 840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 762,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 762,
											"end": 780,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 643,
											"end": 846,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 1219,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1033,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1147,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1133,
											"end": 1142,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1131,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1120,
											"end": 1143,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1148,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1165,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1113,
											"end": 1165,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1162,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1163,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1165,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1113,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1203,
											"end": 1212,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1184,
											"end": 1213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 1213,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1184,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1174,
											"end": 1213,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 1219,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1033,
											"end": 1219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Bias.sol",
								"contracts/CredentialVerifier.sol",
								"contracts/IGitcoinResolver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"calcWeight(address,bytes32)": "bd75aae8",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"verifyGitcionPass(address,bytes32)": "2ca835a8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gitcoinResolverAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"calcWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"verifyGitcionPass\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CredentialVerifier.sol\":\"CredentialVerifier\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"contracts/CredentialVerifier.sol\":{\"keccak256\":\"0xec20c5cfb3dc725c2f2a57fbe56d70a63ee746504220b57e4c18faf9eb8b03dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8074678a3d6e29705c4a87931d87eedc1ea08fead9922734a24844d83c761a\",\"dweb:/ipfs/QmZ4y5BBfhRZtDn178HLkxE4R4L4eWbwNTXRNTGAajFVmF\"]},\"contracts/IGitcoinResolver.sol\":{\"keccak256\":\"0x9b86790c757993d55b63bbcb11bb7fc7e131b8e804b64a3a8fa14a7f7c2a29bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f77dca95901897fe09f35ad5f2e9c3b2533d14b3791dcad0b007e48fccaf1a98\",\"dweb:/ipfs/QmTBGy9gwMF6HWfXRo6U9hq8FFaqQ67YiHzJFabCtmRYfK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/CredentialVerifier.sol:CredentialVerifier",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1367,
								"contract": "contracts/CredentialVerifier.sol:CredentialVerifier",
								"label": "_gitcoinResolver",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IGitcoinResolver)1423"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IGitcoinResolver)1423": {
								"encoding": "inplace",
								"label": "contract IGitcoinResolver",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IGitcoinResolver.sol": {
				"IGitcoinResolver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "userAttestations",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/IGitcoinResolver.sol\":60:168  contract IGitcoinResolver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/IGitcoinResolver.sol\":60:168  contract IGitcoinResolver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd757e575\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/IGitcoinResolver.sol\":93:164  mapping(address => mapping(bytes32 => bytes32)) public userAttestations */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      0x00\n      0x20\n      dup2\n      dup2\n      mstore\n      swap3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      mstore\n      swap1\n      dup2\n      mstore\n      keccak256\n      sload\n      dup2\n      jump\n    tag_4:\n      mload(0x40)\n        /* \"#utility.yul\":519:544   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":507:509   */\n      0x20\n        /* \"#utility.yul\":492:510   */\n      add\n        /* \"contracts/IGitcoinResolver.sol\":93:164  mapping(address => mapping(bytes32 => bytes32)) public userAttestations */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"#utility.yul\":14:368   */\n    tag_6:\n        /* \"#utility.yul\":82:88   */\n      0x00\n        /* \"#utility.yul\":90:96   */\n      dup1\n        /* \"#utility.yul\":143:145   */\n      0x40\n        /* \"#utility.yul\":131:140   */\n      dup4\n        /* \"#utility.yul\":122:129   */\n      dup6\n        /* \"#utility.yul\":118:141   */\n      sub\n        /* \"#utility.yul\":114:146   */\n      slt\n        /* \"#utility.yul\":111:163   */\n      iszero\n      tag_12\n      jumpi\n        /* \"#utility.yul\":159:160   */\n      0x00\n        /* \"#utility.yul\":156:157   */\n      dup1\n        /* \"#utility.yul\":149:161   */\n      revert\n        /* \"#utility.yul\":111:163   */\n    tag_12:\n        /* \"#utility.yul\":185:208   */\n      dup3\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":237:268   */\n      dup2\n      and\n        /* \"#utility.yul\":227:269   */\n      dup2\n      eq\n        /* \"#utility.yul\":217:287   */\n      tag_13\n      jumpi\n        /* \"#utility.yul\":283:284   */\n      0x00\n        /* \"#utility.yul\":280:281   */\n      dup1\n        /* \"#utility.yul\":273:285   */\n      revert\n        /* \"#utility.yul\":217:287   */\n    tag_13:\n        /* \"#utility.yul\":306:311   */\n      swap5\n        /* \"#utility.yul\":358:360   */\n      0x20\n        /* \"#utility.yul\":343:361   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":330:362   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:368   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ff8d63076be968ca94ab4b1878d0c89d005cf7b6728660cfabc324a6a11bdcdb64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060c98061001c5f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c8063d757e57514602a575b5f80fd5b604e60353660046060565b5f60208181529281526040808220909352908152205481565b60405190815260200160405180910390f35b5f80604083850312156070575f80fd5b82356001600160a01b03811681146085575f80fd5b94602093909301359350505056fea2646970667358221220ff8d63076be968ca94ab4b1878d0c89d005cf7b6728660cfabc324a6a11bdcdb64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xC9 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD757E575 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4E PUSH1 0x35 CALLDATASIZE PUSH1 0x4 PUSH1 0x60 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH1 0x70 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x85 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT DUP14 PUSH4 0x76BE968 0xCA SWAP5 0xAB 0x4B XOR PUSH25 0xD0C89D005CF7B6728660CFABC324A6A11BDCDB64736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "60:108:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@userAttestations_1422": {
									"entryPoint": null,
									"id": 1422,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_bytes32": {
									"entryPoint": 96,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:552:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "101:267:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "147:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "156:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "159:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "149:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "149:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "149:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "122:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "131:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "118:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "118:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "143:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "114:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:32:9"
															},
															"nodeType": "YulIf",
															"src": "111:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "172:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "198:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "185:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "185:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "176:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "271:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "280:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "283:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "273:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "273:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "273:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "230:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "241:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "256:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "261:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "252:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "252:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "265:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "248:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "248:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "237:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "237:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "227:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "227:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "220:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "220:50:9"
															},
															"nodeType": "YulIf",
															"src": "217:70:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "296:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "306:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "296:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "320:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "347:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "358:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "343:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "343:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "330:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "320:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "59:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "70:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "82:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "90:6:9",
														"type": ""
													}
												],
												"src": "14:354:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "474:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "484:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "496:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "507:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "492:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "484:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "526:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "537:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "519:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "519:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "443:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "454:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "465:4:9",
														"type": ""
													}
												],
												"src": "373:177:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106026575f3560e01c8063d757e57514602a575b5f80fd5b604e60353660046060565b5f60208181529281526040808220909352908152205481565b60405190815260200160405180910390f35b5f80604083850312156070575f80fd5b82356001600160a01b03811681146085575f80fd5b94602093909301359350505056fea2646970667358221220ff8d63076be968ca94ab4b1878d0c89d005cf7b6728660cfabc324a6a11bdcdb64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD757E575 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4E PUSH1 0x35 CALLDATASIZE PUSH1 0x4 PUSH1 0x60 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH1 0x70 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x85 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT DUP14 PUSH4 0x76BE968 0xCA SWAP5 0xAB 0x4B XOR PUSH25 0xD0C89D005CF7B6728660CFABC324A6A11BDCDB64736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "60:108:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;93:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;519:25:9;;;507:2;492:18;93:71:8;;;;;;;14:354:9;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;185:23;;-1:-1:-1;;;;;237:31:9;;227:42;;217:70;;283:1;280;273:12;217:70;306:5;358:2;343:18;;;;330:32;;-1:-1:-1;;;14:354:9:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "40200",
								"executionCost": "91",
								"totalCost": "40291"
							},
							"external": {
								"userAttestations(address,bytes32)": "2534"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 168,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 168,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 168,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 60,
									"end": 168,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 60,
									"end": 168,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 60,
									"end": 168,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 60,
									"end": 168,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 168,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 60,
									"end": 168,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 168,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 60,
									"end": 168,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 60,
									"end": 168,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 168,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 60,
									"end": 168,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 60,
									"end": 168,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 168,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 60,
									"end": 168,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 168,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 168,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 60,
									"end": 168,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 168,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ff8d63076be968ca94ab4b1878d0c89d005cf7b6728660cfabc324a6a11bdcdb64736f6c63430008140033",
									".code": [
										{
											"begin": 60,
											"end": 168,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 168,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 168,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 168,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 168,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 168,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 168,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 168,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 168,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "PUSH",
											"source": 8,
											"value": "D757E575"
										},
										{
											"begin": 60,
											"end": 168,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 168,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 168,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 60,
											"end": 168,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 93,
											"end": 164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 93,
											"end": 164,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 93,
											"end": 164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 93,
											"end": 164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 164,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 164,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 164,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 519,
											"end": 544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 519,
											"end": 544,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 519,
											"end": 544,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 507,
											"end": 509,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 492,
											"end": 510,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 93,
											"end": 164,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 164,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 93,
											"end": 164,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 14,
											"end": 368,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 14,
											"end": 368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 82,
											"end": 88,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 96,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 143,
											"end": 145,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 131,
											"end": 140,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 122,
											"end": 129,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 118,
											"end": 141,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 114,
											"end": 146,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 111,
											"end": 163,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 111,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 111,
											"end": 163,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 159,
											"end": 160,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 157,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 149,
											"end": 161,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 111,
											"end": 163,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 111,
											"end": 163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 185,
											"end": 208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 185,
											"end": 208,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 237,
											"end": 268,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 237,
											"end": 268,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 227,
											"end": 269,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 227,
											"end": 269,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 217,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 217,
											"end": 287,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 283,
											"end": 284,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 273,
											"end": 285,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 217,
											"end": 287,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 217,
											"end": 287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 311,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 358,
											"end": 360,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 361,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 343,
											"end": 361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 343,
											"end": 361,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 343,
											"end": 361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 330,
											"end": 362,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 330,
											"end": 362,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Bias.sol",
								"contracts/CredentialVerifier.sol",
								"contracts/IGitcoinResolver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"userAttestations(address,bytes32)": "d757e575"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"userAttestations\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IGitcoinResolver.sol\":\"IGitcoinResolver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IGitcoinResolver.sol\":{\"keccak256\":\"0x9b86790c757993d55b63bbcb11bb7fc7e131b8e804b64a3a8fa14a7f7c2a29bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f77dca95901897fe09f35ad5f2e9c3b2533d14b3791dcad0b007e48fccaf1a98\",\"dweb:/ipfs/QmTBGy9gwMF6HWfXRo6U9hq8FFaqQ67YiHzJFabCtmRYfK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1422,
								"contract": "contracts/IGitcoinResolver.sol:IGitcoinResolver",
								"label": "userAttestations",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_bytes32,t_bytes32))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_bytes32,t_bytes32))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(bytes32 => bytes32))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_bytes32,t_bytes32)"
							},
							"t_mapping(t_bytes32,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/CredentialVerifier.sol:15:32:\n   |\n15 |     function verifyGitcionPass(address owner, bytes32 uid) public returns (bool) {\n   |                                ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 446,
					"file": "contracts/CredentialVerifier.sol",
					"start": 433
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/CredentialVerifier.sol:15:47:\n   |\n15 |     function verifyGitcionPass(address owner, bytes32 uid) public returns (bool) {\n   |                                               ^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 459,
					"file": "contracts/CredentialVerifier.sol",
					"start": 448
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/CredentialVerifier.sol:21:25:\n   |\n21 |     function calcWeight(address owner, bytes32 uid) public returns (uint) {\n   |                         ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 650,
					"file": "contracts/CredentialVerifier.sol",
					"start": 637
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/CredentialVerifier.sol:21:40:\n   |\n21 |     function calcWeight(address owner, bytes32 uid) public returns (uint) {\n   |                                        ^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 663,
					"file": "contracts/CredentialVerifier.sol",
					"start": 652
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/CredentialVerifier.sol:15:5:\n   |\n15 |     function verifyGitcionPass(address owner, bytes32 uid) public returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 609,
					"file": "contracts/CredentialVerifier.sol",
					"start": 406
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/CredentialVerifier.sol:21:5:\n   |\n21 |     function calcWeight(address owner, bytes32 uid) public returns (uint) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 890,
					"file": "contracts/CredentialVerifier.sol",
					"start": 617
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> contracts/Bias.sol:87:5:\n   |\n87 |     function topicAt(uint index) public returns (Topic memory ) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 2748,
					"file": "contracts/Bias.sol",
					"start": 2648
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							925
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 926,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 925,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 925,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								925
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							925
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 926,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 925,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 925,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								925
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							925
						]
					},
					"id": 926,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 925,
							"linearizedBaseContracts": [
								925
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 925,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 925,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 926,
							"src": "624:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:5"
				},
				"id": 5
			},
			"contracts/Bias.sol": {
				"ast": {
					"absolutePath": "contracts/Bias.sol",
					"exportedSymbols": {
						"BiasProtocol": [
							1358
						],
						"Context": [
							925
						],
						"CredentialVerifier": [
							1414
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"IGitcoinResolver": [
							1423
						],
						"Ownable": [
							147
						]
					},
					"id": 1359,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 927,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 928,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1359,
							"sourceUnit": 800,
							"src": "60:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1359,
							"sourceUnit": 148,
							"src": "117:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/CredentialVerifier.sol",
							"file": "./CredentialVerifier.sol",
							"id": 930,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1359,
							"sourceUnit": 1415,
							"src": "171:34:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 931,
										"name": "ERC20",
										"nameLocations": [
											"234:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "234:5:6"
									},
									"id": 932,
									"nodeType": "InheritanceSpecifier",
									"src": "234:5:6"
								},
								{
									"baseName": {
										"id": 933,
										"name": "Ownable",
										"nameLocations": [
											"241:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "241:7:6"
									},
									"id": 934,
									"nodeType": "InheritanceSpecifier",
									"src": "241:7:6"
								}
							],
							"canonicalName": "BiasProtocol",
							"contractDependencies": [
								1414
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1358,
							"linearizedBaseContracts": [
								1358,
								147,
								799,
								189,
								903,
								877,
								925
							],
							"name": "BiasProtocol",
							"nameLocation": "218:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "6c7eb2743ec28489909706ea440d909129004996be657d36c6e9add778546abf",
									"id": 944,
									"name": "Vote",
									"nameLocation": "261:4:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"indexed": true,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "292:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "276:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"indexed": true,
												"mutability": "mutable",
												"name": "topicId",
												"nameLocation": "321:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "308:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"indexed": false,
												"mutability": "mutable",
												"name": "choice",
												"nameLocation": "344:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "339:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "339:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"indexed": false,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "366:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "361:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "361:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "265:114:6"
									},
									"src": "255:125:6"
								},
								{
									"canonicalName": "BiasProtocol.Topic",
									"id": 958,
									"members": [
										{
											"constant": false,
											"id": 946,
											"mutability": "mutable",
											"name": "creator",
											"nameLocation": "418:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 958,
											"src": "410:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 945,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "410:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 948,
											"mutability": "mutable",
											"name": "createdAt",
											"nameLocation": "441:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 958,
											"src": "436:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 947,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "436:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 950,
											"mutability": "mutable",
											"name": "title",
											"nameLocation": "468:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 958,
											"src": "461:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 949,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "461:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 952,
											"mutability": "mutable",
											"name": "content",
											"nameLocation": "491:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 958,
											"src": "484:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 951,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "484:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 954,
											"mutability": "mutable",
											"name": "funds",
											"nameLocation": "514:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 958,
											"src": "509:10:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 953,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "509:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 957,
											"mutability": "mutable",
											"name": "max",
											"nameLocation": "589:3:6",
											"nodeType": "VariableDeclaration",
											"scope": 958,
											"src": "584:8:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 956,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "584:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Topic",
									"nameLocation": "393:5:6",
									"nodeType": "StructDefinition",
									"scope": 1358,
									"src": "386:214:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "608:44:6",
										"text": " @dev Earnings each vote"
									},
									"functionSelector": "a6c2da4c",
									"id": 964,
									"mutability": "mutable",
									"name": "_rewards",
									"nameLocation": "670:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1358,
									"src": "658:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 960,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "658:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										},
										"id": 963,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 961,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "681:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 962,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "686:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "681:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9a383dfd",
									"id": 968,
									"mutability": "mutable",
									"name": "_topics",
									"nameLocation": "714:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1358,
									"src": "699:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Topic_$958_storage_$dyn_storage",
										"typeString": "struct BiasProtocol.Topic[]"
									},
									"typeName": {
										"baseType": {
											"id": 966,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 965,
												"name": "Topic",
												"nameLocations": [
													"699:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 958,
												"src": "699:5:6"
											},
											"referencedDeclaration": 958,
											"src": "699:5:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Topic_$958_storage_ptr",
												"typeString": "struct BiasProtocol.Topic"
											}
										},
										"id": 967,
										"nodeType": "ArrayTypeName",
										"src": "699:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Topic_$958_storage_$dyn_storage_ptr",
											"typeString": "struct BiasProtocol.Topic[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "728:46:6",
										"text": " @dev Votes result storage"
									},
									"functionSelector": "63b6ad97",
									"id": 975,
									"mutability": "mutable",
									"name": "_votes",
									"nameLocation": "826:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1358,
									"src": "780:52:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 974,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 970,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "788:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "780:38:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 973,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 971,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "804:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "796:21:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 972,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "812:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "841:46:6",
										"text": " @dev Voter counts storage"
									},
									"functionSelector": "93ad4aca",
									"id": 980,
									"mutability": "mutable",
									"name": "_voterCounts",
									"nameLocation": "922:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1358,
									"src": "893:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 979,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 977,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "901:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "893:21:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 978,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "909:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "943:193:6",
										"text": " @dev Each user is allowed to create one live topic at the time. Once the topic is fulfilled the user could create the next topic. The purpose is to decrease verbose topics."
									},
									"id": 985,
									"mutability": "mutable",
									"name": "_living",
									"nameLocation": "1175:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1358,
									"src": "1142:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 984,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 982,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1150:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1142:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 983,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1161:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 988,
									"mutability": "mutable",
									"name": "_credentialVerifier",
									"nameLocation": "1216:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1358,
									"src": "1189:46:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_CredentialVerifier_$1414",
										"typeString": "contract CredentialVerifier"
									},
									"typeName": {
										"id": 987,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 986,
											"name": "CredentialVerifier",
											"nameLocations": [
												"1189:18:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1414,
											"src": "1189:18:6"
										},
										"referencedDeclaration": 1414,
										"src": "1189:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_CredentialVerifier_$1414",
											"typeString": "contract CredentialVerifier"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "68229099",
									"id": 992,
									"mutability": "mutable",
									"name": "_lastJoinTime",
									"nameLocation": "1279:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1358,
									"src": "1244:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 991,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 989,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1252:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1244:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 990,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1263:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 995,
									"mutability": "constant",
									"name": "DAY_IN_SECONDS",
									"nameLocation": "1316:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1358,
									"src": "1299:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 993,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1299:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3836343030",
										"id": 994,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1333:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "86400"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "1402:122:6",
										"statements": [
											{
												"expression": {
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1006,
														"name": "_credentialVerifier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "1428:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CredentialVerifier_$1414",
															"typeString": "contract CredentialVerifier"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307863393461426630323932416330344141433138433235316439433831363961386464324242624443",
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1473:42:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xc94aBf0292Ac04AAC18C251d9C8169a8dd2BBbDC"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "1450:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_CredentialVerifier_$1414_$",
																"typeString": "function (address) returns (contract CredentialVerifier)"
															},
															"typeName": {
																"id": 1008,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1007,
																	"name": "CredentialVerifier",
																	"nameLocations": [
																		"1454:18:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1414,
																	"src": "1454:18:6"
																},
																"referencedDeclaration": 1414,
																"src": "1454:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_CredentialVerifier_$1414",
																	"typeString": "contract CredentialVerifier"
																}
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1450:66:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CredentialVerifier_$1414",
															"typeString": "contract CredentialVerifier"
														}
													},
													"src": "1428:88:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CredentialVerifier_$1414",
														"typeString": "contract CredentialVerifier"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "1428:88:6"
											}
										]
									},
									"id": 1015,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "42494153",
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1367:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ac090b3ed89d7f1e41bcf8eef4dd8f0b4b511a42074ed66811e4fa54d7efc08e",
														"typeString": "literal_string \"BIAS\""
													},
													"value": "BIAS"
												},
												{
													"hexValue": "42494153",
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1375:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ac090b3ed89d7f1e41bcf8eef4dd8f0b4b511a42074ed66811e4fa54d7efc08e",
														"typeString": "literal_string \"BIAS\""
													},
													"value": "BIAS"
												}
											],
											"id": 1000,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 997,
												"name": "ERC20",
												"nameLocations": [
													"1361:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1361:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1361:21:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1002,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1391:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1395:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1391:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1004,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1001,
												"name": "Ownable",
												"nameLocations": [
													"1383:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1383:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1383:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:2:6"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1402:0:6"
									},
									"scope": 1358,
									"src": "1347:177:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "1940:700:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1032,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2011:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2015:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2011:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1034,
																	"name": "gitcoinPassUid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "2023:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1030,
																	"name": "_credentialVerifier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "1973:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CredentialVerifier_$1414",
																		"typeString": "contract CredentialVerifier"
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1993:17:6",
																"memberName": "verifyGitcionPass",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1395,
																"src": "1973:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$returns$_t_bool_$",
																	"typeString": "function (address,bytes32) external returns (bool)"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1973:65:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420617574686f72697a6564",
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2053:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8aed0440c9cacb4460ecdd12f6aff03c27cace39666d71f0946a6f3e9022a4a1",
																"typeString": "literal_string \"not authorized\""
															},
															"value": "not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8aed0440c9cacb4460ecdd12f6aff03c27cace39666d71f0946a6f3e9022a4a1",
																"typeString": "literal_string \"not authorized\""
															}
														],
														"id": 1029,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1951:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:129:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "1951:129:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1040,
																		"name": "topicTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1357,
																		"src": "2113:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2113:12:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2127:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2113:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1045,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "2144:3:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 1046,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2148:6:6",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "2144:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1044,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 385,
																					"src": "2134:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view returns (uint256)"
																					}
																				},
																				"id": 1047,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2134:21:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 1048,
																				"name": "funds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1022,
																				"src": "2159:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2134:30:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1050,
																				"name": "funds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1022,
																				"src": "2168:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1053,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1051,
																								"name": "max",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1024,
																								"src": "2178:3:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1052,
																								"name": "_rewards",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 964,
																								"src": "2184:8:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2178:14:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1054,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2177:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "3130",
																					"id": 1055,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2196:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"src": "2177:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2168:30:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2134:64:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1059,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2132:67:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2113:86:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e742066756e6473",
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2214:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
																"typeString": "literal_string \"insufficient funds\""
															},
															"value": "insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
																"typeString": "literal_string \"insufficient funds\""
															}
														],
														"id": 1039,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2091:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:154:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "2091:154:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1065,
																"name": "max",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "2264:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2270:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2264:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420706172616d73",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2273:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ac5ac7e4af96b704de23383a91c10346f729e9b7855b951aeea8b541e93db654",
																"typeString": "literal_string \"invalid params\""
															},
															"value": "invalid params"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ac5ac7e4af96b704de23383a91c10346f729e9b7855b951aeea8b541e93db654",
																"typeString": "literal_string \"invalid params\""
															}
														],
														"id": 1064,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2256:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2256:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "2256:34:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1072,
																	"name": "_living",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "2309:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1075,
																"indexExpression": {
																	"expression": {
																		"id": 1073,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2317:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2321:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2317:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2309:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2332:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2309:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c7920616c6c6f77206f6e65206c69766520746f706963",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2335:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6619efcaf1bc721f319537fb44a587a6e8004ad3ee4c5a0847daaa09d4052d3",
																"typeString": "literal_string \"only allow one live topic\""
															},
															"value": "only allow one live topic"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6619efcaf1bc721f319537fb44a587a6e8004ad3ee4c5a0847daaa09d4052d3",
																"typeString": "literal_string \"only allow one live topic\""
															}
														],
														"id": 1071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2301:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2301:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "2301:62:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1081,
															"name": "topicTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "2377:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2377:12:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2390:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2377:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1092,
												"nodeType": "IfStatement",
												"src": "2374:97:6",
												"trueBody": {
													"id": 1091,
													"nodeType": "Block",
													"src": "2392:79:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1086,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2441:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2445:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2441:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1088,
																		"name": "funds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1022,
																		"src": "2453:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1085,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "2435:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2435:24:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1090,
															"nodeType": "ExpressionStatement",
															"src": "2435:24:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1097,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2514:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2518:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2514:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 1099,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2526:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2532:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2526:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1101,
																	"name": "title",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "2543:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 1102,
																	"name": "content",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "2550:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 1103,
																	"name": "funds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "2559:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1104,
																	"name": "max",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "2566:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1096,
																"name": "Topic",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "2508:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Topic_$958_storage_ptr_$",
																	"typeString": "type(struct BiasProtocol.Topic storage pointer)"
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2508:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Topic_$958_memory_ptr",
																"typeString": "struct BiasProtocol.Topic memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Topic_$958_memory_ptr",
																"typeString": "struct BiasProtocol.Topic memory"
															}
														],
														"expression": {
															"id": 1093,
															"name": "_topics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "2481:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Topic_$958_storage_$dyn_storage",
																"typeString": "struct BiasProtocol.Topic storage ref[] storage ref"
															}
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2489:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2481:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Topic_$958_storage_$dyn_storage_ptr_$_t_struct$_Topic_$958_storage_$returns$__$attached_to$_t_array$_t_struct$_Topic_$958_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct BiasProtocol.Topic storage ref[] storage pointer,struct BiasProtocol.Topic storage ref)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2481:100:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "2481:100:6"
											},
											{
												"expression": {
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1108,
															"name": "_living",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "2592:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1111,
														"indexExpression": {
															"expression": {
																"id": 1109,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2600:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2604:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2600:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2592:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1112,
																"name": "_topics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "2614:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Topic_$958_storage_$dyn_storage",
																	"typeString": "struct BiasProtocol.Topic storage ref[] storage ref"
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2622:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2614:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2631:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2614:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2592:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "2592:40:6"
											}
										]
									},
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "1532:237:6",
										"text": " @dev The fund must be more than 10% voter rewards; The creators could get refunds when the topic is fulfilled. It is designed to decrease outdated topics and the creators should choose the participants numebr wisely."
									},
									"functionSelector": "0a05b17f",
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "create",
									"nameLocation": "1784:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "title",
												"nameLocation": "1815:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1801:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1017,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1801:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "content",
												"nameLocation": "1845:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1831:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1019,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1831:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "funds",
												"nameLocation": "1868:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1863:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "max",
												"nameLocation": "1889:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1884:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1884:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "gitcoinPassUid",
												"nameLocation": "1911:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1903:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:142:6"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1940:0:6"
									},
									"scope": 1358,
									"src": "1775:865:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "2708:40:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1127,
														"name": "_topics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "2726:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Topic_$958_storage_$dyn_storage",
															"typeString": "struct BiasProtocol.Topic storage ref[] storage ref"
														}
													},
													"id": 1129,
													"indexExpression": {
														"id": 1128,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "2734:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2726:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Topic_$958_storage",
														"typeString": "struct BiasProtocol.Topic storage ref"
													}
												},
												"functionReturnParameters": 1126,
												"id": 1130,
												"nodeType": "Return",
												"src": "2719:21:6"
											}
										]
									},
									"functionSelector": "cda411be",
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "topicAt",
									"nameLocation": "2657:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2670:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2665:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2665:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2664:12:6"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2693:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Topic_$958_memory_ptr",
													"typeString": "struct BiasProtocol.Topic"
												},
												"typeName": {
													"id": 1124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1123,
														"name": "Topic",
														"nameLocations": [
															"2693:5:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 958,
														"src": "2693:5:6"
													},
													"referencedDeclaration": 958,
													"src": "2693:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Topic_$958_storage_ptr",
														"typeString": "struct BiasProtocol.Topic"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:15:6"
									},
									"scope": 1358,
									"src": "2648:100:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "2902:841:6",
										"statements": [
											{
												"assignments": [
													1143
												],
												"declarations": [
													{
														"constant": false,
														"id": 1143,
														"mutability": "mutable",
														"name": "weight",
														"nameLocation": "2918:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1250,
														"src": "2913:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1142,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2913:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1150,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1146,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2972:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2976:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2972:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1148,
															"name": "gitcoinPassUid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "2997:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1144,
															"name": "_credentialVerifier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "2927:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CredentialVerifier_$1414",
																"typeString": "contract CredentialVerifier"
															}
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2947:10:6",
														"memberName": "calcWeight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1413,
														"src": "2927:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$returns$_t_uint256_$",
															"typeString": "function (address,bytes32) external returns (uint256)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2927:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2913:109:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1152,
																"name": "weight",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "3041:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3050:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3041:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420617574686f72697a6564",
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3053:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8aed0440c9cacb4460ecdd12f6aff03c27cace39666d71f0946a6f3e9022a4a1",
																"typeString": "literal_string \"not authorized\""
															},
															"value": "not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8aed0440c9cacb4460ecdd12f6aff03c27cace39666d71f0946a6f3e9022a4a1",
																"typeString": "literal_string \"not authorized\""
															}
														],
														"id": 1151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3033:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3033:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "3033:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1159,
																	"name": "_voterCounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "3089:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1161,
																"indexExpression": {
																	"id": 1160,
																	"name": "topicId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "3102:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3089:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1162,
																		"name": "_topics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "3113:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Topic_$958_storage_$dyn_storage",
																			"typeString": "struct BiasProtocol.Topic storage ref[] storage ref"
																		}
																	},
																	"id": 1164,
																	"indexExpression": {
																		"id": 1163,
																		"name": "topicId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1135,
																		"src": "3121:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3113:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Topic_$958_storage",
																		"typeString": "struct BiasProtocol.Topic storage ref"
																	}
																},
																"id": 1165,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3130:3:6",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 957,
																"src": "3113:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3089:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "66696e6973686564",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3135:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7b33a07f1644fab5bc0af6f7c06c8dceb370139ee7f9ae35b70dfee8eda3c95a",
																"typeString": "literal_string \"finished\""
															},
															"value": "finished"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7b33a07f1644fab5bc0af6f7c06c8dceb370139ee7f9ae35b70dfee8eda3c95a",
																"typeString": "literal_string \"finished\""
															}
														],
														"id": 1158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3081:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3081:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "3081:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1171,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3179:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3185:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3179:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1173,
																		"name": "_lastJoinTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "3198:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1176,
																	"indexExpression": {
																		"expression": {
																			"id": 1174,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3212:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3216:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3212:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3198:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1177,
																	"name": "DAY_IN_SECONDS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "3226:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3198:42:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3179:61:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e63652070657220646179",
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3255:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7deba3c42fe79f0d026f6bfe980b7d76c2e95599426008e43856a5b7cd99c5e2",
																"typeString": "literal_string \"once per day\""
															},
															"value": "once per day"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7deba3c42fe79f0d026f6bfe980b7d76c2e95599426008e43856a5b7cd99c5e2",
																"typeString": "literal_string \"once per day\""
															}
														],
														"id": 1170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3157:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:123:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "3157:123:6"
											},
											{
												"expression": {
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1183,
															"name": "_lastJoinTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "3291:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1186,
														"indexExpression": {
															"expression": {
																"id": 1184,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3305:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3309:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3305:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3291:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1187,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3319:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3325:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3319:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3291:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "3291:43:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1192,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3367:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3371:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3367:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1194,
																	"name": "_rewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "3392:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1195,
																	"name": "weight",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "3403:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3392:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1197,
																			"name": "_topics",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 968,
																			"src": "3412:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Topic_$958_storage_$dyn_storage",
																				"typeString": "struct BiasProtocol.Topic storage ref[] storage ref"
																			}
																		},
																		"id": 1199,
																		"indexExpression": {
																			"id": 1198,
																			"name": "topicId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "3420:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3412:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Topic_$958_storage",
																			"typeString": "struct BiasProtocol.Topic storage ref"
																		}
																	},
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3429:5:6",
																	"memberName": "funds",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 954,
																	"src": "3412:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1201,
																			"name": "_topics",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 968,
																			"src": "3437:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Topic_$958_storage_$dyn_storage",
																				"typeString": "struct BiasProtocol.Topic storage ref[] storage ref"
																			}
																		},
																		"id": 1203,
																		"indexExpression": {
																			"id": 1202,
																			"name": "topicId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "3445:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3437:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Topic_$958_storage",
																			"typeString": "struct BiasProtocol.Topic storage ref"
																		}
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3454:3:6",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "3437:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3412:45:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3392:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1191,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "3347:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3347:121:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "3347:121:6"
											},
											{
												"expression": {
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1209,
															"name": "_voterCounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "3479:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1211,
														"indexExpression": {
															"id": 1210,
															"name": "topicId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "3492:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3479:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3504:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3479:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "3479:26:6"
											},
											{
												"expression": {
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1215,
																"name": "_votes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "3516:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(uint256 => uint256))"
																}
															},
															"id": 1218,
															"indexExpression": {
																"id": 1216,
																"name": "topicId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1135,
																"src": "3523:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3516:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1219,
														"indexExpression": {
															"id": 1217,
															"name": "voteFor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "3532:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3516:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1220,
														"name": "weight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "3544:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3516:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "3516:34:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1224,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3571:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3575:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3571:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1226,
															"name": "topicId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "3583:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1227,
															"name": "voteFor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "3592:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1228,
															"name": "weight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "3601:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1223,
														"name": "Vote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "3566:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3566:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "EmitStatement",
												"src": "3561:47:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1231,
															"name": "_voterCounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "3625:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1233,
														"indexExpression": {
															"id": 1232,
															"name": "topicId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "3638:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3625:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1234,
																"name": "_topics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "3650:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Topic_$958_storage_$dyn_storage",
																	"typeString": "struct BiasProtocol.Topic storage ref[] storage ref"
																}
															},
															"id": 1236,
															"indexExpression": {
																"id": 1235,
																"name": "topicId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1135,
																"src": "3658:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3650:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Topic_$958_storage",
																"typeString": "struct BiasProtocol.Topic storage ref"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3667:3:6",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 957,
														"src": "3650:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3625:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1249,
												"nodeType": "IfStatement",
												"src": "3621:115:6",
												"trueBody": {
													"id": 1248,
													"nodeType": "Block",
													"src": "3672:64:6",
													"statements": [
														{
															"expression": {
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1239,
																		"name": "_living",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "3687:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1244,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1240,
																				"name": "_topics",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 968,
																				"src": "3695:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Topic_$958_storage_$dyn_storage",
																					"typeString": "struct BiasProtocol.Topic storage ref[] storage ref"
																				}
																			},
																			"id": 1242,
																			"indexExpression": {
																				"id": 1241,
																				"name": "topicId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1135,
																				"src": "3703:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3695:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Topic_$958_storage",
																				"typeString": "struct BiasProtocol.Topic storage ref"
																			}
																		},
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3712:7:6",
																		"memberName": "creator",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 946,
																		"src": "3695:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3687:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3723:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3687:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1247,
															"nodeType": "ExpressionStatement",
															"src": "3687:37:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "2756:67:6",
										"text": " @dev Each single user could vote once per day."
									},
									"functionSelector": "8c881eeb",
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nameLocation": "2838:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "topicId",
												"nameLocation": "2848:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "2843:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2843:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "voteFor",
												"nameLocation": "2862:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "2857:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2857:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "gitcoinPassUid",
												"nameLocation": "2879:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "2871:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1138,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2842:52:6"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2902:0:6"
									},
									"scope": 1358,
									"src": "2829:914:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "3893:219:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1258,
																	"name": "_voterCounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "3912:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1260,
																"indexExpression": {
																	"id": 1259,
																	"name": "topicId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "3925:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3912:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1261,
																		"name": "_topics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "3937:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Topic_$958_storage_$dyn_storage",
																			"typeString": "struct BiasProtocol.Topic storage ref[] storage ref"
																		}
																	},
																	"id": 1263,
																	"indexExpression": {
																		"id": 1262,
																		"name": "topicId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1254,
																		"src": "3945:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3937:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Topic_$958_storage",
																		"typeString": "struct BiasProtocol.Topic storage ref"
																	}
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3954:3:6",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 957,
																"src": "3937:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3912:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742066696e6973686564",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3959:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_81ccd3d8524e842a4d558b20780b5b6a25069ed5264032cfb1fc8542f9c0bca4",
																"typeString": "literal_string \"not finished\""
															},
															"value": "not finished"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_81ccd3d8524e842a4d558b20780b5b6a25069ed5264032cfb1fc8542f9c0bca4",
																"typeString": "literal_string \"not finished\""
															}
														],
														"id": 1257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3904:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3904:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "3904:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1270,
																		"name": "_topics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "3993:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Topic_$958_storage_$dyn_storage",
																			"typeString": "struct BiasProtocol.Topic storage ref[] storage ref"
																		}
																	},
																	"id": 1272,
																	"indexExpression": {
																		"id": 1271,
																		"name": "topicId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1254,
																		"src": "4001:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3993:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Topic_$958_storage",
																		"typeString": "struct BiasProtocol.Topic storage ref"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4010:7:6",
																"memberName": "creator",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 946,
																"src": "3993:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1274,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4021:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4025:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4021:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3993:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792063726561746f72",
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4033:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6062e555f70deb1ff2dfd4fda06937887a2a3a7db3bc7c48953073540fee91a6",
																"typeString": "literal_string \"only creator\""
															},
															"value": "only creator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6062e555f70deb1ff2dfd4fda06937887a2a3a7db3bc7c48953073540fee91a6",
																"typeString": "literal_string \"only creator\""
															}
														],
														"id": 1269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3985:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "3985:63:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1281,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4065:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4069:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4065:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1283,
																		"name": "_topics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "4077:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Topic_$958_storage_$dyn_storage",
																			"typeString": "struct BiasProtocol.Topic storage ref[] storage ref"
																		}
																	},
																	"id": 1285,
																	"indexExpression": {
																		"id": 1284,
																		"name": "topicId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1254,
																		"src": "4085:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4077:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Topic_$958_storage",
																		"typeString": "struct BiasProtocol.Topic storage ref"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4094:5:6",
																"memberName": "funds",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 954,
																"src": "4077:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "35",
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4102:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															"src": "4077:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1280,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "4059:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4059:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "4059:45:6"
											}
										]
									},
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "3751:93:6",
										"text": " @dev A successful votings could redeem the funds and receive a 10% bonus"
									},
									"functionSelector": "0962ef79",
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "3859:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "topicId",
												"nameLocation": "3877:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3872:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3872:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3871:14:6"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3893:0:6"
									},
									"scope": 1358,
									"src": "3850:262:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "4270:38:6",
										"statements": [
											{
												"expression": {
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1300,
														"name": "_rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "4281:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1301,
														"name": "rewards_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "4292:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4281:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "4281:19:6"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "4120:89:6",
										"text": " @dev the owner could be migrated to the relayer of inflation control"
									},
									"functionSelector": "b1e95e94",
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1298,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1297,
												"name": "onlyOwner",
												"nameLocations": [
													"4260:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4260:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4260:9:6"
										}
									],
									"name": "updateRewards",
									"nameLocation": "4224:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "rewards_",
												"nameLocation": "4243:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4238:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4238:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4237:15:6"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4270:0:6"
									},
									"scope": 1358,
									"src": "4215:93:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "4401:138:6",
										"statements": [
											{
												"expression": {
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1316,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "4412:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Topic_$958_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct BiasProtocol.Topic memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1321,
																"name": "number",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1309,
																"src": "4433:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "4421:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Topic_$958_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (struct BiasProtocol.Topic memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1318,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 1317,
																		"name": "Topic",
																		"nameLocations": [
																			"4425:5:6"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 958,
																		"src": "4425:5:6"
																	},
																	"referencedDeclaration": 958,
																	"src": "4425:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Topic_$958_storage_ptr",
																		"typeString": "struct BiasProtocol.Topic"
																	}
																},
																"id": 1319,
																"nodeType": "ArrayTypeName",
																"src": "4425:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Topic_$958_storage_$dyn_storage_ptr",
																	"typeString": "struct BiasProtocol.Topic[]"
																}
															}
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4421:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Topic_$958_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct BiasProtocol.Topic memory[] memory"
														}
													},
													"src": "4412:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Topic_$958_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct BiasProtocol.Topic memory[] memory"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "4412:28:6"
											},
											{
												"body": {
													"id": 1345,
													"nodeType": "Block",
													"src": "4477:55:6",
													"statements": [
														{
															"expression": {
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1335,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1314,
																		"src": "4492:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Topic_$958_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct BiasProtocol.Topic memory[] memory"
																		}
																	},
																	"id": 1337,
																	"indexExpression": {
																		"id": 1336,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1326,
																		"src": "4499:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4492:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Topic_$958_memory_ptr",
																		"typeString": "struct BiasProtocol.Topic memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1338,
																		"name": "_topics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "4504:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Topic_$958_storage_$dyn_storage",
																			"typeString": "struct BiasProtocol.Topic storage ref[] storage ref"
																		}
																	},
																	"id": 1342,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1339,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1326,
																			"src": "4512:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1340,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1307,
																			"src": "4514:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4512:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4504:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Topic_$958_storage",
																		"typeString": "struct BiasProtocol.Topic storage ref"
																	}
																},
																"src": "4492:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Topic_$958_memory_ptr",
																	"typeString": "struct BiasProtocol.Topic memory"
																}
															},
															"id": 1344,
															"nodeType": "ExpressionStatement",
															"src": "4492:28:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1329,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "4464:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1330,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "4466:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4464:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1346,
												"initializationExpression": {
													"assignments": [
														1326
													],
													"declarations": [
														{
															"constant": false,
															"id": 1326,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4460:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1346,
															"src": "4455:6:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1325,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4455:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1328,
													"initialValue": {
														"hexValue": "30",
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4462:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4455:8:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4473:3:6",
														"subExpression": {
															"id": 1332,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "4473:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1334,
													"nodeType": "ExpressionStatement",
													"src": "4473:3:6"
												},
												"nodeType": "ForStatement",
												"src": "4451:81:6"
											}
										]
									},
									"functionSelector": "ed2e39a7",
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "topics",
									"nameLocation": "4325:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "4337:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "4332:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4332:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "number",
												"nameLocation": "4349:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "4344:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4344:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4331:25:6"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4393:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "4378:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Topic_$958_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct BiasProtocol.Topic[]"
												},
												"typeName": {
													"baseType": {
														"id": 1312,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1311,
															"name": "Topic",
															"nameLocations": [
																"4378:5:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 958,
															"src": "4378:5:6"
														},
														"referencedDeclaration": 958,
														"src": "4378:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Topic_$958_storage_ptr",
															"typeString": "struct BiasProtocol.Topic"
														}
													},
													"id": 1313,
													"nodeType": "ArrayTypeName",
													"src": "4378:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Topic_$958_storage_$dyn_storage_ptr",
														"typeString": "struct BiasProtocol.Topic[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4377:23:6"
									},
									"scope": 1358,
									"src": "4316:223:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "4595:40:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1353,
														"name": "_topics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "4613:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Topic_$958_storage_$dyn_storage",
															"typeString": "struct BiasProtocol.Topic storage ref[] storage ref"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4621:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4613:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1352,
												"id": 1355,
												"nodeType": "Return",
												"src": "4606:21:6"
											}
										]
									},
									"functionSelector": "f7cb2657",
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "topicTotal",
									"nameLocation": "4556:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4566:2:6"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "4590:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4590:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4589:6:6"
									},
									"scope": 1358,
									"src": "4547:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1359,
							"src": "209:4429:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								944
							]
						}
					],
					"src": "33:4607:6"
				},
				"id": 6
			},
			"contracts/CredentialVerifier.sol": {
				"ast": {
					"absolutePath": "contracts/CredentialVerifier.sol",
					"exportedSymbols": {
						"Context": [
							925
						],
						"CredentialVerifier": [
							1414
						],
						"IGitcoinResolver": [
							1423
						],
						"Ownable": [
							147
						]
					},
					"id": 1415,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1360,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1361,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1415,
							"sourceUnit": 148,
							"src": "60:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IGitcoinResolver.sol",
							"file": "./IGitcoinResolver.sol",
							"id": 1362,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1415,
							"sourceUnit": 1424,
							"src": "114:32:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1363,
										"name": "Ownable",
										"nameLocations": [
											"181:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "181:7:7"
									},
									"id": 1364,
									"nodeType": "InheritanceSpecifier",
									"src": "181:7:7"
								}
							],
							"canonicalName": "CredentialVerifier",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1414,
							"linearizedBaseContracts": [
								1414,
								147,
								925
							],
							"name": "CredentialVerifier",
							"nameLocation": "159:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1367,
									"mutability": "mutable",
									"name": "_gitcoinResolver",
									"nameLocation": "227:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 1414,
									"src": "202:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IGitcoinResolver_$1423",
										"typeString": "contract IGitcoinResolver"
									},
									"typeName": {
										"id": 1366,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1365,
											"name": "IGitcoinResolver",
											"nameLocations": [
												"202:16:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1423,
											"src": "202:16:7"
										},
										"referencedDeclaration": 1423,
										"src": "202:16:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IGitcoinResolver_$1423",
											"typeString": "contract IGitcoinResolver"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "319:79:7",
										"statements": [
											{
												"expression": {
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1376,
														"name": "_gitcoinResolver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "330:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IGitcoinResolver_$1423",
															"typeString": "contract IGitcoinResolver"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1378,
																"name": "gitcoinResolverAddress_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "366:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1377,
															"name": "IGitcoinResolver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "349:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IGitcoinResolver_$1423_$",
																"typeString": "type(contract IGitcoinResolver)"
															}
														},
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "349:41:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IGitcoinResolver_$1423",
															"typeString": "contract IGitcoinResolver"
														}
													},
													"src": "330:60:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IGitcoinResolver_$1423",
														"typeString": "contract IGitcoinResolver"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "330:60:7"
											}
										]
									},
									"id": 1383,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1372,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "305:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "305:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1374,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1371,
												"name": "Ownable",
												"nameLocations": [
													"297:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "297:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "297:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "gitcoinResolverAddress_",
												"nameLocation": "272:23:7",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "264:31:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "263:33:7"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "319:0:7"
									},
									"scope": 1414,
									"src": "252:146:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "483:126:7",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "521:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1391,
												"id": 1393,
												"nodeType": "Return",
												"src": "514:11:7"
											}
										]
									},
									"functionSelector": "2ca835a8",
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyGitcionPass",
									"nameLocation": "415:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "441:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "433:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "uid",
												"nameLocation": "456:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "448:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1386,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:28:7"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "477:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "477:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:6:7"
									},
									"scope": 1414,
									"src": "406:203:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "687:203:7",
										"statements": [
											{
												"condition": {
													"hexValue": "74727565",
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "722:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"falseBody": {
													"id": 1410,
													"nodeType": "Block",
													"src": "848:35:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "870:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1403,
															"id": 1409,
															"nodeType": "Return",
															"src": "863:8:7"
														}
													]
												},
												"id": 1411,
												"nodeType": "IfStatement",
												"src": "718:165:7",
												"trueBody": {
													"id": 1407,
													"nodeType": "Block",
													"src": "728:114:7",
													"statements": [
														{
															"expression": {
																"hexValue": "31",
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "829:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"functionReturnParameters": 1403,
															"id": 1406,
															"nodeType": "Return",
															"src": "822:8:7"
														}
													]
												}
											}
										]
									},
									"functionSelector": "bd75aae8",
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcWeight",
									"nameLocation": "626:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "645:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "637:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "uid",
												"nameLocation": "660:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "652:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1398,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:28:7"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "681:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "681:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:6:7"
									},
									"scope": 1414,
									"src": "617:273:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1415,
							"src": "150:842:7",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "33:961:7"
				},
				"id": 7
			},
			"contracts/IGitcoinResolver.sol": {
				"ast": {
					"absolutePath": "contracts/IGitcoinResolver.sol",
					"exportedSymbols": {
						"IGitcoinResolver": [
							1423
						]
					},
					"id": 1424,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1416,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IGitcoinResolver",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1423,
							"linearizedBaseContracts": [
								1423
							],
							"name": "IGitcoinResolver",
							"nameLocation": "69:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d757e575",
									"id": 1422,
									"mutability": "mutable",
									"name": "userAttestations",
									"nameLocation": "148:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1423,
									"src": "93:71:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes32_$_$",
										"typeString": "mapping(address => mapping(bytes32 => bytes32))"
									},
									"typeName": {
										"id": 1421,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1417,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "101:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "93:47:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes32_$_$",
											"typeString": "mapping(address => mapping(bytes32 => bytes32))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1420,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1418,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "120:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"nodeType": "Mapping",
											"src": "112:27:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
												"typeString": "mapping(bytes32 => bytes32)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1419,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "131:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											}
										}
									},
									"visibility": "public"
								}
							],
							"scope": 1424,
							"src": "60:108:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:135:8"
				},
				"id": 8
			}
		}
	}
}