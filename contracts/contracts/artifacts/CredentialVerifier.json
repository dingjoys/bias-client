{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {
				"@_194": {
					"entryPoint": null,
					"id": 194,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"@_50": {
					"entryPoint": null,
					"id": 50,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"@_msgSender_159": {
					"entryPoint": null,
					"id": 159,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@_transferOwnership_146": {
					"entryPoint": 130,
					"id": 146,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"abi_decode_tuple_t_address_fromMemory": {
					"entryPoint": 209,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:514:4",
						"statements": [
							{
								"nodeType": "YulBlock",
								"src": "6:3:4",
								"statements": []
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "95:209:4",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "141:16:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "150:1:4",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "153:1:4",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "143:6:4"
															},
															"nodeType": "YulFunctionCall",
															"src": "143:12:4"
														},
														"nodeType": "YulExpressionStatement",
														"src": "143:12:4"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "116:7:4"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "125:9:4"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "112:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "112:23:4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "137:2:4",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "108:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "108:32:4"
											},
											"nodeType": "YulIf",
											"src": "105:52:4"
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "166:29:4",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "185:9:4"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "179:5:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "179:16:4"
											},
											"variables": [
												{
													"name": "value",
													"nodeType": "YulTypedName",
													"src": "170:5:4",
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "258:16:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "267:1:4",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "270:1:4",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "260:6:4"
															},
															"nodeType": "YulFunctionCall",
															"src": "260:12:4"
														},
														"nodeType": "YulExpressionStatement",
														"src": "260:12:4"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "217:5:4"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "243:3:4",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "248:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "239:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "239:11:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "252:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:19:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:31:4"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "214:2:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "214:42:4"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "207:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "207:50:4"
											},
											"nodeType": "YulIf",
											"src": "204:70:4"
										},
										{
											"nodeType": "YulAssignment",
											"src": "283:15:4",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "293:5:4"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "283:6:4"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "61:9:4",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "72:7:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "84:6:4",
										"type": ""
									}
								],
								"src": "14:290:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "410:102:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "420:26:4",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "432:9:4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "443:2:4",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "428:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "428:18:4"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "420:4:4"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "462:9:4"
													},
													{
														"arguments": [
															{
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "477:6:4"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "493:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "498:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "489:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:11:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "502:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "485:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:19:4"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "473:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "473:32:4"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "455:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "455:51:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "455:51:4"
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "379:9:4",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "390:6:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "401:4:4",
										"type": ""
									}
								],
								"src": "309:203:4"
							}
						]
					},
					"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
					"id": 4,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"linkReferences": {},
			"object": "608060405234801561000f575f80fd5b5060405161035d38038061035d83398101604081905261002e916100d1565b338061005357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005c81610082565b50600180546001600160a01b0319166001600160a01b03929092169190911790556100fe565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100e1575f80fd5b81516001600160a01b03811681146100f7575f80fd5b9392505050565b6102528061010b5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80632ca835a814610059578063715018a6146100815780638da5cb5b1461008b578063bd75aae8146100a5578063f2fde38b146100c6575b5f80fd5b61006c6100673660046101d4565b6100d9565b60405190151581526020015b60405180910390f35b6100896100e2565b005b5f546040516001600160a01b039091168152602001610078565b6100b86100b33660046101d4565b6100f5565b604051908152602001610078565b6100896100d43660046101fc565b6100fc565b60015b92915050565b6100ea61013e565b6100f35f61016a565b565b60016100dc565b61010461013e565b6001600160a01b03811661013257604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61013b8161016a565b50565b5f546001600160a01b031633146100f35760405163118cdaa760e01b8152336004820152602401610129565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146101cf575f80fd5b919050565b5f80604083850312156101e5575f80fd5b6101ee836101b9565b946020939093013593505050565b5f6020828403121561020c575f80fd5b610215826101b9565b939250505056fea264697066735822122060b739706bc2ffe4187c03f614cd620b154157954b354e2990d1d9f2654d9fb864736f6c63430008140033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x35D CODESIZE SUB DUP1 PUSH2 0x35D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xD1 JUMP JUMPDEST CALLER DUP1 PUSH2 0x53 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C DUP2 PUSH2 0x82 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xFE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x252 DUP1 PUSH2 0x10B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2CA835A8 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xBD75AAE8 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x67 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0xE2 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0xF5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0x89 PUSH2 0xD4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FC JUMP JUMPDEST PUSH2 0xFC JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEA PUSH2 0x13E JUMP JUMPDEST PUSH2 0xF3 PUSH0 PUSH2 0x16A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH2 0xDC JUMP JUMPDEST PUSH2 0x104 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x132 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13B DUP2 PUSH2 0x16A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x129 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1EE DUP4 PUSH2 0x1B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x215 DUP3 PUSH2 0x1B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xB7 CODECOPY PUSH17 0x6BC2FFE4187C03F614CD620B154157954B CALLDATALOAD 0x4E 0x29 SWAP1 0xD1 0xD9 CALLCODE PUSH6 0x4D9FB864736F PUSH13 0x63430008140033000000000000 ",
			"sourceMap": "150:842:2:-:0;;;252:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:1;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:4;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;330:16:2::1;:60:::0;;-1:-1:-1;;;;;;330:60:2::1;-1:-1:-1::0;;;;;330:60:2;;;::::1;::::0;;;::::1;::::0;;150:842;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:4:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:4;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:4:o;309:203::-;150:842:2;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@_checkOwner_84": {
					"entryPoint": 318,
					"id": 84,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@_msgSender_159": {
					"entryPoint": null,
					"id": 159,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@_transferOwnership_146": {
					"entryPoint": 362,
					"id": 146,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"@calcWeight_224": {
					"entryPoint": 245,
					"id": 224,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@owner_67": {
					"entryPoint": null,
					"id": 67,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@renounceOwnership_98": {
					"entryPoint": 226,
					"id": 98,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@transferOwnership_126": {
					"entryPoint": 252,
					"id": 126,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"@verifyGitcionPass_206": {
					"entryPoint": 217,
					"id": 206,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_address": {
					"entryPoint": 441,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_address": {
					"entryPoint": 508,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_addresst_bytes32": {
					"entryPoint": 468,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 2
				},
				"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:1221:4",
						"statements": [
							{
								"nodeType": "YulBlock",
								"src": "6:3:4",
								"statements": []
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "63:124:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "73:29:4",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "95:6:4"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "82:12:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "82:20:4"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "73:5:4"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "165:16:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "174:1:4",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "177:1:4",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "167:6:4"
															},
															"nodeType": "YulFunctionCall",
															"src": "167:12:4"
														},
														"nodeType": "YulExpressionStatement",
														"src": "167:12:4"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "124:5:4"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "135:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "150:3:4",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "155:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "146:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "146:11:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "159:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "142:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "142:19:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "131:31:4"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "121:2:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "121:42:4"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "114:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "114:50:4"
											},
											"nodeType": "YulIf",
											"src": "111:70:4"
										}
									]
								},
								"name": "abi_decode_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "42:6:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "53:5:4",
										"type": ""
									}
								],
								"src": "14:173:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "279:167:4",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "325:16:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "334:1:4",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "337:1:4",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "327:6:4"
															},
															"nodeType": "YulFunctionCall",
															"src": "327:12:4"
														},
														"nodeType": "YulExpressionStatement",
														"src": "327:12:4"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "300:7:4"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "309:9:4"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "296:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "296:23:4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "321:2:4",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "292:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "292:32:4"
											},
											"nodeType": "YulIf",
											"src": "289:52:4"
										},
										{
											"nodeType": "YulAssignment",
											"src": "350:39:4",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "379:9:4"
													}
												],
												"functionName": {
													"name": "abi_decode_address",
													"nodeType": "YulIdentifier",
													"src": "360:18:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "360:29:4"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "350:6:4"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "398:42:4",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "425:9:4"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "436:2:4",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "421:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "421:18:4"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "408:12:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "408:32:4"
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "398:6:4"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_addresst_bytes32",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "237:9:4",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "248:7:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "260:6:4",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "268:6:4",
										"type": ""
									}
								],
								"src": "192:254:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "546:92:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "556:26:4",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "568:9:4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "579:2:4",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "564:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "564:18:4"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "556:4:4"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "598:9:4"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "623:6:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "616:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:14:4"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "609:6:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "609:22:4"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "591:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "591:41:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "591:41:4"
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "515:9:4",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "526:6:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "537:4:4",
										"type": ""
									}
								],
								"src": "451:187:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "744:102:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "754:26:4",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "766:9:4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "777:2:4",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "762:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "762:18:4"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "754:4:4"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "796:9:4"
													},
													{
														"arguments": [
															{
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "811:6:4"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "827:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "832:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "823:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "823:11:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "836:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "819:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "819:19:4"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "807:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "807:32:4"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "789:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "789:51:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "789:51:4"
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "713:9:4",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "724:6:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "735:4:4",
										"type": ""
									}
								],
								"src": "643:203:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "952:76:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "962:26:4",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "974:9:4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "985:2:4",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "970:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "970:18:4"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "962:4:4"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1004:9:4"
													},
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1015:6:4"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "997:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "997:25:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "997:25:4"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "921:9:4",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "932:6:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "943:4:4",
										"type": ""
									}
								],
								"src": "851:177:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1103:116:4",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1149:16:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1158:1:4",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1161:1:4",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "1151:6:4"
															},
															"nodeType": "YulFunctionCall",
															"src": "1151:12:4"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1151:12:4"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1124:7:4"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1133:9:4"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "1120:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "1120:23:4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1145:2:4",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "1116:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "1116:32:4"
											},
											"nodeType": "YulIf",
											"src": "1113:52:4"
										},
										{
											"nodeType": "YulAssignment",
											"src": "1174:39:4",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1203:9:4"
													}
												],
												"functionName": {
													"name": "abi_decode_address",
													"nodeType": "YulIdentifier",
													"src": "1184:18:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "1184:29:4"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "1174:6:4"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1069:9:4",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "1080:7:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1092:6:4",
										"type": ""
									}
								],
								"src": "1033:186:4"
							}
						]
					},
					"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n}",
					"id": 4,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c80632ca835a814610059578063715018a6146100815780638da5cb5b1461008b578063bd75aae8146100a5578063f2fde38b146100c6575b5f80fd5b61006c6100673660046101d4565b6100d9565b60405190151581526020015b60405180910390f35b6100896100e2565b005b5f546040516001600160a01b039091168152602001610078565b6100b86100b33660046101d4565b6100f5565b604051908152602001610078565b6100896100d43660046101fc565b6100fc565b60015b92915050565b6100ea61013e565b6100f35f61016a565b565b60016100dc565b61010461013e565b6001600160a01b03811661013257604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61013b8161016a565b50565b5f546001600160a01b031633146100f35760405163118cdaa760e01b8152336004820152602401610129565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146101cf575f80fd5b919050565b5f80604083850312156101e5575f80fd5b6101ee836101b9565b946020939093013593505050565b5f6020828403121561020c575f80fd5b610215826101b9565b939250505056fea264697066735822122060b739706bc2ffe4187c03f614cd620b154157954b354e2990d1d9f2654d9fb864736f6c63430008140033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2CA835A8 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xBD75AAE8 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x67 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0xE2 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0xF5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0x89 PUSH2 0xD4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FC JUMP JUMPDEST PUSH2 0xFC JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEA PUSH2 0x13E JUMP JUMPDEST PUSH2 0xF3 PUSH0 PUSH2 0x16A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH2 0xDC JUMP JUMPDEST PUSH2 0x104 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x132 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13B DUP2 PUSH2 0x16A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x129 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1EE DUP4 PUSH2 0x1B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x215 DUP3 PUSH2 0x1B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xB7 CODECOPY PUSH17 0x6BC2FFE4187C03F614CD620B154157954B CALLDATALOAD 0x4E 0x29 SWAP1 0xD1 0xD9 CALLCODE PUSH6 0x4D9FB864736F PUSH13 0x63430008140033000000000000 ",
			"sourceMap": "150:842:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;406:203;;;;;;:::i;:::-;;:::i;:::-;;;616:14:4;;609:22;591:41;;579:2;564:18;406:203:2;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;789:51:4;;777:2;762:18;1638:85:0;643:203:4;617:273:2;;;;;;:::i;:::-;;:::i;:::-;;;997:25:4;;;985:2;970:18;617:273:2;851:177:4;2543:215:0;;;;;;:::i;:::-;;:::i;406:203:2:-;521:4;406:203;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;617:273:2:-;829:1;822:8;;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;789:51:4::0;762:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;789:51:4;762:18;;1901:40:0;643:203:4;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:173:4:-;82:20;;-1:-1:-1;;;;;131:31:4;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:4:o;1033:186::-;1092:6;1145:2;1133:9;1124:7;1120:23;1116:32;1113:52;;;1161:1;1158;1151:12;1113:52;1184:29;1203:9;1184:29;:::i;:::-;1174:39;1033:186;-1:-1:-1;;;1033:186:4:o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "118800",
				"executionCost": "infinite",
				"totalCost": "infinite"
			},
			"external": {
				"calcWeight(address,bytes32)": "447",
				"owner()": "2321",
				"renounceOwnership()": "infinite",
				"transferOwnership(address)": "28395",
				"verifyGitcionPass(address,bytes32)": "365"
			}
		},
		"methodIdentifiers": {
			"calcWeight(address,bytes32)": "bd75aae8",
			"owner()": "8da5cb5b",
			"renounceOwnership()": "715018a6",
			"transferOwnership(address)": "f2fde38b",
			"verifyGitcionPass(address,bytes32)": "2ca835a8"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "gitcoinResolverAddress_",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				}
			],
			"name": "OwnableInvalidOwner",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "OwnableUnauthorizedAccount",
			"type": "error"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "previousOwner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "OwnershipTransferred",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"internalType": "bytes32",
					"name": "uid",
					"type": "bytes32"
				}
			],
			"name": "calcWeight",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "renounceOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"internalType": "bytes32",
					"name": "uid",
					"type": "bytes32"
				}
			],
			"name": "verifyGitcionPass",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}